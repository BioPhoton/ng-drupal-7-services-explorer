/**
 * styles.js
 *
 * This file uses the config.js and helper.js file located in ./gulp
 *
 * This File requires following npm modules:
 * ``
 * $ npm install gulp gulp-load-plugins gulp-autoprefixer gulp-sass gulp-cssnano gulp-concat gulp-inject --save--dev
 * ``
 *
 */

'use strict';

var gulp = require('gulp'),
    helper = require('../helper'),
    $ = require('gulp-load-plugins')();

var config = require('../config.js'),
    assetsFolder = (config.assetsFolder)?config.client+config.assetsFolder:config.client+'assets/',
    assetsCssFolder = (config.assetsCssFolder)?config.assetsCssFolder:'css/',
    mainCssFile = (config.mainCssFile)?config.mainCssFile:'app.css',
    scssFoldername = (config.scssFoldername)?config.scssFoldername:'scss/';

var defaultConfig = {
        indexFile : config.buildFolder  + "index.html",
        sassScr : ["./scss/**/*.scss", config.clientApp + '**/'+scssFoldername+'*.scss'],
        sassDest : assetsFolder+assetsCssFolder,
        sassOptions : {
            indentWidth: 4,
            outputStyle: 'expanded',
            errorLogToConsole: true
        },
        scssOrder : [],
        autoprefixerOptions : {
            browsers: [
                '> 1%',
                'last 2 versions',
                'firefox >= 4',
                'safari 7',
                'safari 8',
                'IE 8',
                'IE 9',
                'IE 10',
                'IE 11'
            ],
            cascade: false
        }
    };

//////////////////


var  stylesConfig = defaultConfig;

/**
 *  Overrides
 *
 *  config.styles {[see defaultConfig here]}
 *
 **/

if('styles' in config) {
    stylesConfig = helper.arrayConcatExtend(defaultConfig, config.styles);
}

//__________________________________________________________________________________________________

gulp.task('css:inject',['css:compile'], function(done) {

  var target = gulp.src(stylesConfig.indexFile);
  var sources = gulp.src(stylesConfig.sassDest+'*.css', {read: false});
    helper.log('Wiring the css dependencies form '+sources+' into '+ target);

  return target
      .pipe($.inject(sources, {ignorePath: 'www', addRootSlash: false}))
      .pipe(gulp.dest(config.buildFolder), done);
});

//organize css files for project
gulp.task('css:clean', function(done) {
    helper.log('delete all autogenerated css files');
    return helper.clean([stylesConfig.sassDest + '**/*.*'], done);
});

gulp.task('css:compile', ['css:clean'], function(done) {
    helper.log('parsing scss from '+stylesConfig.sassScr+', autoprefixe and save it to '+stylesConfig.sassDest+mainCssFile);
    return gulp.src(stylesConfig.sassScr)
        .pipe($.concat(mainCssFile))
        //move plumber into helper.js
        //.pipe($.plumber()) // exit gracefully if something fails after this
        .pipe($.sass(stylesConfig.sassOptions))
        .pipe($.autoprefixer(stylesConfig.autoprefixerOptions))
        .pipe(gulp.dest(stylesConfig.sassDest), done);

});