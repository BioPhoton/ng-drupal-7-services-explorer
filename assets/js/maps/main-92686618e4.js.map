{"version":3,"sources":["app/app.js","app/components/navigation/navigation.controller.js","app/components/home/home.controller.js","app/components/auth/auth.controller.js","app/components/system/system.controller.js","app/components/user/user.controller.js"],"names":["configFunction","$stateProvider","$urlRouterProvider","DrupalApiConstant","drupal_instance","api_endpoint","otherwise","state","url","templateUrl","controller","angular","module","config","$inject","NavigationController","$scope","vm","this","navCollapsed","HomeController","AuthController","AuthenticationService","AuthenticationChannel","doLogin","requestStart","Date","now","login","loginData","then","data","console","log","subAuthenticationLoginConfirmedCallback","requestEnd","loginRequests","push","requestDuration","subAuthenticationLoginFailedCallback","doLogout","logout","logoutData","subAuthenticationLogoutConfirmedCallback","logoutRequests","subAuthenticationLogoutFailedCallback","doRefreshConnection","refreshConnection","subAuthenticationRefreshConnectionConfirmedCallback","refreshConnectionRequests","subAuthenticationRefreshConnectionFailedCallback","doGetLastConnectTime","getLastConnectionTimeData","getLastConnectTime","doGetConnectionState","getConnectionStateData","getConnectionState","doGetAuthenticationHeaders","getAuthenticationHeadersData","getAuthenticationHeaders","uid","subAuthenticationLoginConfirmed","subAuthenticationLoginFailed","subAuthenticationLogoutConfirmed","subAuthenticationLogoutFailed","subAuthenticationRefreshConnectionConfirmed","subAuthenticationRefreshConnectionFailed","SystemController","SystemResource","SystemChannel","doConncet","connectForm","$valid","connect","subConnectConfirmedCallback","connectRequests","subConnectFailedCallback","doGetVariable","getVariableForm","get_variable","getVariableData","subGetVariableConfirmedCallback","getVariableRequests","subGetVariableFailedCallback","doSetVariable","setVariableForm","set_variable","setVariableData","subSetVariableConfirmedCallback","setVariableRequests","subSetVariableFailedCallback","doDelVariable","delVariableForm","del_variable","delVariableData","subDelVariableConfirmedCallback","delVariableRequests","subDelVariableFailedCallback","subConnectConfirmed","subConnectFailed","name","default","subGetVariableConfirmed","subGetVariableFailed","value","subSetVariableConfirmed","subSetVariableFailed","subDelVariableConfirmed","subDelVariableFailed","UserController","UserResource","UserChannel","DrupalHelperService","doRetrieve","retrieveForm","retrieve","retrieveData","subRetrieveConfirmedCallback","retrieveRequests","subRetrieveFailedCallback","loginForm","subLoginConfirmedCallback","subLoginFailedCallback","logoutForm","subLogoutConfirmedCallback","subLogoutFailedCallback","doToken","tokenForm","token","tokenData","subTokenConfirmedCallback","tokenRequests","subTokenFailedCallback","doCreate","createForm","createData","field_nickname","structureField","create","subCreateConfirmedCallback","createRequests","subCreateFailedCallback","doUpdate","updateForm","updateData","update","subUpdateConfirmedCallback","updateRequests","subUpdateFailedCallback","doDelete","deleteForm","deleteData","subDeleteConfirmedCallback","deleteRequests","subDeleteFailedCallback","deleteErrors","doIndex","indexForm","index","indexData","subIndexConfirmedCallback","indexRequests","subIndexFailedCallback","doRegister","registerForm","register","registerData","subRegisterConfirmedCallback","registerRequests","subRegisterFailedCallback","doResendWelcomeEmail","resendWelcomeEmail","resendWelcomeEmailData","subResendWelcomeEmailConfirmedCallback","resendWelcomeEmailRequests","subResendWelcomeEmailFailedCallback","doCancel","cancel","cancelData","subCancelConfirmedCallback","cancelRequests","subCancelFailedCallback","doPasswordReset","passwordReset","passwordResetData","subPasswordResetConfirmedCallback","passwordResetRequests","subPasswordResetFailedCallback","doRequestNewPassword","requestNewPassword","requestNewPasswordData","subRequestNewPasswordConfirmedCallback","requestNewPasswordRequests","subRequestNewPasswordFailedCallback","subRetrieveConfirmed","subRetrieveFailed","subLoginConfirmed","subLoginFailed","subLogoutConfirmed","subLogoutFailed","subTokenConfirmed","subTokenFailed","pass","mail","subCreateConfirmed","subCreateFailed","subUpdateConfirmed","subUpdateFailed","subDeleteConfirmed","subDeleteFailed","page","fields","parameters","pagesize","indexFieldsColapsed","indexParametersColapsed","subIndexConfirmed","subIndexFailed","subRegisterConfirmed","subRegisterFailed","subResendWelcomeEmailConfirmed","subResendWelcomeEmailFailed","subCancelConfirmed","subCancelFailed","subPasswordResetConfirmed","subPasswordResetFailed","subRequestNewPasswordConfirmed","subRequestNewPasswordFailed"],"mappings":"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","file":"main-92686618e4.js","sourcesContent":[";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests', ['ui.router', 'ui.bootstrap', 'ngMessages', 'commons.directives.formControlFeedback', 'ngDrupal7Services-3_x.commons.configurations','ngDrupal7Services-3_x.commons.http.configurations','ngDrupalServicesTests.navigation.controller','ngDrupalServicesTests.home.controller','ngDrupalServicesTests.auth.controller','ngDrupalServicesTests.system.controller', 'ngDrupalServicesTests.user.controller','ngDrupal7Services-3_x.commons.authentication.service'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider', 'DrupalApiConstant'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider, DrupalApiConstant) \r\n\t{ \r\n\t\t//drupal services configurations\r\n\t\tDrupalApiConstant.drupal_instance = 'http://www.drupalionic.org/drupal_test/';\r\n\t\tDrupalApiConstant.api_endpoint += 'v1/';\r\n\t\t\r\n\t\t//routing configurations\r\n\t\t$urlRouterProvider.otherwise('/home');\r\n\t    \r\n\t    $stateProvider\r\n\t\r\n\t    .state('home', {\r\n\t        url: '/home',\r\n\t        templateUrl: './app/components/home/home.view.html',\r\n\t        controller: 'HomeController as home',\r\n\t    })\r\n\t    \r\n\t    .state('auth', {\r\n\t        url: '/auth',\r\n\t        templateUrl: './app/components/auth/auth.view.html',\r\n\t        controller: 'AuthController as auth',\r\n\t    })\r\n\t    \r\n\t    .state('system', {\r\n\t        url: '/system',\r\n\t        templateUrl: './app/components/system/system.view.html',\r\n\t        controller: 'SystemController as system',\r\n\t    })\r\n\t    \r\n\t    .state('user', {\r\n\t        url: '/user',\r\n\t        templateUrl: './app/components/user/_user.view.html',\r\n\t        controller: 'UserController as user',\r\n\t    });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n","(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.navigation.controller', [])\r\n    .controller('NavigationController', NavigationController);\r\n\r\nNavigationController.$inject = ['$scope'];\r\n\r\n/** @ngInject */\r\nfunction NavigationController($scope) { \r\n\t/* jshint validthis: true */\r\n\tvar vm = this;\r\n\t\r\n\tvm.navCollapsed = true;\r\n\t\r\n};\r\n\r\n\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.home.controller', [])\r\n    .controller('HomeController', HomeController);\r\n\r\n\tHomeController.$inject = ['$scope'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction HomeController($scope ) \r\n\t{ \r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t    \r\n\t\t///////////////////////\r\n\t    \r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.auth.controller', ['ngDrupal7Services-3_x.commons.authentication.service', 'ngDrupal7Services-3_x.commons.authentication.channel'])\r\n    .controller('AuthController', AuthController);\r\n\r\n\tAuthController.$inject = ['$scope', 'AuthenticationService', 'AuthenticationChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction AuthController($scope ,AuthenticationService, AuthenticationChannel) \r\n\t{ \r\n\t\t\r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t \r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\r\n\t\t\r\n\t\t\r\n\t\t// login request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.loginRequests = [];\r\n\t\tvm.loginData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t// test request\r\n\t\tvm.doLogin = doLogin;\r\n\t\t// test the login on confirm event\r\n\t\tAuthenticationChannel.subAuthenticationLoginConfirmed($scope, subAuthenticationLoginConfirmedCallback);\r\n\t\t// test the login on failed event\r\n\t\tAuthenticationChannel.subAuthenticationLoginFailed($scope, subAuthenticationLoginFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// logout request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.logoutRequests = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doLogout = doLogout;\r\n\t\t// test the token on confirm event\r\n\t\tAuthenticationChannel.subAuthenticationLogoutConfirmed($scope, subAuthenticationLogoutConfirmedCallback);\r\n\t\t// test the token on failed event\r\n\t    AuthenticationChannel.subAuthenticationLogoutFailed($scope, subAuthenticationLogoutFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    // refresh connection request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.refreshConnectionRequests = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doRefreshConnection = doRefreshConnection;\r\n\t\t// test the token on confirm event\r\n\t\tAuthenticationChannel.subAuthenticationRefreshConnectionConfirmed($scope, subAuthenticationRefreshConnectionConfirmedCallback);\r\n\t\t// test the token on failed event\r\n\t    AuthenticationChannel.subAuthenticationRefreshConnectionFailed($scope, subAuthenticationRefreshConnectionFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t  \r\n\t    // getLastConnectionTime\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.getLastConnectionTimeData = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doGetLastConnectTime = doGetLastConnectTime;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getConnectionState\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.getConnectionStateData = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doGetConnectionState = doGetConnectionState;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getAuthenticationHeaders\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.getAuthenticationHeadersData = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doGetAuthenticationHeaders = doGetAuthenticationHeaders;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t   \r\n\t    \r\n\t\t///////////////////////\r\n\t    \r\n\t\t// login request\r\n\t    \r\n\t    // do request\r\n\t\tfunction doLogin() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService.login(vm.loginData)\r\n\t\t\t    .then(\r\n\t\t\t    \t\t//login success\r\n\t\t\t    \t\tfunction(data) { console.log('auth login success', data); },\r\n\t\t\t    \t\t//login error\r\n\t\t\t    \t\tfunction(data) { console.log('auth login error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subAuthenticationLoginConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAuthenticationLoginConfirmed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subAuthenticationLoginFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAuthenticationLoginFailed', data); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// logout request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogout() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService.logout(vm.logoutData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//logout success\r\n\t\t    \t\tfunction(data) { console.log('auth logout success'); },\r\n\t\t    \t\t//logout error\r\n\t\t    \t\tfunction(data) { console.log('auth logout error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subAuthenticationLogoutConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAuthenticationLogoutConfirmed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subAuthenticationLogoutFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAuthenticationLogoutFailed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\r\n\t\t// refresh request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRefreshConnection() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService.refreshConnection()\r\n\t\t\t    .then(\r\n\t\t    \t\t//logout success\r\n\t\t    \t\tfunction(data) { console.log('auth RefreshConnection success'); },\r\n\t\t    \t\t//logout error\r\n\t\t    \t\tfunction(data) { console.log('auth RefreshConnection error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subAuthenticationRefreshConnectionConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAuthenticationRefreshConnectionConfirmedCallback'); \r\n\t\t\tvm.refreshConnectionRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subAuthenticationRefreshConnectionFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAuthenticationRefreshConnectionFailedCallback'); \r\n\t\t\tvm.refreshConnectionRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get last ConnectionTime \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetLastConnectTime() {\r\n\t\t\trequestStart = Date.now();\r\n\t\t\trequestEnd = Date.now();\r\n\t\t\t\r\n\t\t\tvm.getLastConnectionTimeData.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:AuthenticationService.getLastConnectTime()});    \r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get connectionState \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetConnectionState() {\r\n\t\t\trequestStart = Date.now();\r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log(AuthenticationService); \r\n\t\t\tvm.getConnectionStateData.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data: AuthenticationService.getConnectionState()});    \r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get authenticationHeaders \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetAuthenticationHeaders() {\r\n\t\t\trequestStart = Date.now();\r\n\t\t\trequestEnd = Date.now();\r\n\t\t\t\r\n\t\t\tvm.getAuthenticationHeadersData.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data: AuthenticationService.getAuthenticationHeaders()});    \r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.system.controller', ['ngDrupal7Services-3_x.resources.system.resource', 'ngDrupal7Services-3_x.resources.system.channel'])\r\n    .controller('SystemController', SystemController);\r\n\r\n\tSystemController.$inject = ['$scope', 'SystemResource', 'SystemChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction SystemController($scope, SystemResource, SystemChannel) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t\r\n\t\t//connect request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.connectRequests = [];\r\n\t\t//test request\r\n\t\tvm.doConncet = doConncet;\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subConnectConfirmed($scope, subConnectConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t    SystemChannel.subConnectFailed($scope, subConnectFailedCallback);\r\n\t    \r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //get_variable request\r\n\t\t\r\n\t    //store requests\r\n\t\tvm.getVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doGetVariable = doGetVariable;\r\n\t\tvm.getVariableData = {\r\n\t\t\t\t   name : '',\r\n\t\t\t\t   default : ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subGetVariableConfirmed($scope, subGetVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subGetVariableFailed($scope, subGetVariableFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t//set_variable request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.setVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doSetVariable = doSetVariable;\r\n\t\tvm.setVariableData = {\r\n\t\t\t\t   name \t: '',\r\n\t\t\t\t   value \t: ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subSetVariableConfirmed($scope, subSetVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subSetVariableFailed($scope, subSetVariableFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t//del_variable request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.delVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doDelVariable = doDelVariable;\r\n\t\tvm.delVariableData = {\r\n\t\t\t\t   name \t: ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subDelVariableConfirmed($scope, subDelVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subDelVariableFailed($scope, subDelVariableFailedCallback);\r\n\t\t\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//connect request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doConncet(connectForm) {\r\n\t\t\t\r\n\t\t\tif(connectForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tSystemResource.connect()\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//connect success\r\n\t\t\t\t    \t\tfunction(data) { console.log('system connect success'); },\r\n\t\t\t\t    \t\t//connect error\r\n\t\t\t\t    \t\tfunction(data) { console.log('system connect error'); }\r\n\t\t\t\t    );\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t//confirm callback\r\n\t\tfunction subConnectConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subConnectConfirmed'); \r\n\t\t\tvm.connectRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subConnectFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subConnectFailed'); \r\n\t\t\tvm.connectRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//get_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doGetVariable(getVariableForm) {\r\n\t\t\tif(getVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.get_variable(vm.getVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system get_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system get_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subGetVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subGetVariableConfirmed'); \r\n\t\t   vm.getVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subGetVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subGetVariableFailed');\r\n\t\t   vm.getVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t   };\r\n\t\t\r\n\t   //_____________________________________________________________________________________________________________________________________________\r\n\t   \r\n\t   //set_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doSetVariable(setVariableForm) {\r\n\t\t\tif(setVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.set_variable(vm.setVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system set_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system set_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subSetVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subSetVariableConfirmed'); \r\n\t\t   vm.setVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subSetVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subSetVariableFailed');\r\n\t\t   vm.setVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t   \r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t  \r\n\t\t//del_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doDelVariable(delVariableForm) {\r\n\t\t\tif(delVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.del_variable(vm.delVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system del_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system del_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subDelVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subDelVariableConfirmed'); \r\n\t\t   vm.delVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subDelVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subDelVariableFailed');\r\n\t\t   vm.delVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.user.controller', ['ngDrupal7Services-3_x.resources.user.resource', 'ngDrupal7Services-3_x.resources.user.channel', 'ngDrupal7Services-3_x.commons.helperService'])\r\n    .controller('UserController', UserController);\r\n\r\n\tUserController.$inject = ['$scope', 'UserResource', 'UserChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction UserController($scope, UserResource, UserChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tUserChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    UserChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //login request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.loginRequests = [];\r\n\t\tvm.loginData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doLogin = doLogin;\r\n\t\t//test the login on confirm event\r\n\t\tUserChannel.subLoginConfirmed($scope, subLoginConfirmedCallback);\r\n\t\t//test the login on failed event\r\n\t    UserChannel.subLoginFailed($scope, subLoginFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //logout request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.logoutRequests = [];\r\n\r\n\t\t//test request and event callbacks\r\n\t\tvm.doLogout = doLogout;\r\n\t\t//test the token on confirm event\r\n\t\tUserChannel.subLogoutConfirmed($scope, subLogoutConfirmedCallback);\r\n\t\t//test the token on failed event\r\n\t    UserChannel.subLogoutFailed($scope, subLogoutFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //token request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.tokenRequests = [];\r\n\r\n\t\t//test request and event callbacks\r\n\t\tvm.doToken = doToken;\r\n\t\t//test the token on confirm event\r\n\t\tUserChannel.subTokenConfirmed($scope, subTokenConfirmedCallback);\r\n\t\t//test the token on failed event\r\n\t    UserChannel.subTokenFailed($scope, subTokenFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tUserChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    UserChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tUserChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    UserChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tuid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tUserChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    UserChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tUserChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    UserChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //register request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.registerRequests = [];\r\n\t\tvm.registerData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRegister = doRegister;\r\n\t\t//test the register on confirm event\r\n\t\tUserChannel.subRegisterConfirmed($scope, subRegisterConfirmedCallback);\r\n\t\t//test the register on failed event\r\n\t    UserChannel.subRegisterFailed($scope, subRegisterFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //resendWelcomeEmail request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.resendWelcomeEmailRequests = [];\r\n\t\tvm.resendWelcomeEmailData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doResendWelcomeEmail = doResendWelcomeEmail;\r\n\t\t//test the register on confirm event\r\n\t\tUserChannel.subResendWelcomeEmailConfirmed($scope, subResendWelcomeEmailConfirmedCallback);\r\n\t\t//test the register on failed event\r\n\t    UserChannel.subResendWelcomeEmailFailed($scope, subResendWelcomeEmailFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //cancel request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.cancelRequests = [];\r\n\t\tvm.cancelData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCancel = doCancel;\r\n\t\t//test the cancel on confirm event\r\n\t\tUserChannel.subCancelConfirmed($scope, subCancelConfirmedCallback);\r\n\t\t//test the cancel on failed event\r\n\t    UserChannel.subCancelFailed($scope, subCancelFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //passwordReset request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.passwordResetRequests = [];\r\n\t\tvm.passwordResetData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doPasswordReset = doPasswordReset;\r\n\t\t//test the passwordReset on confirm event\r\n\t\tUserChannel.subPasswordResetConfirmed($scope, subPasswordResetConfirmedCallback);\r\n\t\t//test the passwordReset on failed event\r\n\t    UserChannel.subPasswordResetFailed($scope, subPasswordResetFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //requestNewPassword request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.requestNewPasswordRequests = [];\r\n\t\tvm.requestNewPasswordData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRequestNewPassword = doRequestNewPassword;\r\n\t\t//test the requestNewPassword on confirm event\r\n\t\tUserChannel.subRequestNewPasswordConfirmed($scope, subRequestNewPasswordConfirmedCallback);\r\n\t\t//test the requestNewPassword on failed event\r\n\t    UserChannel.subRequestNewPasswordFailed($scope, subRequestNewPasswordFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    \r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('user retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('user retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//login request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogin(loginForm) {\r\n\t\t\tif(loginForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.login(vm.loginData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//login success\r\n\t\t\t    \t\tfunction(data) { console.log('user login success'); },\r\n\t\t\t    \t\t//login error\r\n\t\t\t    \t\tfunction(data) { console.log('user login error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subLoginConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginConfirmed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subLoginFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginFailed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//logout request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogout(logoutForm) {\r\n\t\t\tif(logoutForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.logout(vm.logoutData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//logout success\r\n\t\t\t    \t\tfunction(data) { console.log('user logout success'); },\r\n\t\t\t    \t\t//logout error\r\n\t\t\t    \t\tfunction(data) { console.log('user logout error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subLogoutConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutConfirmed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subLogoutFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutFailed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//token request\r\n\t    \r\n\t    //do token\r\n\t\tfunction doToken(tokenForm) {\r\n\t\t\tif(tokenForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.token(vm.tokenData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//token success\r\n\t\t\t    \t\tfunction(data) { console.log('user token success'); },\r\n\t\t\t    \t\t//token error\r\n\t\t\t    \t\tfunction(data) { console.log('user token error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subTokenConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subTokenConfirmed'); \r\n\t\t\tvm.tokenRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subTokenFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subTokenFailed'); \r\n\t\t\tvm.tokenRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\t//format fields\r\n\t\t\t\tvm.createData.field_nickname = DrupalHelperService.structureField(vm.createData.field_nickname);\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tUserResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('user create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('user create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t//format fields\r\n\t\t\t\tvm.updateData.field_nickname = DrupalHelperService.structureField(vm.createData.field_nickname);\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('user update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('user update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('user delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('user delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('user index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('user index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//register request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRegister(registerForm) {\r\n\t\t\tif(registerForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.register(vm.registerData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('user register success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('user register error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRegisterConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRegisterConfirmed'); \r\n\t\t\tvm.registerRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRegisterFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRegisterFailed'); \r\n\t\t\tvm.registerRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//resendWelcomeEmail request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doResendWelcomeEmail() {\r\n\t\t\tconsole.log('ASDF'); \r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.resendWelcomeEmail(vm.resendWelcomeEmailData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//resendWelcomeEmail success\r\n\t\t    \t\tfunction(data) { console.log('user resendWelcomeEmail success'); },\r\n\t\t    \t\t//resendWelcomeEmail error\r\n\t\t    \t\tfunction(data) { console.log('user resendWelcomeEmail error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subResendWelcomeEmailConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subResendWelcomeEmailConfirmed'); \r\n\t\t\tvm.resendWelcomeEmailRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subResendWelcomeEmailFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subResendWelcomeEmailFailed'); \r\n\t\t\tvm.resendWelcomeEmailRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//cancel request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCancel() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.cancel(vm.cancelData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//cancel success\r\n\t\t    \t\tfunction(data) { console.log('user cancel success'); },\r\n\t\t    \t\t//cancel error\r\n\t\t    \t\tfunction(data) { console.log('user cancel error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCancelConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCancelConfirmed'); \r\n\t\t\tvm.cancelRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCancelFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCancelFailed'); \r\n\t\t\tvm.cancelRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//passwordReset request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doPasswordReset() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.passwordReset(vm.passwordResetData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//passwordReset success\r\n\t\t    \t\tfunction(data) { console.log('user passwordReset success'); },\r\n\t\t    \t\t//passwordReset error\r\n\t\t    \t\tfunction(data) { console.log('user passwordReset error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subPasswordResetConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subPasswordResetConfirmed'); \r\n\t\t\tvm.passwordResetRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subPasswordResetFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subPasswordResetFailed'); \r\n\t\t\tvm.passwordResetRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//requestNewPassword request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRequestNewPassword() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.requestNewPassword(vm.requestNewPasswordData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//passwordReset success\r\n\t\t    \t\tfunction(data) { console.log('user requestNewPassword success'); },\r\n\t\t    \t\t//passwordReset error\r\n\t\t    \t\tfunction(data) { console.log('user requestNewPassword error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRequestNewPasswordConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRequestNewPasswordConfirmed'); \r\n\t\t\tvm.requestNewPasswordRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRequestNewPasswordFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRequestNewPasswordFailed'); \r\n\t\t\tvm.requestNewPasswordRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}