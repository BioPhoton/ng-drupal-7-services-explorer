{"version":3,"sources":["app/commons/directives/formControlFeedback.js","app/commons/directives/navbarLogin.js","app/commons/filters/filters.ifEmpty.js","app/app.controller.js","app/components/home/home.controller.js","app/components/commons/commons.controller.js","app/components/services_3x/services_3x.controller.js","app/components/services_views/services_views.controller.js","app/components/authentication/authentication.controller.js","app/components/authentication/authentication.states.js","app/components/comment/comment.controller.js","app/components/comment/comment.states.js","app/components/system/system.controller.js","app/components/system/system.states.js","app/components/user/user.controller.js","app/components/user/user.states.js","app/components/node/node.controller.js","app/components/node/node.states.js","app/components/file/file.controller.js","app/components/file/file.states.js","app/components/taxonomy_term/taxonomy_term.controller.js","app/components/taxonomy_term/taxonomy_term.states.js","app/components/taxonomy_vocabulary/taxonomy_vocabulary.controller.js","app/components/taxonomy_vocabulary/taxonomy_vocabulary.states.js","app/components/views/views.controller.js","app/components/views/views.states.js","app/app.config.js","app/app.states.js","app/app.js","assets/html/templates.js"],"names":["formControlFeedback","restrict","replace","require","template","link","scope","elem","attrs","form","formElem","parent","find","formElemName","attr","prevDisp","css","$watch","$name","newVal","angular","module","directive","navbarLogin","AuthenticationService","AuthenticationChannel","AuthenticationServiceConstant","navbarLoginform","ele","ctrl","doLogin","navbarLoginForm","$valid","login","ngModel","navbarLoginData","then","data","$setPristine","$setUntouched","doLogout","logout","currentUserUpdatedHandler","user","username","name","accessLevels","subCurrentUserUpdated","$inject","ifEmpty","input","defaultValue","isUndefined","filter","AppController","$state","vm","this","navCollapsed","refreshConnection","controller","HomeController","$scope","CommonsController","descriptionColapsed","Services_3xController","Services_ViewsController","AuthenticationController","$filter","updateSelectedAccessLevel","accessLevelKeyName","isAuthorizedData","selectedAccessLevel","updateSelectedRoles","roleId","selectedRoles","roles","doIsAuthorized","authType","isUserAuthorized","isAuthorized","loginForm","requestStart","Date","now","loginData","console","log","subLoginConfirmedCallback","requestEnd","loginRequests","push","requestDuration","subLoginFailedCallback","logoutData","subLogoutConfirmedCallback","logoutRequests","subLogoutFailedCallback","doRefreshConnection","subRefreshConnectionConfirmedCallback","refreshConnectionRequests","subRefreshConnectionFailedCallback","doGetLastConnectTime","lastConnectionTime","getLastConnectTime","doGetConnectionState","getConnectionState","currentConnectionState","subConnectionStateUpdatedCallback","connectionStateChanges","timeOfChange","from","to","doGetAuthenticationHeaders","currentAuthenticationHeaders","getAuthenticationHeaders","doGetCurrentUser","currentUser","getCurrentUser","subCurrentUserUpdatedCallback","currentUserChanges","rolesOptions","forEach","v","k","isAuthorizedResult","uid","subLoginConfirmed","subLoginFailed","subLogoutConfirmed","subLogoutFailed","subRefreshConnectionConfirmed","subRefreshConnectionFailed","subConnectionStateUpdated","configFunction","$stateProvider","$urlRouterProvider","state","url","abstract","views","authentication","templateUrl","controllerAs","deepStateRedirect","sticky","config","CommentController","CommentResource","CommentChannel","DrupalHelperService","doRetrieve","retrieveForm","retrieve","retrieveData","subRetrieveConfirmedCallback","retrieveRequests","subRetrieveFailedCallback","doCreate","createForm","formatedCreateData","extend","createData","comment_body","structureField","value","comment_body_value","create","subCreateConfirmedCallback","createRequests","subCreateFailedCallback","doUpdate","updateForm","formatedUpdateData","updateData","update","subUpdateConfirmedCallback","updateRequests","subUpdateFailedCallback","doDelete","deleteForm","deleteData","subDeleteConfirmedCallback","deleteRequests","subDeleteFailedCallback","deleteErrors","doIndex","indexForm","index","indexData","subIndexConfirmedCallback","indexRequests","subIndexFailedCallback","doCountAll","countAllForm","countAllData","countAll","subCountAllConfirmedCallback","countAllRequests","subCountAllFailedCallback","doCountNew","countNewForm","countNew","countNewData","subCountNewConfirmedCallback","countNewRequests","subCountNewFailedCallback","subRetrieveConfirmed","subRetrieveFailed","subCreateConfirmed","subCreateFailed","subUpdateConfirmed","subUpdateFailed","subDeleteConfirmed","subDeleteFailed","page","fields","parameters","pagesize","indexFieldsColapsed","indexParametersColapsed","subIndexConfirmed","subIndexFailed","subCountAllConfirmed","subCountAllFailed","subCountNewConfirmed","subCountNewFailed","comment","delete","SystemController","SystemResource","SystemChannel","doConncet","connectForm","connect","subConnectConfirmedCallback","connectRequests","subConnectFailedCallback","doGetVariable","getVariableForm","get_variable","getVariableData","subGetVariableConfirmedCallback","getVariableRequests","subGetVariableFailedCallback","doSetVariable","setVariableForm","set_variable","setVariableData","subSetVariableConfirmedCallback","setVariableRequests","subSetVariableFailedCallback","doDelVariable","delVariableForm","del_variable","delVariableData","subDelVariableConfirmedCallback","delVariableRequests","subDelVariableFailedCallback","subConnectConfirmed","subConnectFailed","default","subGetVariableConfirmed","subGetVariableFailed","subSetVariableConfirmed","subSetVariableFailed","subDelVariableConfirmed","subDelVariableFailed","system","getVariable","setVariable","delVariable","UserController","UserResource","UserChannel","logoutForm","doToken","tokenForm","token","tokenData","subTokenConfirmedCallback","tokenRequests","subTokenFailedCallback","field_nickname","doRegister","registerForm","register","registerData","subRegisterConfirmedCallback","registerRequests","subRegisterFailedCallback","doResendWelcomeEmail","resendWelcomeEmailForm","resendWelcomeEmail","resendWelcomeEmailData","subResendWelcomeEmailConfirmedCallback","resendWelcomeEmailRequests","subResendWelcomeEmailFailedCallback","doCancel","cancel","cancelData","subCancelConfirmedCallback","cancelRequests","subCancelFailedCallback","doPasswordReset","passwordReset","passwordResetData","subPasswordResetConfirmedCallback","passwordResetRequests","subPasswordResetFailedCallback","doRequestNewPassword","requestNewPassword","requestNewPasswordData","subRequestNewPasswordConfirmedCallback","requestNewPasswordRequests","subRequestNewPasswordFailedCallback","subTokenConfirmed","subTokenFailed","pass","mail","subRegisterConfirmed","subRegisterFailed","subResendWelcomeEmailConfirmed","subResendWelcomeEmailFailed","subCancelConfirmed","subCancelFailed","subPasswordResetConfirmed","subPasswordResetFailed","subRequestNewPasswordConfirmed","subRequestNewPasswordFailed","NodeController","NodeResource","NodeChannel","body","body_value","summary","body_summary","field_custom_field","doFiles","filesForm","files","filesData","subFilesConfirmedCallback","filesRequests","subFilesFailedCallback","doComments","commentsForm","comments","commentsData","subCommentsConfirmedCallback","commentsRequests","subCommentsFailedCallback","doAttachFile","attachFileForm","attachFile","attachFileData","subAttachFileConfirmedCallback","attachFileRequests","subAttachFileFailedCallback","filesErrors","subFilesConfirmed","subFilesFailed","commentsErrors","nid","subCommentsConfirmed","subCommentsFailed","attachFileErrors","subAttachFileConfirmed","subAttachFileFailed","node","FileController","FileResource","FileChannel","doCreateRaw","createRawForm","createRaw","createRawData","subCreateRawConfirmedCallback","createRawRequests","subCreateRawFailedCallback","fid","file_contents","image_styles","file","filename","filesize","length","filepath","filemime","image_file_name","createRawErrors","subCreateRawConfirmed","subCreateRawFailed","TaxonomyTermController","TaxonomyTermResource","TaxonomyTermChannel","doSelectNodes","selectNodesForm","selectNodes","selectNodesData","subSelectNodesConfirmedCallback","selectNodesRequests","subSelectNodesFailedCallback","subSelectNodesConfirmed","subSelectNodesFailed","taxonomy_term","TaxonomyVocabularyController","TaxonomyVocabularyResource","TaxonomyVocabularyChannel","doGetTree","getTreeForm","getTree","getTreeData","subGetTreeConfirmedCallback","getTreeRequests","subGetTreeFailedCallback","subGetTreeConfirmed","subGetTreeFailed","taxonomy_vocabulary","ViewsController","ViewsResource","ViewsChannel","ViewsOperatorsConstant","exposed_filters","comment_count_op","filters","regular_expression","is_between","is_not_between","comment_count","min","max","error","filter_operators","sorts","sort_operators","view_name","exposed_sorts","exposed_filtersCollapsed","exposed_sortsCollapsed","DrupalApiConstant","drupal_instance","api_endpoint","otherwise","mainNavContent","run","$templateCache","put"],"mappings":"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","file":"main.js","sourcesContent":[";(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('commons.directives.formControlFeedback', [])\r\n        .directive('formControlFeedback', formControlFeedback);\r\n\r\n\r\n    //formControlFeedback.$inject = [''];\r\n\r\n    /** @ngInject */\r\n    function formControlFeedback() {\r\n\r\n        return {\r\n            // restrict to an element type.\r\n            restrict: 'E',\r\n            replace: true,\r\n            require: '^form',\r\n            template:'<span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>',\r\n            link : function(scope, elem, attrs, form) {\r\n            \t\r\n            \tvar formElem = elem.parent().find('input'),\r\n            \t\tformElemName = formElem.attr('name'),\r\n            \t\tprevDisp = formElem.css('display');\r\n            \t\r\n            \tscope.$watch( form.$name + '.' + formElemName + '.$valid', function(newVal) {\r\n            \t\r\n            \t\tif(!newVal) {\r\n            \t\t\telem.css('display', prevDisp);\r\n            \t\t} else {\r\n            \t\t\telem.css('display', 'none');\r\n            \t\t}\r\n            \t\t\r\n            \t});\r\n            \t\r\n            \t\r\n            \t\r\n            }\r\n        };\r\n\r\n\r\n    };\r\n\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('commons.directives.navbarLogin', ['d7-services.commons.authentication.service', 'd7-services.commons.authentication.channel', 'd7-services.commons.authentication.serviceConstant'])\r\n        .directive('navbarLogin', navbarLogin);\r\n\r\n\r\n    navbarLogin.$inject = ['AuthenticationService', 'AuthenticationChannel', 'AuthenticationServiceConstant'];\r\n\r\n    /** @ngInject */\r\n    function navbarLogin(AuthenticationService, AuthenticationChannel, AuthenticationServiceConstant) {\r\n    \t\r\n    \tvar navbarLoginform = \r\n\t    \t\t\t'<div class=\"navbar-right\">'+\r\n\t\t    \t\t\t'<form toggle-by-accesslevel=\"{{accessLevels.anon}}\" class=\"navbar-form navbar-right\" name=\"navbarLoginForm\" id=\"navbar-login\" novalidate>' +\r\n\t\t\t\t    \t\t'<div class=\"form-group\" ng-class=\"{ \\'has-error\\' : navbarLoginForm.username.$touched && navbarLoginForm.username.$invalid || navbarLoginForm.username.$invalid && navbarLoginForm.$submitted}\">' +\r\n\t\t\t\t    \t\t\t'<input type=\"text\" class=\"form-control\" name=\"username\" id=\"navbarLogin__username\" placeholder=\"Username\" ng-model=\"ngModel.navbarLoginData.username\" ng-maxlength=\"60\" required>' +\r\n\t\t\t\t    \t\t'</div> ' +\r\n\t\t\t\t    \t\t'<div class=\"form-group\" ng-class=\"{ \\'has-error\\': navbarLoginForm.password.$touched && navbarLoginForm.password.$invalid || navbarLoginForm.password.$invalid && navbarLoginForm.$submitted}\">' +\r\n\t\t\t\t    \t\t\t'<input type=\"password\" class=\"form-control\" name=\"password\" id=\"navbarLogin__password\" placeholder=\"Password\" ng-model=\"ngModel.navbarLoginData.password\" required>' +\r\n\t\t\t\t    \t\t'</div> '+\r\n\t\t\t\t    \t\t'<button class=\"btn btn-primary\" ng-click=\"doLogin(navbarLoginForm)\">Login</button>' +\r\n\t\t\t\t    \t'</form>'+\r\n\t\t\t\t    \t'<ul id=\"navbar-user\" class=\"nav navbar-nav\"  toggle-by-accesslevel=\"{{accessLevels.user}}\">'+\r\n\t\t\t\t    \t\t'<li class=\"dropdown\" dropdown>'+\r\n\t\t\t\t    \t\t\t'<a href=\"#\" dropdown-toggle>'+\r\n\t\t\t\t    \t\t\t\t'<span class=\"glyphicon glyphicon-user\"></span> {{username}} <b class=\"caret\"></b>'+\r\n\t\t\t\t    \t\t\t'</a>'+\r\n\t\t\t\t    \t\t\t'<ul class=\"dropdown-menu\">'+\r\n\t\t\t                        '<li class=\"divider\"></li>'+\r\n\t\t\t                        '<li><a href=\"#\" ng-click=\"doLogout()\"><span class=\"glyphicon glyphicon-off\"> </span>Logout</a></li>'+\r\n\t\t\t                    '</ul>'+\r\n\t\t\t                 '</li>'+\r\n\t\t\t\t    \t'</ul>'+\r\n\t\t\t    \t'</div>';\r\n\t\t    \t    \t\r\n        return {\r\n            // restrict to an element type.\r\n            restrict: 'E',\r\n            replace: true,\r\n            template: navbarLoginform,\r\n            link : function linkFunction(scope, ele, attrs, ctrl) {\r\n            \t\r\n            \tscope.accessLevels = AuthenticationServiceConstant.accessLevels;\r\n            \tscope.doLogin = doLogin;\r\n            \tscope.doLogout = doLogout;\r\n\r\n            \tAuthenticationChannel.subCurrentUserUpdated(scope, currentUserUpdatedHandler);\r\n                \r\n            \t///////////////////////////////\r\n            \t\r\n            \tfunction doLogin(navbarLoginForm) {\r\n\t\r\n            \t\tif(navbarLoginForm.$valid) {\t\t\r\n            \t\t\tAuthenticationService.login(scope.ngModel.navbarLoginData)\r\n\t\t    \t\t\t    .then(\r\n\t\t    \t\t\t    \t\t//login success\r\n\t\t    \t\t\t    \t\tfunction(data) { \r\n\t\t    \t\t\t    \t\t\tscope.ngModel.navbarLoginData = {};\r\n\t\t\t\t\t\t    \t\t\tnavbarLoginForm.$setPristine();\r\n\t\t\t\t\t\t    \t\t\tnavbarLoginForm.$setUntouched();\r\n\t\t    \t\t\t    \t\t}\r\n\t\t    \t\t\t    );\r\n            \t\t}\r\n            \t\t\r\n            \t};\r\n            \t\r\n            \tfunction doLogout() {\r\n            \t\tAuthenticationService.logout();\r\n            \t};\r\n            \t\r\n            \tfunction currentUserUpdatedHandler(user){\r\n                 \tscope.username = user.name;\r\n                };\r\n            }\r\n           \r\n            \r\n        };\r\n\r\n    };\r\n    \r\n\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('commons.filters.ifEmpty', [])\r\n        .filter('ifEmpty', ifEmpty);\r\n\r\n\r\n    //ifEmpty.$inject = [];\r\n\r\n    /**\r\n     *\r\n     * provide a default value if original is not given\r\n     *\r\n     * example {{input | ifEmpty:0}}\r\n     *\r\n     */\r\n    /** @ngInject */\r\n    function ifEmpty() {\r\n        return function(input, defaultValue) {\r\n            if (angular.isUndefined(input) || input === null || input === '') {\r\n                return defaultValue;\r\n            }\r\n\r\n            return input;\r\n        }\r\n\r\n    };\r\n    \r\n})();\r\n\r\n","(function() {\r\n    'use strict';\r\n\r\n\tangular\r\n\t    .module('ngDrupalServicesTests.app.controller', ['commons.directives.navbarLogin'])\r\n\t    .controller('AppController', AppController);\r\n\t\r\n\tAppController.$inject = ['$state', 'AuthenticationService', 'AuthenticationServiceConstant'];\r\n\t\r\n\t/** @ngInject */\r\n\tfunction AppController($state, AuthenticationService, AuthenticationServiceConstant) { \r\n\t\t/* jshint validthis: true */\r\n\t\tvar vm = this;\r\n\t\t\r\n\t\tvm.navCollapsed = true;\r\n\t\tvm.$state = $state;\r\n\t\t\r\n\t\tvm.accessLevels = AuthenticationServiceConstant.accessLevels;\r\n\t\t\r\n\t\tAuthenticationService.refreshConnection();\r\n\t};\r\n\r\n\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.home.controller', [])\r\n    .controller('HomeController', HomeController);\r\n\r\n\tHomeController.$inject = ['$scope'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction HomeController($scope ) \r\n\t{ \r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t    \r\n\t\t///////////////////////\r\n\t    \r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.commons.controller', [])\r\n    .controller('CommonsController', CommonsController);\r\n\r\n\t//CommonsController.$inject = [];\r\n\r\n\t/** @ngInject */ \r\n\tfunction CommonsController() { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\tvm.descriptionColapsed = true;\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.services_3x.controller', ['ui.router'])\r\n    .controller('Services_3xController', Services_3xController);\r\n\r\n\t//Services_3xController.$inject = [];\r\n\r\n\t/** @ngInject */ \r\n\tfunction Services_3xController() { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\tvm.descriptionColapsed = true;\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.services_views.controller', ['ui.router'])\r\n    .controller('Services_ViewsController', Services_ViewsController);\r\n\r\n\t//Services_ViewsController.$inject = [];\r\n\r\n\t/** @ngInject */ \r\n\tfunction Services_ViewsController() { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t \r\n\t\tvm.descriptionColapsed = true;\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.authentication.controller', ['d7-services.commons.authentication.service', 'd7-services.commons.authentication.serviceConstant', 'd7-services.commons.authentication.channel', 'commons.filters.ifEmpty'])\r\n    .controller('AuthenticationController', AuthenticationController);\r\n\r\n\tAuthenticationController.$inject = ['$scope', 'AuthenticationService', 'AuthenticationChannel', 'AuthenticationServiceConstant', '$filter'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction AuthenticationController($scope ,AuthenticationService, AuthenticationChannel, AuthenticationServiceConstant, $filter) \r\n\t{ \r\n\t\t\r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t \r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\r\n\t\t//AuthenticationServiceConstant\r\n\t\tvm.roles = AuthenticationServiceConstant.roles;\r\n\t\tvm.accessLevels = AuthenticationServiceConstant.accessLevels;\r\n\t\tvm.selectedAccessLevel = 'public';\r\n\t\tvm.rolesOptions = {};\r\n\t\t\r\n\t\t//@TODO make initial selected accessLevel work also with other then accessLevels.public\r\n\t\tvm.isAuthorizedData = {};\r\n\t\t\r\n\t\tvm.isAuthorizedData.selectedAccessLevel = vm.accessLevels.public\r\n\t\t\r\n\t\tvm.isAuthorizedData.selectedRoles = {};\r\n\t\tvm.isAuthorizedData.selectedRoles['1'] =  vm.roles['1'];\r\n\t\t\r\n\t\t\r\n\t\t//create object of roleId and boolean\r\n\t\t//set roleID of vm.isAuthorizedData.accessLevel to true\r\n\t\tangular.forEach(vm.roles, function(v,k) { vm.rolesOptions[k] = (vm.isAuthorizedData.selectedRoles[k])?true:false; });\r\n\t\t\r\n\t\t//isAuthorized\r\n\t\tvm.isAuthorizedResult;\r\n\t\tvm.updateSelectedAccessLevel = updateSelectedAccessLevel;\r\n\t\tvm.updateSelectedRoles = updateSelectedRoles;\r\n\t\tvm.doIsAuthorized = doIsAuthorized;\r\n\t\t\r\n\t\t// login request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.loginRequests = [];\r\n\t\tvm.loginData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t// test request\r\n\t\tvm.doLogin = doLogin;\r\n\t\t// test the login on confirm event\r\n\t\tAuthenticationChannel.subLoginConfirmed($scope, subLoginConfirmedCallback);\r\n\t\t// test the login on failed event\r\n\t\tAuthenticationChannel.subLoginFailed($scope, subLoginFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t\t// isAuthorized check\r\n\t\tfunction updateSelectedAccessLevel(accessLevelKeyName) {\r\n\t\t\tvm.isAuthorizedData.selectedAccessLevel = vm.accessLevels[accessLevelKeyName];\r\n\t\t};\r\n\t\t\r\n\t\tfunction updateSelectedRoles(roleId) {\r\n\t\t\t\r\n\t\t\tif(vm.isAuthorizedData.selectedRoles[roleId]){\r\n\t\t\t\tdelete vm.isAuthorizedData.selectedRoles[roleId];\r\n\t\t\t} else {\r\n\t\t\t\tvm.isAuthorizedData.selectedRoles[roleId] =  vm.roles[roleId];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tfunction doIsAuthorized(authType) {\r\n\t\t\t\r\n\t\t\tif(authType == 'level') {\r\n\t\t\t\tvm.isUserAuthorized = AuthenticationService.isAuthorized(vm.isAuthorizedData.selectedAccessLevel);\r\n\t\t\t}\r\n\t\t\tif(authType == 'roles_and_level') {\r\n\t\t\t\tvm.isUserAuthorized = AuthenticationService.isAuthorized(vm.isAuthorizedData.selectedAccessLevel, vm.isAuthorizedData.selectedRoles);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t// logout request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.logoutRequests = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doLogout = doLogout;\r\n\t\t// test the token on confirm event\r\n\t\tAuthenticationChannel.subLogoutConfirmed($scope, subLogoutConfirmedCallback);\r\n\t\t// test the token on failed event\r\n\t    AuthenticationChannel.subLogoutFailed($scope, subLogoutFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    // refresh connection request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.refreshConnectionRequests = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doRefreshConnection = doRefreshConnection;\r\n\t\t// test the token on confirm event\r\n\t\tAuthenticationChannel.subRefreshConnectionConfirmed($scope, subRefreshConnectionConfirmedCallback);\r\n\t\t// test the token on failed event\r\n\t    AuthenticationChannel.subRefreshConnectionFailed($scope, subRefreshConnectionFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t  \r\n\t    // getLastConnectionTime\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.lastConnectionTime = '';\r\n\r\n\t\t// test request\r\n\t\tvm.doGetLastConnectTime = doGetLastConnectTime;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getConnectionState\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.connectionStateChanges = [];\r\n\t\tvm.currentConnectionState = '';\r\n\r\n\t\t// test request\r\n\t\tvm.doGetConnectionState = doGetConnectionState;\r\n\t\t// test connectionState updated event\r\n\t\tAuthenticationChannel.subConnectionStateUpdated($scope, subConnectionStateUpdatedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getAuthenticationHeaders\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.currentAuthenticationHeaders = '';\r\n\r\n\t\t// test request\r\n\t\tvm.doGetAuthenticationHeaders = doGetAuthenticationHeaders;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getCurrentUser\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.currentUserChanges = [];\r\n\t\tvm.currentUser = AuthenticationService.getCurrentUser();\r\n\r\n\t\t// test request\r\n\t\tvm.doGetCurrentUser = doGetCurrentUser;\r\n\t\t\r\n\t\t// test connectionState updated event\r\n\t\tAuthenticationChannel.subCurrentUserUpdated($scope, subCurrentUserUpdatedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t///////////////////////\r\n\t    \r\n\t\t// login request\r\n\t    \r\n\t    // do request\r\n\t\tfunction doLogin(loginForm) {\r\n\t\t\tif(loginForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tAuthenticationService.login(vm.loginData)\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//login success\r\n\t\t\t\t    \t\tfunction(data) { \r\n\t\t\t\t    \t\t\tvm.loginData = {};\r\n\t\t\t\t    \t\t\tconsole.log('auth login success', data);\r\n\t\t\t\t    \t\t\tloginForm.$setPristine();\r\n\t\t\t\t    \t\t\tloginForm.$setUntouched();\r\n\t\t\t\t    \t\t},\r\n\t\t\t\t    \t\t//login error\r\n\t\t\t\t    \t\tfunction(data) { \r\n\t\t\t\t    \t\t\tconsole.log('auth login error'); \r\n\t\t\t\t    \t\t}\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subLoginConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginConfirmed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subLoginFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginFailed', data); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// logout request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogout() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService.logout(vm.logoutData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//logout success\r\n\t\t    \t\tfunction(data) { console.log('auth logout success'); },\r\n\t\t    \t\t//logout error\r\n\t\t    \t\tfunction(data) { console.log('auth logout error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subLogoutConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutConfirmed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subLogoutFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutFailed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\r\n\t\t// refresh request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRefreshConnection() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService\r\n\t   \t\t\t.refreshConnection()\r\n\t   \t\t\t\t.then(\tfunction(data) { console.log('auth RefreshConnection success'); },\r\n\t   \t\t\t\t\t\tfunction(data) { console.log('auth RefreshConnection error'); }\r\n\t   \t\t\t\t);\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subRefreshConnectionConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRefreshConnectionConfirmedCallback'); \r\n\t\t\tvm.refreshConnectionRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subRefreshConnectionFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRefreshConnectionFailedCallback'); \r\n\t\t\tvm.refreshConnectionRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get last ConnectionTime \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetLastConnectTime() {\r\n\t\t\tvm.lastConnectionTime = AuthenticationService.getLastConnectTime();\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get connectionState \r\n\t\t\r\n\t    //do request\r\n\t\tfunction doGetConnectionState() {\r\n\t\t\tconsole.log(AuthenticationService.getConnectionState()); \r\n\t\t\tvm.currentConnectionState = AuthenticationService.getConnectionState();\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subConnectionStateUpdatedCallback(data) { \r\n\t\t\tconsole.log('subConnectionStateUpdatedCallback'); \r\n\t\t\tvm.connectionStateChanges.push({timeOfChange: Date.now(), from: vm.currentConnectionState, to: data});    \r\n\t\t\tvm.currentConnectionState = data;\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get authenticationHeaders \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetAuthenticationHeaders() {\r\n\t\t\tvm.currentAuthenticationHeaders = AuthenticationService.getAuthenticationHeaders();    \r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// currentUser request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetCurrentUser() {\r\n\t\t\tvm.currentUser = AuthenticationService.getCurrentUser();\r\n\t\t\treturn vm.currentUser;\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subCurrentUserUpdatedCallback(data) { \r\n\t\t\tconsole.log('subCurrentUserUpdatedCallback'); \r\n\t\t\tvm.currentUserChanges.push({timeOfChange: Date.now(), from: vm.currentUser, to: data});\r\n\t\t\tvm.currentUser = data;\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.authentication.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.authentication.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.commons.authentication', {\r\n            url: \"/authentication\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'authentication' : {\r\n\t\t\t        templateUrl: './app/components/authentication/authentication.view.html',\r\n\t\t\t        controller\t: 'AuthenticationController',\r\n\t\t\t        controllerAs : 'authentication'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.isAuthorized', {\r\n            url: \"/is-authorized\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'isAuthorized' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/isAuthorized.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.login', {\r\n            url: \"/login\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'login' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/login.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.logout', {\r\n            url: \"/logout\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'logout' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/logout.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getAuthenticationHeaders', {\r\n            url: \"/get-authentication-headers\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getAuthenticationHeaders' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getAuthenticationHeaders.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getConnectionState', {\r\n            url: \"/get-connection-state\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getConnectionState' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getConnectionState.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getCurrentUser', {\r\n            url: \"/get-current-user\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getCurrentUser' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getCurrentUser.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getLastConnectTime', {\r\n            url: \"/get-last-connect-time\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getLastConnectTime' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getLastConnectTime.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.refreshConnection', {\r\n            url: \"/refresh-connection\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'refreshConnection' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/refreshConnection.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.comment.controller', ['d7-services.resources.comment.resource', 'd7-services.resources.comment.channel', 'd7-services.commons.helperService'])\r\n    .controller('CommentController', CommentController);\r\n\r\n\tCommentController.$inject = ['$scope', 'CommentResource', 'CommentChannel','DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction CommentController($scope, CommentResource, CommentChannel, DrupalHelperService) { \r\n\t\tconsole.log('CommentController'); \r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tCommentChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    CommentChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tCommentChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    CommentChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tCommentChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    CommentChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tCommentChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    CommentChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tCommentChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    CommentChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //countAll request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.countAllRequests = [];\r\n\t\tvm.countAllData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCountAll = doCountAll;\r\n\t\t//test the countAll on confirm event\r\n\t\tCommentChannel.subCountAllConfirmed($scope, subCountAllConfirmedCallback);\r\n\t\t//test the countAll on failed event\r\n\t    CommentChannel.subCountAllFailed($scope, subCountAllFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\r\n\t    //countNew request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.countNewRequests = [];\r\n\t\tvm.countNewData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCountNew = doCountNew;\r\n\t\t//test the countNew on confirm event\r\n\t\tCommentChannel.subCountNewConfirmed($scope, subCountNewConfirmedCallback);\r\n\t\t//test the countNew on failed event\r\n\t    CommentChannel.subCountNewFailed($scope, subCountNewFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('comment retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('comment retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\r\n\t\t\tif(createForm.$valid) {\t\r\n\t\t\t\t\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedCreateData = angular.extend({}, vm.createData);\r\n\t\t\t\tformatedCreateData.comment_body = DrupalHelperService.structureField({'value' : formatedCreateData.comment_body_value});\r\n\t\t\t\tdelete formatedCreateData.comment_body_value;\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tCommentResource.create(formatedCreateData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('comment create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('comment create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedUpdateData = angular.extend({}, vm.updateData);\r\n\t\t\t\tformatedUpdateData.comment_body = DrupalHelperService.structureField({'value' : formatedUpdateData.comment_body_value});\r\n\t\t\t\tdelete formatedUpdateData.comment_body_value;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.update(formatedUpdateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('comment update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('comment update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('comment delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('comment delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('comment index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('comment index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//countAll request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCountAll(countAllForm) {\r\n\t\t\tconsole.log(countAllForm, vm.countAllData);\r\n\t\t\tif(countAllForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.countAll(vm.countAllData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('comment countAll success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('comment countAll error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCountAllConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountAllConfirmed'); \r\n\t\t\tvm.countAllRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCountAllFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountAllFailed'); \r\n\t\t\tvm.countAllRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//countAll request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCountNew(countNewForm) {\r\n\t\t\tif(countNewForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.countNew(vm.countNewData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('comment countNew success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('comment countNew error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCountNewConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountNewConfirmed'); \r\n\t\t\tvm.countNewRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCountNewFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountNewFailed'); \r\n\t\t\tvm.countNewRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.comment.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.comment.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\tconsole.log(\"Comment configFunction\"); \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.comment', {\r\n            url: \"/comment\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'comment' : {\r\n\t\t\t        templateUrl: './app/components/comment/comment.view.html',\r\n\t\t\t        controller: 'CommentController',\r\n\t\t\t        controllerAs : 'comment'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.countAll', {\r\n            url: \"/countAll\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'countAll' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/countAll.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.countNew', {\r\n            url: \"/countNew\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'countNew' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/countNew.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.system.controller', ['d7-services.resources.system.resource', 'd7-services.resources.system.channel'])\r\n    .controller('SystemController', SystemController);\r\n\r\n\tSystemController.$inject = ['$scope', 'SystemResource', 'SystemChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction SystemController($scope, SystemResource, SystemChannel) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t\r\n\t\t//connect request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.connectRequests = [];\r\n\t\t//test request\r\n\t\tvm.doConncet = doConncet;\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subConnectConfirmed($scope, subConnectConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t    SystemChannel.subConnectFailed($scope, subConnectFailedCallback);\r\n\t    \r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //get_variable request\r\n\t\t\r\n\t    //store requests\r\n\t\tvm.getVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doGetVariable = doGetVariable;\r\n\t\tvm.getVariableData = {\r\n\t\t\t\t   name : '',\r\n\t\t\t\t   default : ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subGetVariableConfirmed($scope, subGetVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subGetVariableFailed($scope, subGetVariableFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t//set_variable request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.setVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doSetVariable = doSetVariable;\r\n\t\tvm.setVariableData = {\r\n\t\t\t\t   name \t: '',\r\n\t\t\t\t   value \t: ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subSetVariableConfirmed($scope, subSetVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subSetVariableFailed($scope, subSetVariableFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t//del_variable request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.delVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doDelVariable = doDelVariable;\r\n\t\tvm.delVariableData = {\r\n\t\t\t\t   name \t: ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subDelVariableConfirmed($scope, subDelVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subDelVariableFailed($scope, subDelVariableFailedCallback);\r\n\t\t\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//connect request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doConncet(connectForm) {\r\n\t\t\t\r\n\t\t\tif(connectForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tSystemResource.connect()\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//connect success\r\n\t\t\t\t    \t\tfunction(data) { console.log('system connect success', data); },\r\n\t\t\t\t    \t\t//connect error\r\n\t\t\t\t    \t\tfunction(data) { console.log('system connect error'); }\r\n\t\t\t\t    );\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t//confirm callback\r\n\t\tfunction subConnectConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subConnectConfirmed'); \r\n\t\t\tvm.connectRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subConnectFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subConnectFailed'); \r\n\t\t\tvm.connectRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//get_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doGetVariable(getVariableForm) {\r\n\t\t\tif(getVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.get_variable(vm.getVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system get_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system get_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subGetVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subGetVariableConfirmed'); \r\n\t\t   vm.getVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subGetVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subGetVariableFailed');\r\n\t\t   vm.getVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t   };\r\n\t\t\r\n\t   //_____________________________________________________________________________________________________________________________________________\r\n\t   \r\n\t   //set_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doSetVariable(setVariableForm) {\r\n\t\t\tif(setVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.set_variable(vm.setVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system set_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system set_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subSetVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subSetVariableConfirmed'); \r\n\t\t   vm.setVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subSetVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subSetVariableFailed');\r\n\t\t   vm.setVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t   \r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t  \r\n\t\t//del_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doDelVariable(delVariableForm) {\r\n\t\t\tif(delVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.del_variable(vm.delVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system del_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system del_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subDelVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subDelVariableConfirmed'); \r\n\t\t   vm.delVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subDelVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subDelVariableFailed');\r\n\t\t   vm.delVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.system.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.system.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.system', {\r\n            url: \"/system\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'system' : {\r\n\t\t\t        templateUrl: './app/components/system/system.view.html',\r\n\t\t\t        controller: 'SystemController',\r\n\t\t\t        controllerAs : 'system'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.system.connect', {\r\n            url: \"/connect\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'connect' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/connect.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n       .state('app.services_3x.system.get_variable', {\r\n            url: \"/get_variable\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getVariable' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/getVariable.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.system.set_variable', {\r\n            url: \"/set_variables\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'setVariable' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/setVariable.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.system.del_variable', {\r\n            url: \"/del_variable\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delVariable' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/delVariable.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.user.controller', ['d7-services.resources.user.resource', 'd7-services.resources.user.channel', 'd7-services.commons.helperService'])\r\n    .controller('UserController', UserController);\r\n\r\n\tUserController.$inject = ['$scope', 'UserResource', 'UserChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction UserController($scope, UserResource, UserChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tUserChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    UserChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //login request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.loginRequests = [];\r\n\t\tvm.loginData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doLogin = doLogin;\r\n\t\t//test the login on confirm event\r\n\t\tUserChannel.subLoginConfirmed($scope, subLoginConfirmedCallback);\r\n\t\t//test the login on failed event\r\n\t    UserChannel.subLoginFailed($scope, subLoginFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //logout request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.logoutRequests = [];\r\n\r\n\t\t//test request and event callbacks\r\n\t\tvm.doLogout = doLogout;\r\n\t\t//test the token on confirm event\r\n\t\tUserChannel.subLogoutConfirmed($scope, subLogoutConfirmedCallback);\r\n\t\t//test the token on failed event\r\n\t    UserChannel.subLogoutFailed($scope, subLogoutFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //token request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.tokenRequests = [];\r\n\r\n\t\t//test request and event callbacks\r\n\t\tvm.doToken = doToken;\r\n\t\t//test the token on confirm event\r\n\t\tUserChannel.subTokenConfirmed($scope, subTokenConfirmedCallback);\r\n\t\t//test the token on failed event\r\n\t    UserChannel.subTokenFailed($scope, subTokenFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tUserChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    UserChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tUserChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    UserChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tuid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tUserChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    UserChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tUserChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    UserChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //register request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.registerRequests = [];\r\n\t\tvm.registerData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRegister = doRegister;\r\n\t\t//test the register on confirm event\r\n\t\tUserChannel.subRegisterConfirmed($scope, subRegisterConfirmedCallback);\r\n\t\t//test the register on failed event\r\n\t    UserChannel.subRegisterFailed($scope, subRegisterFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //resendWelcomeEmail request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.resendWelcomeEmailRequests = [];\r\n\t\tvm.resendWelcomeEmailData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doResendWelcomeEmail = doResendWelcomeEmail;\r\n\t\t//test the register on confirm event\r\n\t\tUserChannel.subResendWelcomeEmailConfirmed($scope, subResendWelcomeEmailConfirmedCallback);\r\n\t\t//test the register on failed event\r\n\t    UserChannel.subResendWelcomeEmailFailed($scope, subResendWelcomeEmailFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //cancel request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.cancelRequests = [];\r\n\t\tvm.cancelData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCancel = doCancel;\r\n\t\t//test the cancel on confirm event\r\n\t\tUserChannel.subCancelConfirmed($scope, subCancelConfirmedCallback);\r\n\t\t//test the cancel on failed event\r\n\t    UserChannel.subCancelFailed($scope, subCancelFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //passwordReset request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.passwordResetRequests = [];\r\n\t\tvm.passwordResetData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doPasswordReset = doPasswordReset;\r\n\t\t//test the passwordReset on confirm event\r\n\t\tUserChannel.subPasswordResetConfirmed($scope, subPasswordResetConfirmedCallback);\r\n\t\t//test the passwordReset on failed event\r\n\t    UserChannel.subPasswordResetFailed($scope, subPasswordResetFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //requestNewPassword request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.requestNewPasswordRequests = [];\r\n\t\tvm.requestNewPasswordData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRequestNewPassword = doRequestNewPassword;\r\n\t\t//test the requestNewPassword on confirm event\r\n\t\tUserChannel.subRequestNewPasswordConfirmed($scope, subRequestNewPasswordConfirmedCallback);\r\n\t\t//test the requestNewPassword on failed event\r\n\t    UserChannel.subRequestNewPasswordFailed($scope, subRequestNewPasswordFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    \r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('user retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('user retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//login request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogin(loginForm) {\r\n\t\t\tif(loginForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.login(vm.loginData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//login success\r\n\t\t\t    \t\tfunction(data) { console.log('user login success'); },\r\n\t\t\t    \t\t//login error\r\n\t\t\t    \t\tfunction(data) { console.log('user login error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subLoginConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginConfirmed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subLoginFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginFailed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//logout request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogout(logoutForm) {\r\n\t\t\tif(logoutForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.logout(vm.logoutData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//logout success\r\n\t\t\t    \t\tfunction(data) { console.log('user logout success'); },\r\n\t\t\t    \t\t//logout error\r\n\t\t\t    \t\tfunction(data) { console.log('user logout error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subLogoutConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutConfirmed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subLogoutFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutFailed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//token request\r\n\t    \r\n\t    //do token\r\n\t\tfunction doToken(tokenForm) {\r\n\t\t\tif(tokenForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.token(vm.tokenData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//token success\r\n\t\t\t    \t\tfunction(data) { console.log('user token success'); },\r\n\t\t\t    \t\t//token error\r\n\t\t\t    \t\tfunction(data) { console.log('user token error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subTokenConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subTokenConfirmed'); \r\n\t\t\tvm.tokenRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subTokenFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subTokenFailed'); \r\n\t\t\tvm.tokenRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\t\tconsole.log('SDF'); \r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\tconsole.log('SDF');\r\n\t\t\t\t//format fields\r\n\t\t\t\tvm.createData.field_nickname = DrupalHelperService.structureField(vm.createData.field_nickname);\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tUserResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('user create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('user create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t//format fields\r\n\t\t\t\tvm.updateData.field_nickname = DrupalHelperService.structureField(vm.createData.field_nickname);\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('user update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('user update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('user delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('user delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('user index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('user index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//register request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRegister(registerForm) {\r\n\t\t\tif(registerForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.register(vm.registerData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('user register success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('user register error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRegisterConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRegisterConfirmed'); \r\n\t\t\tvm.registerRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRegisterFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRegisterFailed'); \r\n\t\t\tvm.registerRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//resendWelcomeEmail request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doResendWelcomeEmail(resendWelcomeEmailForm) {\r\n\t\t\tif(resendWelcomeEmailForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.resendWelcomeEmail(vm.resendWelcomeEmailData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//resendWelcomeEmail success\r\n\t\t\t    \t\tfunction(data) { console.log('user resendWelcomeEmail success'); },\r\n\t\t\t    \t\t//resendWelcomeEmail error\r\n\t\t\t    \t\tfunction(data) { console.log('user resendWelcomeEmail error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subResendWelcomeEmailConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subResendWelcomeEmailConfirmed'); \r\n\t\t\tvm.resendWelcomeEmailRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subResendWelcomeEmailFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subResendWelcomeEmailFailed'); \r\n\t\t\tvm.resendWelcomeEmailRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//cancel request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCancel() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.cancel(vm.cancelData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//cancel success\r\n\t\t    \t\tfunction(data) { console.log('user cancel success'); },\r\n\t\t    \t\t//cancel error\r\n\t\t    \t\tfunction(data) { console.log('user cancel error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCancelConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCancelConfirmed'); \r\n\t\t\tvm.cancelRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCancelFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCancelFailed'); \r\n\t\t\tvm.cancelRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//passwordReset request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doPasswordReset() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.passwordReset(vm.passwordResetData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//passwordReset success\r\n\t\t    \t\tfunction(data) { console.log('user passwordReset success'); },\r\n\t\t    \t\t//passwordReset error\r\n\t\t    \t\tfunction(data) { console.log('user passwordReset error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subPasswordResetConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subPasswordResetConfirmed'); \r\n\t\t\tvm.passwordResetRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subPasswordResetFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subPasswordResetFailed'); \r\n\t\t\tvm.passwordResetRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//requestNewPassword request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRequestNewPassword() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.requestNewPassword(vm.requestNewPasswordData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//passwordReset success\r\n\t\t    \t\tfunction(data) { console.log('user requestNewPassword success'); },\r\n\t\t    \t\t//passwordReset error\r\n\t\t    \t\tfunction(data) { console.log('user requestNewPassword error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRequestNewPasswordConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRequestNewPasswordConfirmed'); \r\n\t\t\tvm.requestNewPasswordRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRequestNewPasswordFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRequestNewPasswordFailed'); \r\n\t\t\tvm.requestNewPasswordRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.user.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.user.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.user', {\r\n            url: \"/user\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'user' : {\r\n\t\t\t        templateUrl: './app/components/user/user.view.html',\r\n\t\t\t        controller: 'UserController',\r\n\t\t\t        controllerAs : 'user'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.register', {\r\n            url: \"/register\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'register' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/register.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.resend_welcome_email', {\r\n            url: \"/resend_welcome_email\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'resendWelcomeEmail' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/resendWelcomeEmail.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.cancel', {\r\n            url: \"/cancel\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'cancel' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/cancel.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.password_reset', {\r\n            url: \"/password_reset\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'passwordReset' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/passwordReset.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.request_new_password', {\r\n            url: \"/request_new_password\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'requestNewPassword' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/requestNewPassword.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.login', {\r\n            url: \"/login\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'login' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/login.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.logout', {\r\n            url: \"/logout\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'logout' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/logout.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.token', {\r\n            url: \"/token\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'token' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/token.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.node.controller', ['d7-services.resources.node.resource', 'd7-services.resources.node.channel', 'd7-services.commons.helperService'])\r\n    .controller('NodeController', NodeController);\r\n\r\n\tNodeController.$inject = ['$scope', 'NodeResource', 'NodeChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction NodeController($scope, NodeResource, NodeChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\tvm.descriptionColapsed = true;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tNodeChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    NodeChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tNodeChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    NodeChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tNodeChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    NodeChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tNodeChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    NodeChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //files request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.filesRequests = [];\r\n\t\tvm.filesErrors = {}\r\n\t\tvm.filesData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doFiles = doFiles;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subFilesConfirmed($scope, subFilesConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subFilesFailed($scope, subFilesFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //comments request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.commentsRequests = [];\r\n\t\tvm.commentsErrors = {}\r\n\t\tvm.commentsData = {\r\n\t\t\t\tnid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doComments = doComments;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subCommentsConfirmed($scope, subCommentsConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subCommentsFailed($scope, subCommentsFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //attachFile request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.attachFileRequests = [];\r\n\t\tvm.attachFileErrors = {}\r\n\t\tvm.attachFileData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doAttachFile = doAttachFile;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subAttachFileConfirmed($scope, subAttachFileConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subAttachFileFailed($scope, subAttachFileFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('node retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('node retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\t\r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedCreateData = angular.extend({}, vm.createData);\r\n\t\t\t\tformatedCreateData.body = DrupalHelperService.structureField({'value' : formatedCreateData.body_value, 'summary' : formatedCreateData.body_summary});\r\n\t\t\t\tdelete formatedCreateData.body_value;\r\n\t\t\t\tdelete formatedCreateData.body_summary;\r\n\t\t\t\t\r\n\t\t\t\tformatedCreateData.field_custom_field = DrupalHelperService.structureField({'value' : formatedCreateData.field_custom_field});\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tNodeResource.create(formatedCreateData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('node create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('node create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedUpdateData = angular.extend({}, vm.updateData);\r\n\t\t\t\tformatedUpdateData.body = DrupalHelperService.structureField({'value' : formatedUpdateData.body_value, 'summary' : formatedUpdateData.body_summary});\r\n\t\t\t\tdelete formatedUpdateData.body_value;\r\n\t\t\t\tdelete formatedUpdateData.body_summary;\r\n\t\t\t\t\r\n\t\t\t\tformatedUpdateData.field_custom_field = DrupalHelperService.structureField({'value' : formatedUpdateData.field_custom_field});\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.update(formatedUpdateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('node update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('node update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('node delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('node delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('node index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('node index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//files request\r\n\t    \r\n\t    //do files\r\n\t\tfunction doFiles(filesForm) {\r\n\t\t\tif(filesForm.$valid) {\r\n\t\t\t\tconsole.log('SADF'); \r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.files(vm.filesData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//files success\r\n\t\t\t    \t\tfunction(data) { console.log('node files success'); },\r\n\t\t\t    \t\t//files error\r\n\t\t\t    \t\tfunction(data) { console.log('node files error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subFilesConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subFilesConfirmed'); \r\n\t\t\tvm.filesRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subFilesFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subFilesFailed'); \r\n\t\t\tvm.filesRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//comments request\r\n\r\n\t\t//do comments\r\n\t\tfunction doComments(commentsForm) {\r\n\t\t\tif(commentsForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.comments(vm.commentsData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//comments success\r\n\t\t\t    \t\tfunction(data) { console.log('node comments success'); },\r\n\t\t\t    \t\t//comments error\r\n\t\t\t    \t\tfunction(data) { console.log('node comments error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//confirm callback\r\n\t\tfunction subCommentsConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCommentsConfirmed'); \r\n\t\t\tvm.commentsRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCommentsFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCommentsFailed'); \r\n\t\t\tvm.commentsRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//attachFile request\r\n\r\n\t\t//do attachFile\r\n\t\tfunction doAttachFile(attachFileForm) {\r\n\t\t\tif(attachFileForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t \t\tNodeResource.attachFile(vm.attachFileData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//attachFile success\r\n\t\t\t    \t\tfunction(data) { console.log('node attachFile success'); },\r\n\t\t\t    \t\t//attachFile error\r\n\t\t\t    \t\tfunction(data) { console.log('node attachFile error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//confirm callback\r\n\t\tfunction subAttachFileConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAttachFileConfirmed'); \r\n\t\t\tvm.attachFileRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subAttachFileFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAttachFileFailed'); \r\n\t\t\tvm.attachFileRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.node.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.node.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.node', {\r\n            url: \"/node\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'node' : {\r\n\t\t\t        templateUrl: './app/components/node/node.view.html',\r\n\t\t\t        controller: 'NodeController',\r\n\t\t\t        controllerAs : 'node'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.files', {\r\n            url: \"/files\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'files' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/files.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.comments', {\r\n            url: \"/comments\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'comments' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/comments.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.attach_file', {\r\n            url: \"/attachFile\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'attachFile' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/attachFile.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.file.controller', ['d7-services.resources.file.resource', 'd7-services.resources.file.channel', 'd7-services.commons.helperService'])\r\n    .controller('FileController', FileController);\r\n\r\n\tFileController.$inject = ['$scope', 'FileResource', 'FileChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction FileController($scope, FileResource, FileChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\tvm.descriptionColapsed = true;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tfid : '',\r\n\t\t\t\tfile_contents : '',\r\n\t\t\t\timage_styles : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tFileChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    FileChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\t\r\n\t\tvm.createData = {};\r\n\t\tvm.createData.file = \"R0lGODlhEAAQAMQAAORHHOVSKudfOulrSOp3WOyDZu6QdvCchPGolfO0o/XBs/fNwfjZ0frl3/zy7////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAkAABAALAAAAAAQABAAAAVVICSOZGlCQAosJ6mu7fiyZeKqNKToQGDsM8hBADgUXoGAiqhSvp5QAnQKGIgUhwFUYLCVDFCrKUE1lBavAViFIDlTImbKC5Gm2hB0SlBCBMQiB0UjIQA7\";\r\n\t\tvm.createData.filename = 'drupal.jpg';\r\n\t\tvm.createData.filesize = vm.createData.file.length;\r\n\t\tvm.createData.filepath = 'content/node/20/';\r\n\t\tvm.createData.filemime = \"image/jpeg\",\r\n\t\tvm.createData.image_file_name = 'drupal image';\r\n\t\t\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tFileChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    FileChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tfid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tFileChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    FileChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tFileChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    FileChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //createRaw request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRawRequests = [];\r\n\t\tvm.createRawErrors = {}\r\n\t\t\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreateRaw = doCreateRaw;\r\n\t\t//test the delete on confirm event\r\n\t\tFileChannel.subCreateRawConfirmed($scope, subCreateRawConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    FileChannel.subCreateRawFailed($scope, subCreateRawFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('file retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('file retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tFileResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('file create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('file create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('file delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('file delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('file index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('file index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//createRaw request\r\n\t    \r\n\t    //do createRaw\r\n\t\tfunction doCreateRaw(createRawForm) {\r\n\t\t\tif(createRawForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.createRaw(vm.createRawData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//createRaw success\r\n\t\t\t    \t\tfunction(data) { console.log('file createRaw success'); },\r\n\t\t\t    \t\t//createRaw error\r\n\t\t\t    \t\tfunction(data) { console.log('file createRaw error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateRawConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.createRawRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateRawFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.createRawRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.file.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.file.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.file', {\r\n            url: \"/file\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'file' : {\r\n\t\t\t        templateUrl: './app/components/file/file.view.html',\r\n\t\t\t        controller: 'FileController',\r\n\t\t\t        controllerAs : 'file'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.createRaw', {\r\n            url: \"/create_raw\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'createRaw' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/createRaw.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_term.controller', ['d7-services.resources.taxonomy_term.resource', 'd7-services.resources.taxonomy_term.channel'])\r\n    .controller('TaxonomyTermController', TaxonomyTermController);\r\n\r\n\tTaxonomyTermController.$inject = ['$scope', 'TaxonomyTermResource', 'TaxonomyTermChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction TaxonomyTermController($scope, TaxonomyTermResource, TaxonomyTermChannel) { \r\n\t\tconsole.log('TaxonomyTermController'); \r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tTaxonomyTermChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    TaxonomyTermChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tTaxonomyTermChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    TaxonomyTermChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tTaxonomyTermChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    TaxonomyTermChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tuid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tTaxonomyTermChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    TaxonomyTermChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tTaxonomyTermChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    TaxonomyTermChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //selectNodes request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.selectNodesRequests = [];\r\n\t\tvm.selectNodesData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doSelectNodes = doSelectNodes;\r\n\t\t//test the selectNodes on confirm event\r\n\t\tTaxonomyTermChannel.subSelectNodesConfirmed($scope, subSelectNodesConfirmedCallback);\r\n\t\t//test the selectNodes on failed event\r\n\t    TaxonomyTermChannel.subSelectNodesFailed($scope, subSelectNodesFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\r\n\t\t\tif(createForm.$valid) {\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tTaxonomyTermResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_term create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_term create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//selectNodes request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doSelectNodes(selectNodesForm) {\r\n\t\t\t\r\n\t\t\tif(selectNodesForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.selectNodes(vm.selectNodesData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term selectNodes success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term selectNodes error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subSelectNodesConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subSelectNodesConfirmed'); \r\n\t\t\tvm.selectNodesRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subSelectNodesFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subSelectNodesFailed'); \r\n\t\t\tvm.selectNodesRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_term.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.taxonomy_term.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\tconsole.log(\"TaxonomyTerm configFunction\"); \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.taxonomy_term', {\r\n            url: \"/taxonomy_term\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'taxonomy_term' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/taxonomy_term.view.html',\r\n\t\t\t        controller: 'TaxonomyTermController',\r\n\t\t\t        controllerAs : 'taxonomy_term'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.selectNodes', {\r\n            url: \"/selectNodes\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'selectNodes' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/selectNodes.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_vocabulary.controller', ['d7-services.resources.taxonomy_vocabulary.resource', 'd7-services.resources.taxonomy_vocabulary.channel'])\r\n    .controller('TaxonomyVocabularyController', TaxonomyVocabularyController);\r\n\r\n\tTaxonomyVocabularyController.$inject = ['$scope', 'TaxonomyVocabularyResource', 'TaxonomyVocabularyChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction TaxonomyVocabularyController($scope, TaxonomyVocabularyResource, TaxonomyVocabularyChannel) { \r\n\t\tconsole.log('TaxonomyVocabularyController'); \r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tTaxonomyVocabularyChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    TaxonomyVocabularyChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tTaxonomyVocabularyChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    TaxonomyVocabularyChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tTaxonomyVocabularyChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    TaxonomyVocabularyChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tTaxonomyVocabularyChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    TaxonomyVocabularyChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tTaxonomyVocabularyChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    TaxonomyVocabularyChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //getTree request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.getTreeRequests = [];\r\n\t\tvm.getTreeData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doGetTree = doGetTree;\r\n\t\t//test the getTree on confirm event\r\n\t\tTaxonomyVocabularyChannel.subGetTreeConfirmed($scope, subGetTreeConfirmedCallback);\r\n\t\t//test the getTree on failed event\r\n\t    TaxonomyVocabularyChannel.subGetTreeFailed($scope, subGetTreeFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\tconsole.log(vm.retrieveData); \r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\r\n\t\t\tif(createForm.$valid) {\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tTaxonomyVocabularyResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_vocabulary create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_vocabulary create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\r\n\t\t\tconsole.log(updateForm); \r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\tconsole.log(updateForm); \r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//getTree request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetTree(getTreeForm) {\r\n\t\t\t\r\n\t\t\tif(getTreeForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.getTree(vm.getTreeData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary getTree success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary getTree error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subGetTreeConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subGetTreeConfirmed'); \r\n\t\t\tvm.getTreeRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subGetTreeFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subGetTreeFailed'); \r\n\t\t\tvm.getTreeRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_vocabulary.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.taxonomy_vocabulary.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\tconsole.log(\"TaxonomyVocabulary configFunction\"); \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.taxonomy_vocabulary', {\r\n            url: \"/taxonomy_vocabulary\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'taxonomy_vocabulary' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/taxonomy_vocabulary.view.html',\r\n\t\t\t        controller: 'TaxonomyVocabularyController',\r\n\t\t\t        controllerAs : 'taxonomy_vocabulary'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.getTree', {\r\n            url: \"/getTree\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getTree' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/getTree.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.views.controller', ['d7-services.resources.views.resource', 'd7-services.resources.views.channel', 'd7-services.resources.views.operatorsConstant'])\r\n    .controller('ViewsController', ViewsController);\r\n\r\n\tViewsController.$inject = ['$scope','ViewsResource', 'ViewsChannel', 'ViewsOperatorsConstant'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction ViewsController($scope, ViewsResource, ViewsChannel, ViewsOperatorsConstant) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//operator constants\r\n\t\tvm.filters = ViewsOperatorsConstant.filter_operators;\r\n\t\tvm.sorts = ViewsOperatorsConstant.sort_operators;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\tvm.retrieveRequests = [];\r\n\t\t\r\n\t\tvm.retrieveData = {};\r\n\t\tvm.retrieveData.view_name = 'testview';\r\n\t\t\r\n\t\t//vm.retrieveData.display_id = 'page';\r\n\t\t//vm.retrieveData.args = \"args\";\r\n\t\t//vm.retrieveData.offset = 1;\r\n\t\t//vm.retrieveData.limit = 1;\r\n\t\t//vm.retrieveData.format_output = false;\r\n\t\t\r\n\t\tvm.retrieveData.exposed_sorts = {};\r\n\t\t//vm.retrieveData.exposed_sorts.sort_order = vm.sorts.asc;\r\n\t\t//vm.retrieveData.exposed_sorts.sort_by = \"created\";\r\n\t\t\r\n\t\tvm.retrieveData.exposed_filters = {};\r\n\t\t//vm.retrieveData.exposed_filters.nid = 20;\r\n\t\t\r\n\t\t//vm.retrieveData.exposed_filters.comment_count_op = vm.filters.is_less_than;\r\n\t\t\r\n\t\t//vm.retrieveData.exposed_filters.comment_count = {};\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.value = 1;\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.min = 1;\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.max = 1;\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.regular_expression = 'a regex here';\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvm.exposed_filtersCollapsed = true;\r\n\t\tvm.exposed_sortsCollapsed = true;\r\n\t\t\r\n\t\t\r\n\t\t//test request\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tViewsChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    ViewsChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\t    \r\n\t    //__________________________________________________________________________________________________\r\n  \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\t//prepare exposed_filters data for request\r\n\t\t\t\t//normally you use just the fields you need in vm.retrieveData\r\n\t\t\t\tif( vm.retrieveData.exposed_filters.comment_count_op === vm.filters.regular_expression || \r\n\t\t\t\t\tvm.retrieveData.exposed_filters.comment_count_op === vm.filters.is_between ||\r\n\t\t\t\t\tvm.retrieveData.exposed_filters.comment_count_op === vm.filters.is_not_between ) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.value;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( vm.retrieveData.exposed_filters.comment_count_op === vm.filters.regular_expression ) {\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.min;\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( vm.retrieveData.exposed_filters.comment_count_op === vm.filters.is_between || \r\n\t\t\t\t\t\tvm.retrieveData.exposed_filters.comment_count_op    === vm.filters.is_not_between) {\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.regular_expression;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} \r\n\t\t\t\telse if(vm.retrieveData.exposed_filters.comment_count) {\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.min;\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.max;\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.regular_expression;\r\n\t\t\t\t};\r\n\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tViewsResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//retrieve success\r\n\t\t\t\t    \t\tfunction(data) { console.log('views retrieve success', data); },\r\n\t\t\t\t    \t\t//retrieve error\r\n\t\t\t\t    \t\tfunction(error) { console.log('views retrieve error', error); }\r\n\t\t\t\t    );\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.views.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.views.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_views.views', {\r\n            url: \"/views\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'views' : {\r\n\t\t\t        templateUrl: './app/components/views/views.view.html',\r\n\t\t\t        controller: 'ViewsController',\r\n\t\t\t        controllerAs : 'views'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        \r\n        .state('app.services_views.views.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/views/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n      \r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.config', [])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['DrupalApiConstant'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction(DrupalApiConstant) \r\n\t{ \r\n\t\t//drupal services configurations\r\n\t\tDrupalApiConstant.drupal_instance = 'http://dev-drulap-headless.pantheon.io/';\r\n\t\tDrupalApiConstant.api_endpoint += 'v1/';\r\n\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.states', ['ui.router','ct.ui.router.extras',\r\n                                             \r\n                                             'ngDrupalServicesTests.app.controller',\r\n                                             \r\n                                             'ngDrupalServicesTests.home.controller',\r\n                                             'ngDrupalServicesTests.commons.controller',\r\n                                             'ngDrupalServicesTests.services_3x.controller',\r\n                                             'ngDrupalServicesTests.services_views.controller',\r\n                                              \r\n                                             //commons\r\n                                             'ngDrupalServicesTests.authentication.states',\r\n                                             \r\n                                             //services_3x\r\n                                             'ngDrupalServicesTests.comment.states',\r\n                                             'ngDrupalServicesTests.system.states',\r\n                                             'ngDrupalServicesTests.user.states',\r\n                                             'ngDrupalServicesTests.node.states',\r\n                                             'ngDrupalServicesTests.file.states',\r\n                                             'ngDrupalServicesTests.taxonomy_term.states',\r\n                                             'ngDrupalServicesTests.taxonomy_vocabulary.states',\r\n                                             \r\n                                             //services_views\r\n                                             'ngDrupalServicesTests.views.states'\r\n                                             ])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\t//routing configurations\r\n\t\t$urlRouterProvider.otherwise('/app/home');\r\n\t    \r\n\t    $stateProvider\r\n\t\r\n\t    //holds the navigation and toggled state of menu\r\n\t    .state('app', {\r\n            url: \"/app\",\r\n            abstract: true,\r\n            templateUrl: \"app/app.view.html\",\r\n            controller: 'AppController',\r\n            controllerAs : 'app'\r\n        })\r\n        .state('app.home', {\r\n\t        url: '/home',\r\n\t        deepStateRedirect: true,\r\n\t        sticky: true,\r\n\t        views : {\r\n\t        \t'mainNavContent' : {\r\n\t        \t\ttemplateUrl: './app/components/home/home.view.html',\r\n\t    \t        controller: 'HomeController',\r\n\t                controllerAs : 'home'\r\n\t        \t}\r\n\t        }\r\n\t        \r\n\t    })\r\n\t    \r\n\t    .state('app.commons', {\r\n            url: \"/commons\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'mainNavContent' : {\r\n\t\t\t        templateUrl: './app/components/commons/commons.view.html',\r\n\t\t\t        controller: 'CommonsController',\r\n\t\t\t        controllerAs : 'authentication'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n\t    \r\n        .state('app.services_3x', {\r\n            url: \"/services_3x\",\r\n            abstract: true,\r\n            views: {\r\n\t\t\t      'mainNavContent': {\r\n\t\t\t    \t  templateUrl\t\t: \"app/components/services_3x/services_3x.view.html\",\r\n\t\t\t    \t  controller\t\t: 'Services_3xController',\r\n\t\t\t          controllerAs \t\t: 'services_3x',\r\n\t\t\t      }\r\n\t\t\t    }\r\n        })\r\n        \r\n        .state('app.services_views', {\r\n            url: \"/services_views\",\r\n            abstract: true,\r\n            views: {\r\n\t\t\t      'mainNavContent': {\r\n\t\t\t    \t  templateUrl\t\t: \"app/components/services_views/services_views.view.html\",\r\n\t\t\t    \t  controller\t\t: 'Services_ViewsController',\r\n\t\t\t          controllerAs \t\t: 'services_views',\r\n\t\t\t      }\r\n\t\t\t    }\r\n        });\r\n       \r\n\t};\r\n\t\r\n\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\t/*Needed to loosely implement templatecahce*/\r\n\tangular.module(\"da.commons.caching.templates\", []);\r\n\r\n\tangular\r\n\t.module('ngDrupalServicesTests', [ 'd7-services', 'ngDrupalServicesTests.config', 'ngDrupalServicesTests.states',\r\n\t                                  'ui.bootstrap', 'ngMessages', 'commons.directives.formControlFeedback']);\r\n\r\n})();","console.log('in templates.js');\nangular.module(\"da.commons.caching.templates\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/app.view.html\",\"<nav id=\\\"main-nav-wrapper\\\" class=\\\"navbar navbar-default navbar-static-top\\\"><div class=\\\"container\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle\\\" ng-click=\\\"app.navCollapsed = !app.navCollapsed\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\">NG-Headless Drupal Tests</a></div><div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\" ng-class=\\\"!app.navCollapsed && \\'in\\'\\\"><ul class=\\\"nav navbar-nav\\\"><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.home\\\">Home</a></li><li ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown\\\" dropdown><a dropdown-toggle>Commons <b class=\\\"caret\\\"></b></a><ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\"><li ui-sref-active-eq=\\\"active\\\"><a tabindex=\\\"-1\\\" ui-sref=\\\"app.commons.authentication.isAuthorized\\\">AuthenticationService</a></li><li ui-sref-active-eq=\\\"active\\\" class=\\\"disabled\\\"><a tabindex=\\\"-1\\\" href=\\\"#\\\">Directives</a></li></ul></li><li ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown\\\" dropdown><a href=\\\"#\\\" dropdown-toggle>Resources <b class=\\\"caret\\\"></b></a><ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\"><li ui-sref-active=\\\"active-trail\\\" ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown-submenu\\\"><a tabindex=\\\"-1\\\" ui-sref=\\\"app.services_3x.system.connect\\\">Services 3.x</a><ul class=\\\"dropdown-menu\\\"><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.comment.retrieve\\\">Comments</a></li><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.file.retrieve\\\">File</a></li><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.node.retrieve\\\">Node</a></li><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.system.connect\\\">System</a></li><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.taxonomy_term.retrieve\\\">Taxonomy Terms</a></li><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.taxonomy_vocabulary.retrieve\\\">Taxonomy Vocabulary</a></li><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_3x.user.retrieve\\\">User</a></li></ul></li><li ui-sref-active-eq=\\\"active\\\" class=\\\"dropdown-submenu\\\"><a ui-sref=\\\"app.services_views.views.retrieve\\\">Services Views</a><ul class=\\\"dropdown-menu\\\"><li ui-sref-active-eq=\\\"active\\\"><a ui-sref=\\\"app.services_views.views.retrieve\\\">Views</a></li></ul></li><li ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown-submenu disabled\\\"><a href=\\\"#\\\">Services Menu</a><ul class=\\\"dropdown-menu\\\"><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Menu</a></li></ul></li><li ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown-submenu disabled\\\"><a href=\\\"#\\\">Services Search</a><ul class=\\\"dropdown-menu\\\"><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Search Node</a></li><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Search User</a></li></ul></li><li ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown-submenu disabled\\\"><a href=\\\"#\\\">Services Entity</a><ul class=\\\"dropdown-menu disabled\\\"><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Entity Comment</a></li><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Entity File</a></li><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Entity Node</a></li><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Entity Taxonomy Terms</a></li><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Entity Taxonomy Vocabulary</a></li><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Entity User</a></li></ul></li><li ui-sref-active-eq=\\\"active\\\" ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown-submenu disabled\\\"><a href=\\\"#\\\">Services Entity Reference</a></li><li ui-sref-active-eq=\\\"active\\\" ui-sref-active=\\\"active-trail\\\" class=\\\"dropdown-submenu disabled\\\"><a href=\\\"#\\\">Services Definition</a><ul class=\\\"dropdown-menu\\\"><li ui-sref-active-eq=\\\"active\\\"><a href=\\\"#\\\">Definition</a></li></ul></li></ul></li></ul><navbar-login></navbar-login></div></div></nav><div id=\\\"main-contant-wrapper\\\"><div class=\\\"container\\\"><!-- THIS IS WHERE WE WILL INJECT OUR PAGE CONTENT ============================== --><div name=\\\"mainNavContent\\\" ui-view></div></div></div><ng-include src=\\\"\\'app/templates/errorMessages.html\\'\\\"></ng-include>\");\n$templateCache.put(\"app/templates/errorMessages.html\",\"<!-- message for a field that is required --><script type=\\\"text/ng-template\\\" id=\\\"error-required\\\"><div ng-message=\\\"required\\\">This field is required</div></script><!-- message for a field that is required --><script type=\\\"text/ng-template\\\" id=\\\"error-email\\\"><div ng-message=\\\"email\\\">This field is no valide email address</div></script><!-- message for a field that is number --><script type=\\\"text/ng-template\\\" id=\\\"error-number\\\"><div ng-message=\\\"number\\\">This field should be a number</div></script>\");\n$templateCache.put(\"app/components/acl/acl.view.html\",\"<div toggle-by-accesslevel=\\\"{{app.accessLevels.user}}\\\">AUTHED</div><div toggle-by-accesslevel=\\\"{{app.accessLevels.anon}}\\\">NOTAUTHED</div><div toggle-by-accesslevel=\\\"{{app.accessLevels.user}}\\\" toggle-action=\\\"hide\\\">hide AUTHED</div><div toggle-by-accesslevel=\\\"{{app.accessLevels.anon}}\\\" toggle-action=\\\"hide\\\">hide NOTAUTHED</div><div toggle-by-accesslevel=\\\"{{app.accessLevels.user}}\\\" toggle-action=\\\"show\\\">show AUTHED</div>\");\n$templateCache.put(\"app/components/authentication/authentication.view.html\",\"<div id=\\\"authentication\\\" class=\\\"service\\\"><h1>Authentication service</h1><p>Covers all important workflows for authentication token evaluation, an access control for routes, and objects via user roles and accesslevels.</p><p>Following requests are provided:</p><br><ul id=\\\"user-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"isAuthorized-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.isAuthorized\\\">IsAuthorized</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"login-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.login\\\">Login</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"logout-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.logout\\\">Logout</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"refreshConnection-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.refreshConnection\\\">RefreshConnection</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"getLastConnectTime-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.getLastConnectTime\\\">GetLastConnectTime</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"getConnectionState-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.getConnectionState\\\">GetConnectionState</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"getAuthenticationHeaders-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.getAuthenticationHeaders\\\">GetAuthenticationHeaders</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"getCurrentUser-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.commons.authentication.getCurrentUser\\\">GetCurrentUser</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"isAuthorized\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.isAuthorized\\')\\\"></ui-view><ui-view name=\\\"login\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.login\\')\\\"></ui-view><ui-view name=\\\"logout\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.logout\\')\\\"></ui-view><ui-view name=\\\"refreshConnection\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.refreshConnection\\')\\\"></ui-view><ui-view name=\\\"getLastConnectTime\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.getLastConnectTime\\')\\\"></ui-view><ui-view name=\\\"getConnectionState\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.getConnectionState\\')\\\"></ui-view><ui-view name=\\\"getAuthenticationHeaders\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.getAuthenticationHeaders\\')\\\"></ui-view><ui-view name=\\\"getCurrentUser\\\" ng-show=\\\"app.$state.includes(\\'app.commons.authentication.getCurrentUser\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/comment/comment.view.html\",\"<div id=\\\"comment\\\" class=\\\"resource\\\"><h1>Comment resource</h1><p>Link general comment functionalities to services module.<br>See <code>services/resources/comment_resource.inc</code></p><p>Following requests are provided:</p><br><ul id=\\\"comment-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"retrieve-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.retrieve\\\">Retrieve</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"create-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.create\\\">Create</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"update-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.update\\\">Update</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"delete-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.delete\\\">Delete</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.index\\\">Index</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"selectNodes-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.countAll\\\">CountAll</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"selectNodes-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.comment.countNew\\\">CountNew</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.retrieve\\')\\\"></ui-view><ui-view name=\\\"create\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.create\\')\\\"></ui-view><ui-view name=\\\"update\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.update\\')\\\"></ui-view><ui-view name=\\\"delete\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.delete\\')\\\"></ui-view><ui-view name=\\\"index\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.index\\')\\\"></ui-view><ui-view name=\\\"countAll\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.countAll\\')\\\"></ui-view><ui-view name=\\\"countNew\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.comment.countNew\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/file/file.view.html\",\"<div id=\\\"file\\\" class=\\\"resource\\\"><h1>File resource</h1><p>Link general file functionalities to services module.<br>See <code>services/resources/file_resource.inc</code></p><p>Following requests are provided:</p><br><ul id=\\\"files-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"retrieve-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.file.retrieve\\\">Retrieve</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"create-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.file.create\\\">Create</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"delete-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.file.delete\\\">Delete</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.file.index\\\">Index</a></li><li ui-sref-active-eq=\\\"active\\\"><a class=\\\"bg-warning text-warning\\\" id=\\\"createRaw-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.file.createRaw\\\">Create raw <i class=\\\"fa fa-warning\\\"></i></a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.file.retrieve\\')\\\"></ui-view><ui-view name=\\\"create\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.file.create\\')\\\"></ui-view><ui-view name=\\\"delete\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.file.delete\\')\\\"></ui-view><ui-view name=\\\"index\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.file.index\\')\\\"></ui-view><ui-view name=\\\"createRaw \\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.file.createRaw\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/home/home.view.html\",\"<div id=\\\"home\\\" class=\\\"resource\\\"><h1>AngularJS lib for Drupal7 services 3.x module</h1><p></p></div>\");\n$templateCache.put(\"app/components/commons/commons.view.html\",\"<div id=\\\"Commons\\\" class=\\\"resource\\\"><h1 ng-click=\\\"commons.descriptionColapsed = !commons.descriptionColapsed\\\">Commons <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[commons.descriptionColapsed]\\\"></span></h1><div class=\\\"collapse\\\" ng-class=\\\"!commons.descriptionColapsed && \\'in\\'\\\"><p>The commons section contains all the functionality that is storedin commons and consists of following modules:</p><ul><li>Authentication</li><li>Directives</li></ul></div><hr><ul id=\\\"services-3x-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\"><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.commons.authentication\\\">Authentication</a></li><li ui-sref-active=\\\"active\\\" class=\\\"disabled\\\"><a ui-sref=\\\"app.commons.directives\\\">Directives</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"authentication\\\"></ui-view><ui-view name=\\\"directives\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/node/node.view.html\",\"<div id=\\\"node\\\" class=\\\"resource\\\"><h1>Node resource</h1><p>Link general node functionalities to services module.<br>See <code>services/resources/node_resource.inc</code><br>Following requests are provided:</p><br><ul id=\\\"node-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"retrieve-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.retrieve\\\">Retrieve</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"create-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.create\\\">Create</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"update-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.update\\\">Update</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"delete-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.delete\\\">Delete</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.index\\\">Index</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.files\\\">Files</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.comments\\\">Comments</a></li><li ui-sref-active-eq=\\\"active\\\"><a class=\\\"bg-warning text-warning\\\" id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.node.attach_file\\\">Attach File <i class=\\\"fa fa-warning\\\"></i></a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.retrieve\\')\\\"></ui-view><ui-view name=\\\"create\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.create\\')\\\"></ui-view><ui-view name=\\\"update\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.update\\')\\\"></ui-view><ui-view name=\\\"delete\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.delete\\')\\\"></ui-view><ui-view name=\\\"index\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.index\\')\\\"></ui-view><ui-view name=\\\"files\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.files\\')\\\"></ui-view><ui-view name=\\\"comments\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.comments\\')\\\"></ui-view><ui-view name=\\\"attachFile\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.node.attach_file\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/services_3x/services_3x.view.html\",\"<div id=\\\"Services-3x\\\" class=\\\"resource\\\"><h1 ng-click=\\\"services_3x.descriptionColapsed = !services_3x.descriptionColapsed\\\">Services 3.x</h1><div><p>The <a href=\\\"https://www.drupal.org/project/services\\\" target=\\\"_blank\\\">services 3.x module</a> consists of following resources:</p></div><hr><ul id=\\\"services-3x-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\"><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.comment.retrieve\\\">Comment</a></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.file.retrieve\\\">File</a></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.node.retrieve\\\">Node</a></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.system.connect\\\">System</a></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.taxonomy_term.retrieve\\\">Taxonomy Term</a></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.taxonomy_vocabulary.retrieve\\\">Taxonomy Vocabulary</a></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"app.services_3x.user.retrieve\\\">User</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"comment\\\"></ui-view><ui-view name=\\\"user\\\"></ui-view><ui-view name=\\\"node\\\"></ui-view><ui-view name=\\\"system\\\"></ui-view><ui-view name=\\\"file\\\"></ui-view><ui-view name=\\\"taxonomy_term\\\"></ui-view><ui-view name=\\\"taxonomy_vocabulary\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/services_views/services_views.view.html\",\"<div id=\\\"Services-Views\\\" class=\\\"resource\\\"><h1 ng-click=\\\"services_views.descriptionColapsed = !services_views.descriptionColapsed\\\">Services Views <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[services_views.descriptionColapsed]\\\"></span></h1><div class=\\\"collapse\\\" ng-class=\\\"!services_views.descriptionColapsed && \\'in\\'\\\"><p>The <a href=\\\"https://www.drupal.org/project/services_views\\\" target=\\\"_blank\\\">services views module</a> consists of following resources:</p><ul><li>Views</li></ul></div><hr><ul id=\\\"services-views-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\"><li ui-sref-active=\\\"active\\\"><a>Views</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"views\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/system/system.view.html\",\"<div id=\\\"system\\\" class=\\\"resource\\\"><h1>System resource</h1><p>Link general system functionalities to services module.<br>See <code>services/resources/system_resource.inc</code></p><p>Following requests are provided:</p><br><ul id=\\\"system-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"connect-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.system.connect\\\">Connect</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"get-variable-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.system.get_variable\\\">getVariable</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"set-variable-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.system.set_variable\\\">setVariable</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"del-variable-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.system.del_variable\\\">delVariable</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"connect\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.system.connect\\')\\\"></ui-view><ui-view name=\\\"getVariable\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.system.get_variable\\')\\\"></ui-view><ui-view name=\\\"setVariable\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.system.set_variable\\')\\\"></ui-view><ui-view name=\\\"delVariable\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.system.del_variable\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/taxonomy_term/taxonomy_term.view.html\",\"<div id=\\\"taxonomy_term\\\" class=\\\"resource\\\"><h1>TaxonomyTerm resource</h1><p>Link general taxonomy_term functionalities to services module.<br>See <code>services/resources/taxonomy_term_resource.inc</code></p><p>Following requests are provided:</p><br><ul id=\\\"taxonomy_term-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"retrieve-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_term.retrieve\\\">Retrieve</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"create-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_term.create\\\">Create</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"update-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_term.update\\\">Update</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"delete-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_term.delete\\\">Delete</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_term.index\\\">Index</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"selectNodes-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_term.selectNodes\\\">SelectNodes</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_term.retrieve\\')\\\"></ui-view><ui-view name=\\\"create\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_term.create\\')\\\"></ui-view><ui-view name=\\\"update\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_term.update\\')\\\"></ui-view><ui-view name=\\\"delete\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_term.delete\\')\\\"></ui-view><ui-view name=\\\"index\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_term.index\\')\\\"></ui-view><ui-view name=\\\"selectNodes\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_term.selectNodes\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/taxonomy_vocabulary.view.html\",\"<div id=\\\"taxonomy_vocabulary\\\" class=\\\"resource\\\"><h1>TaxonomyVocabulary resource</h1><p>Link general taxonomy_vocabulary functionalities to services module.<br>See <code>services/resources/taxonomy_vocabulary_resource.inc</code></p><p>Following requests are provided:</p><br><ul id=\\\"taxonomy_vocabulary-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"retrieve-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_vocabulary.retrieve\\\">Retrieve</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"create-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_vocabulary.create\\\">Create</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"update-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_vocabulary.update\\\">Update</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"delete-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_vocabulary.delete\\\">Delete</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_vocabulary.index\\\">Index</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"getTree-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.taxonomy_vocabulary.getTree\\\">GetTree</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_vocabulary.retrieve\\')\\\"></ui-view><ui-view name=\\\"create\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_vocabulary.create\\')\\\"></ui-view><ui-view name=\\\"update\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_vocabulary.update\\')\\\"></ui-view><ui-view name=\\\"delete\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_vocabulary.delete\\')\\\"></ui-view><ui-view name=\\\"index\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_vocabulary.index\\')\\\"></ui-view><ui-view name=\\\"getTree\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.taxonomy_vocabulary.getTree\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/user/user.view.html\",\"<div id=\\\"user\\\" class=\\\"resource\\\"><h1>User resource</h1><p>Link general user functionalities to services module.<br>See <code>services/resources/user_resource.inc</code></p><p>Following requests are provided:</p><br><ul id=\\\"user-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"retrieve-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.retrieve\\\">Retrieve</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"create-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.create\\\">Create</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"update-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.update\\\">Update</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"delete-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.delete\\\">Delete</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"index-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.index\\\">Index</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"del-variable-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.register\\\">Register</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"resend-welcome-email-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.resend_welcome_email\\\">Resend Welcome Email</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"cancel-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.cancel\\\">Cancel</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"password-reset-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.password_reset\\\">Password Reset</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"request-new-password-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.request_new_password\\\">requestNewPassword</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"login-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.login\\\">Login</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"logout-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.logout\\\">Logout</a></li><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"token-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_3x.user.token\\\">Token</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.retrieve\\')\\\"></ui-view><ui-view name=\\\"create\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.create\\')\\\"></ui-view><ui-view name=\\\"update\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.update\\')\\\"></ui-view><ui-view name=\\\"delete\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.delete\\')\\\"></ui-view><ui-view name=\\\"index\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.index\\')\\\"></ui-view><ui-view name=\\\"register\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.register\\')\\\"></ui-view><ui-view name=\\\"resendWelcomeEmail\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.resend_welcome_email\\')\\\"></ui-view><ui-view name=\\\"cancel\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.cancel\\')\\\"></ui-view><ui-view name=\\\"requestNewPassword\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.request_new_password\\')\\\"></ui-view><ui-view name=\\\"passwordReset\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.password_reset\\')\\\"></ui-view><ui-view name=\\\"login\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.login\\')\\\"></ui-view><ui-view name=\\\"logout\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.logout\\')\\\"></ui-view><ui-view name=\\\"token\\\" ng-show=\\\"app.$state.includes(\\'app.services_3x.user.token\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/components/views/views.view.html\",\"<div id=\\\"views\\\" class=\\\"resource\\\"><h1>Views resource</h1><p>Link general views functionalities to services_views module.<br><br></p><p>Following requests are provided:</p><ul id=\\\"views-tabs\\\" class=\\\"nav nav-tabs nav-justified\\\" role=\\\"tablist\\\"><li ui-sref-active-eq=\\\"active\\\"><a id=\\\"connect-tab\\\" role=\\\"tab\\\" ui-sref=\\\"app.services_views.views.retrieve\\\">Retrieve</a></li></ul><div class=\\\"tabs-content\\\"><ui-view name=\\\"retrieve\\\" ng-show=\\\"app.$state.includes(\\'app.services_views.views.retrieve\\')\\\"></ui-view></div></div>\");\n$templateCache.put(\"app/templates/request/request.html\",\"<div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"><h4>Start time</h4><p>{{request.requestStart | date:\\'hh:mm:ss,sss\\'}}</p></div><div class=\\\"col-sm-3\\\"><h4>End time</h4><p>{{request.requestEnd | date:\\'hh:mm:ss,sss\\'}}</p></div><div class=\\\"col-sm-3\\\"><h4>Duration in ms</h4><p>{{request.requestDuration}}</p></div><div class=\\\"col-sm-12\\\"><h4>Response data</h4><pre>\\r\\n\t\t{{ request.data | json}}\\r\\n\t\t</pre></div></div>\");\n$templateCache.put(\"app/components/authentication/templates/getAuthenticationHeaders.html\",\"<h3>Get authentication headers</h3><p>returns the authentication headers as object as proper request config. This function is also used in the authentication workflow.</p><div>Current connectionState:<br><pre>{{authentication.currentAuthenticationHeaders | ifEmpty:\\'undefined\\' | json }}</pre></div><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doGetAuthenticationHeaders()\\\">getAuthenticationHeaders request</button>\");\n$templateCache.put(\"app/components/authentication/templates/getConnectionState.html\",\"<h3>Get connection state</h3><p>This function also provides an event that is fired every time the connection state changes.</p><p class=\\\"well\\\" ng-repeat=\\\"(key,change) in authentication.connectionStateChanges\\\">ConnectionStateChange {{key}} changed at {{change.timeOfChange | date:\\'HH:mm:ss\\'}} from [{{change.from | ifEmpty:\\'undefined\\'}}] to [{{change.to | ifEmpty:\\'undefined\\'}}]</p><p>Current connectionState = <b>{{authentication.currentConnectionState| ifEmpty:\\'undefined\\'}}</b></p><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doGetConnectionState()\\\">getConnectionState</button>\");\n$templateCache.put(\"app/components/authentication/templates/getCurrentUser.html\",\"<h3>Get current</h3><p>This function also provides an event that is fired every time the user object changes.</p><p>Current user:<br><pre>{{authentication.currentUser | json}}</pre></p><div class=\\\"\\\" ng-repeat=\\\"(key,change) in authentication.currentUserChanges\\\"><p><b>CurrentUserChange {{key}} changed at {{change.timeOfChange | date:\\'HH:mm:ss\\'}}</b></p><div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"><b>From:</b><br><pre>{{change.from | json}}</pre></div><div class=\\\"col-sm-6\\\"><b>To:</b><br><pre>{{change.to | json}}</pre></div></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doGetCurrentUser()\\\">getCurrentUser</button>\");\n$templateCache.put(\"app/components/authentication/templates/getLastConnectTime.html\",\"<h3>Get last connect time</h3><p>Last connectTime = <b>{{authentication.lastConnectionTime | date:\\'dd.MM.yyyy hh:mm:ss,sss\\' | ifEmpty:\\'0\\'}}</b></p><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doGetLastConnectTime()\\\">getLastConnectionTime request</button>\");\n$templateCache.put(\"app/components/authentication/templates/isAuthorized.html\",\"<h3>Is authorized</h3><br><blockquote>You can use this function to skip routes by <a href=\\\"\\\">adding access levels as route param</a> and check them later in your <a href=\\\"\\\">onStateChange event callback</a>.</blockquote><br><form name=\\\"isAuthorizedForm\\\" novalidate><div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"><div class=\\\"form-group\\\"><label for=\\\"isAuthorized__access_levels\\\">Access Level: <span class=\\\"badge\\\">{{authentication.selectedAccessLevel}}</span></label><br><div class=\\\"radio\\\" ng-repeat=\\\"(accessLevelName, value) in authentication.accessLevels\\\"><label><input type=\\\"radio\\\" name=\\\"access_levels\\\" id=\\\"isAuthorized__access_levels__{{accessLevelName}}\\\" ng-change=\\\"authentication.updateSelectedAccessLevel(authentication.selectedAccessLevel)\\\" ng-model=\\\"authentication.selectedAccessLevel\\\" value=\\\"{{accessLevelName}}\\\"> {{accessLevelName}} : {{authentication.accessLevels[accessLevelName]}}</label></div><div class=\\\"help-block\\\"><p class=\\\"description\\\">The access levels is a group (array) of role objects</p></div></div></div><div class=\\\"col-sm-6\\\"><div class=\\\"form-group\\\"><label for=\\\"isAuthorized__roles\\\">Roles: <span class=\\\"badge\\\"><span ng-repeat=\\\"roleId in authentication.isAuthorizedData.selectedRoles track by $index\\\"><span ng-if=\\\"$index > 0\\\">,</span> <span>{{roleId}}{{authentication.roles[roleId]}}</span></span></span></label><br><div class=\\\"checkbox\\\" ng-repeat=\\\"(roleId, value) in authentication.rolesOptions\\\"><label><input type=\\\"checkbox\\\" name=\\\"selectedRoles[]\\\" id=\\\"isAuthorized__roles__{{roleId}}\\\" ng-checked=\\\"authentication.isAuthorizedData.selectedRoles[roleId]\\\" ng-change=\\\"authentication.updateSelectedRoles(roleId)\\\" ng-model=\\\"authentication.rolesOptions[roleId]\\\"> {{roleId}} : {{ authentication.roles[roleId] }}</label></div><div class=\\\"help-block\\\"><p class=\\\"description\\\">The roles param in same as access level an array of objects</p></div></div></div></div><h2>You are: <span ng-if=\\\"authentication.isUserAuthorized\\\" class=\\\"text-success\\\">authorized</span> <span ng-if=\\\"authentication.isUserAuthorized === false\\\" class=\\\"text-danger\\\">not authorized</span></h2><hr><div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"><p>Authorize by access level checks if at least one role of the access level is in the logged in users roles</p><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doIsAuthorized(\\'level\\')\\\">isAuthorized by access level</button></div><div class=\\\"col-sm-6\\\"><p>Authorize by access level and roles checks if at least one role of the access level is in the provided roles of some other user.</p><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doIsAuthorized(\\'roles_and_level\\')\\\">Authorize by access level and roles</button></div></div></form>\");\n$templateCache.put(\"app/components/authentication/templates/login.html\",\"<h3>Login request</h3><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Login Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in authentication.loginRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"loginForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': loginForm.username.$touched && loginForm.username.$invalid || loginForm.username.$invalid && loginForm.$submitted}\\\"><label for=\\\"login__username\\\">Username</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"login__username\\\" placeholder=\\\"Name\\\" ng-model=\\\"authentication.loginData.username\\\" ng-maxlength=\\\"60\\\" maxlength=\\\"61\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p ng-if=\\\"!loginForm.username.$touched && !loginForm.$submitted || loginForm.username.$valid\\\">The user name</p><ng-messages ng-if=\\\"loginForm.username.$invalid && loginForm.username.$touched || loginForm.$submitted\\\" for=\\\"loginForm.username.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><div ng-message=\\\"maxlength\\\">Your username must be less than 61 characters long</div></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': loginForm.password.$touched && loginForm.password.$invalid || loginForm.password.$invalid && loginForm.$submitted}\\\"><label for=\\\"login__password\\\">Password</label><input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"login__password\\\" placeholder=\\\"Password\\\" ng-model=\\\"authentication.loginData.password\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!loginForm.password.$touched && !loginForm.$submitted || loginForm.password.$valid\\\">The plain text unencrypted password</p><ng-messages class=\\\"error\\\" ng-if=\\\"loginForm.password.$invalid && loginForm.password.$touched || loginForm.$submitted\\\" for=\\\"loginForm.password.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doLogin(loginForm)\\\">login request</button></form>\");\n$templateCache.put(\"app/components/authentication/templates/logout.html\",\"<h3>Logout request</h3><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Logout Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in authentication.logoutRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"logoutForm\\\" novalidate><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doLogout(logoutForm)\\\">logout request</button></form>\");\n$templateCache.put(\"app/components/authentication/templates/refreshConnection.html\",\"<h3>Refresh connection</h3><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Refresh connection request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in authentication.refreshConnectionRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"><button class=\\\"btn btn-success\\\" ng-click=\\\"authentication.doRefreshConnection()\\\">refreshConnection request</button></div><div class=\\\"col-sm-6\\\"><p>This function should be called on first launche or refresh page. Here is a flowchart of the workflow:<br><img src=\\\"assets/images/refreshTokenWorkflow.png\\\"></p></div></div>\");\n$templateCache.put(\"app/components/comment/templates/countAll.html\",\"<h2>CountAll request</h2><p>Get comment countAll.<br>see <code>services/resources/comment_resource.inc => _comment_resource_countAll()</code></p><blockquote class=\\\"bg-warning\\\"><h4>It\\'s possible to get following error here if you require a term that not exist:</h4><small><b>Fatal error</b>: __clone method called on non-object in <b>/paths/to/your/system/sites/all/modules/services/services.module</b> on line <b>1022</b><br></small><br>@TODO find patch</blockquote><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"countAll Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.countAllRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"countAllForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': countAllForm.nid.$touched && countAllForm.nid.$invalid || countAllForm.nid.$invalid && countAllForm.$submitted}\\\"><label for=\\\"countAll__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"countAll__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"comment.countAllData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!countAllForm.nid.$touched && !countAllForm.$submitted || countAllForm.nid.$valid\\\">The NID to count all comments.</p><ng-messages class=\\\"error\\\" ng-if=\\\"countAllForm.nid.$invalid && countAllForm.nid.$touched || countAllForm.$submitted\\\" for=\\\"countAllForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doCountAll(countAllForm)\\\">countAll request</button></form>\");\n$templateCache.put(\"app/components/comment/templates/countNew.html\",\"<h2>CountNew request</h2><p>Get comment countNew.<br>see <code>services/resources/comment_resource.inc => _comment_resource_countNew()</code></p><blockquote class=\\\"bg-warning\\\"><h4>It\\'s possible to get following error here if you require a term that not exist:</h4><small><b>Fatal error</b>: __clone method called on non-object in <b>/paths/to/your/system/sites/all/modules/services/services.module</b> on line <b>1022</b><br></small><br>@TODO find patch</blockquote><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"countNew Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.countNewRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"countNewForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': countNewForm.nid.$touched && countNewForm.nid.$invalid || countNewForm.nid.$invalid && countNewForm.$submitted}\\\"><label for=\\\"countNew__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"countNew__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"comment.countNewData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!countNewForm.nid.$touched && !countNewForm.$submitted || countNewForm.nid.$valid\\\">The NID to count all new comments.</p><ng-messages class=\\\"error\\\" ng-if=\\\"countNewForm.nid.$invalid && countNewForm.nid.$touched || countNewForm.$submitted\\\" for=\\\"countNewForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doCountNew(countNewForm)\\\">countNew request</button></form>\");\n$templateCache.put(\"app/components/comment/templates/create.html\",\"<h2>Create request</h2><p>Create a new comment.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/comment_resource.inc => _comment_resource_create()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Create Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.createRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.nid.$touched && createForm.nid.$invalid || createForm.nid.$invalid && createForm.$submitted }\\\"><label for=\\\"retrieve__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"comment.createData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.nid.$touched && !createForm.$submitted || createForm.nid.$valid\\\">NID of the Node to save comment to</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.nid.$invalid && createForm.nid.$touched || createForm.$submitted\\\" for=\\\"createForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.subject.$touched && createForm.subject.$invalid || createForm.subject.$invalid && createForm.$submitted}\\\"><label for=\\\"create__subject\\\">Subject</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"subject\\\" id=\\\"create__subject\\\" placeholder=\\\"Subject\\\" ng-model=\\\"comment.createData.subject\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.subject.$touched && !createForm.$submitted || createForm.subject.$valid\\\">The comment subject</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.subject.$invalid && createForm.subject.$touched || createForm.$submitted\\\" for=\\\"createForm.subject.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.comment_body_value.$touched && createForm.comment_body_value.$invalid || createForm.comment_body_value.$invalid && createForm.$submitted}\\\"><label for=\\\"create__comment_body_value\\\">Body Value</label><textarea class=\\\"form-control\\\" name=\\\"comment_body_value\\\" id=\\\"create__comment_body_value\\\" placeholder=\\\"Body Value\\\" ng-model=\\\"comment.createData.comment_body_value\\\" required>\\r\\n\t\t</textarea><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.comment_body_value.$touched && !createForm.$submitted || createForm.comment_body_value.$valid\\\">The body value.</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.comment_body_value.$invalid && createForm.comment_body_value.$touched || createForm.$submitted\\\" for=\\\"createForm.comment_body_value.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doCreate(createForm)\\\">create request</button></form>\");\n$templateCache.put(\"app/components/comment/templates/delete.html\",\"<h2>Delete request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Delete Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.deleteRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"deleteForm\\\" novalidate><div class=\\\"form-errors\\\"><div class=\\\"alert alert-danger fade in\\\" ng-repeat=\\\"serverError in comment.deleteErrors.errors.server_errors\\\">{{serverError}}</div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': deleteForm.cid.$touched && deleteForm.cid.$invalid || deleteForm.cid.$invalid && deleteForm.$submitted}\\\"><label for=\\\"delete__cid\\\">Cid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"delete__cid\\\" name=\\\"cid\\\" placeholder=\\\"Cid\\\" ng-model=\\\"comment.deleteData.cid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!deleteForm.cid.$touched && !deleteForm.$submitted || deleteForm.cid.$valid\\\">CID of the terms to delete</p><ng-messages class=\\\"error\\\" ng-if=\\\"deleteForm.cid.$invalid && deleteForm.cid.$touched || deleteForm.$submitted\\\" for=\\\"deleteForm.cid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doDelete(deleteForm)\\\">delete request</button></form>\");\n$templateCache.put(\"app/components/comment/templates/index.html\",\"<h2>Index request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Index Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.indexRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"indexForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.page.$touched && indexForm.page.$invalid || indexForm.page.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__page\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__page\\\" name=\\\"page\\\" placeholder=\\\"Page\\\" ng-model=\\\"comment.indexData.page\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"subject\\\" ng-if=\\\"!indexForm.page.$touched && !indexForm.$submitted || indexForm.page.$valid\\\">Number of items to display on one page</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.page.$invalid && indexForm.page.$touched || indexForm.$submitted\\\" for=\\\"indexForm.page.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.pagesize.$touched && indexForm.pagesize.$invalid || indexForm.pagesize.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__pagesize\\\">Pagesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pagesize\\\" name=\\\"pagesize\\\" placeholder=\\\"Pagesize\\\" ng-model=\\\"comment.indexData.pagesize\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"subject\\\" ng-if=\\\"!indexForm.pagesize.$touched && !indexForm.$submitted || indexForm.pagesize.$valid\\\">Number of items to display on one page. (Anonymous comment are limited to 25)</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.pagesize.$invalid && indexForm.pagesize.$touched || indexForm.$submitted\\\" for=\\\"indexForm.pagesize.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"comment.indexFieldsColapsed = !comment.indexFieldsColapsed\\\">Fields <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[comment.indexFieldsColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"subject\\\">Define the fields to fetched.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!comment.indexFieldsColapsed && \\'in\\'\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.cid\\\"> fields.cid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.nid\\\"> fields.nid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.uid\\\"> fields.uid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.subject\\\"> fields.subject</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.hostname\\\"> fields.hostname</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.created\\\"> fields.created</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.changed\\\"> fields.changed</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.status\\\"> fields.status</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.name\\\"> fields.name</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.mail\\\"> fields.mail</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.homepage\\\"> fields.homepage</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"comment.indexData.fields.language\\\"> fields.language</label></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"comment.indexParametersColapsed = !comment.indexParametersColapsed\\\">Parameters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[comment.indexParametersColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"subject\\\">Filter by field value.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!comment.indexParametersColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><label for=\\\"index__parameters_cid\\\">Parameter cid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_cid\\\" placeholder=\\\"Cid\\\" ng-model=\\\"comment.indexData.parameters.cid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_nid\\\">Parameter nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"comment.indexData.parameters.nid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_uid\\\">Parameter uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"comment.indexData.parameters.uid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_subject\\\">Parameter subject</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_subject\\\" placeholder=\\\"Subject\\\" ng-model=\\\"comment.indexData.parameters.subject\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_hostname\\\">Parameter hostname</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_hostname\\\" placeholder=\\\"Hostname\\\" ng-model=\\\"comment.indexData.parameters.hostname\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_created\\\">Parameter created</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_created\\\" placeholder=\\\"Created\\\" ng-model=\\\"comment.indexData.parameters.created\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_changed\\\">Parameter changed</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_changed\\\" placeholder=\\\"Changed\\\" ng-model=\\\"comment.indexData.parameters.changed\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_signature\\\">Parameter status</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_status\\\" placeholder=\\\"Status\\\" ng-model=\\\"comment.indexData.parameters.status\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_mail\\\">Parameter mail</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_mail\\\" placeholder=\\\"Mail\\\" ng-model=\\\"comment.indexData.parameters.mail\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_name\\\">Parameter name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_name\\\" placeholder=\\\"Name\\\" ng-model=\\\"comment.indexData.parameters.name\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_language\\\">Parameter language</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_language\\\" placeholder=\\\"Language\\\" ng-model=\\\"comment.indexData.parameters.language\\\"></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doIndex(indexForm)\\\">index request</button></form>\");\n$templateCache.put(\"app/components/comment/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Get comment details.<br>see <code>services/resources/comment_resource.inc => _comment_resource_retrieve()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.cid.$touched && retrieveForm.cid.$invalid || retrieveForm.cid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__cid\\\">Cid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__cid\\\" name=\\\"cid\\\" placeholder=\\\"Cid\\\" ng-model=\\\"comment.retrieveData.cid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.cid.$touched && !retrieveForm.$submitted || retrieveForm.cid.$valid\\\">CID of the comment to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.cid.$invalid && retrieveForm.cid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.cid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");\n$templateCache.put(\"app/components/comment/templates/update.html\",\"<h2>Update request</h2><p>Update a new comment.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/comment_resource.inc => _comment_resource_update()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Update Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in comment.updateRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"updateForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.cid.$touched && updateForm.cid.$invalid || updateForm.cid.$invalid && updateForm.$submitted }\\\"><label for=\\\"retrieve__cid\\\">Cid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__cid\\\" name=\\\"cid\\\" placeholder=\\\"Cid\\\" ng-model=\\\"comment.updateData.cid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.cid.$touched && !updateForm.$submitted || updateForm.cid.$valid\\\">CID of the Comment to update</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.cid.$invalid && updateForm.cid.$touched || updateForm.$submitted\\\" for=\\\"updateForm.cid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.subject.$touched && updateForm.subject.$invalid || updateForm.subject.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__subject\\\">Subject</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"subject\\\" id=\\\"update__subject\\\" placeholder=\\\"Subject\\\" ng-model=\\\"comment.updateData.subject\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.subject.$touched && !updateForm.$submitted || updateForm.subject.$valid\\\">The comment subject</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.subject.$invalid && updateForm.subject.$touched || updateForm.$submitted\\\" for=\\\"updateForm.subject.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.comment_body_value.$touched && updateForm.comment_body_value.$invalid || updateForm.comment_body_value.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__comment_body_value\\\">Body Value</label><textarea class=\\\"form-control\\\" name=\\\"comment_body_value\\\" id=\\\"update__comment_body_value\\\" placeholder=\\\"Body Value\\\" ng-model=\\\"comment.updateData.comment_body_value\\\" required>\\r\\n\t\t</textarea><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.comment_body_value.$touched && !updateForm.$submitted || updateForm.comment_body_value.$valid\\\">The body value.</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.comment_body_value.$invalid && updateForm.comment_body_value.$touched || updateForm.$submitted\\\" for=\\\"updateForm.comment_body_value.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"comment.doUpdate(updateForm)\\\">update request</button></form>\");\n$templateCache.put(\"app/components/file/templates/create.html\",\"<h2>Create request</h2><p>Create a new file.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/file_resource.inc => _file_resource_create()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Create Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in file.createRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.file.$touched && createForm.file.$invalid || createForm.file.$invalid && createForm.$submitted}\\\"><label for=\\\"create__file\\\">File</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"file\\\" id=\\\"create__file\\\" placeholder=\\\"File\\\" ng-model=\\\"file.createData.file\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.file.$touched && !createForm.$submitted || createForm.file.$valid\\\">An array representing a file.</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.file.$invalid && createForm.file.$touched || createForm.$submitted\\\" for=\\\"createForm.file.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.filename.$touched && createForm.filename.$invalid || createForm.filename.$invalid && createForm.$submitted}\\\"><label for=\\\"create__filename\\\">Filename</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"filename\\\" id=\\\"create__filename\\\" placeholder=\\\"File\\\" ng-model=\\\"file.createData.filename\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.filename.$touched && !createForm.$submitted || createForm.filename.$valid\\\">The name of the file</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.filename.$invalid && createForm.filename.$touched || createForm.$submitted\\\" for=\\\"createForm.filename.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.filesize.$touched && createForm.filesize.$invalid || createForm.filesize.$invalid && createForm.$submitted}\\\"><label for=\\\"create__filesize\\\">Filesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"filesize\\\" id=\\\"create__filesize\\\" placeholder=\\\"File\\\" ng-model=\\\"file.createData.filesize\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.filesize.$touched && !createForm.$submitted || createForm.filesize.$valid\\\">The files size</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.filesize.$invalid && createForm.filesize.$touched || createForm.$submitted\\\" for=\\\"createForm.filesize.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.filepath.$touched && createForm.filepath.$invalid || createForm.filepath.$invalid && createForm.$submitted}\\\"><label for=\\\"create__filepath\\\">Filepath</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"filepath\\\" id=\\\"create__filepath\\\" placeholder=\\\"File\\\" ng-model=\\\"file.createData.filepath\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.filepath.$touched && !createForm.$submitted || createForm.filepath.$valid\\\">The path to store file</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.filepath.$invalid && createForm.filepath.$touched || createForm.$submitted\\\" for=\\\"createForm.filepath.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.image_file_name.$touched && createForm.image_file_name.$invalid || createForm.image_file_name.$invalid && createForm.$submitted}\\\"><label for=\\\"create__image_file_name\\\">Image File Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"image_file_name\\\" id=\\\"create__image_file_name\\\" placeholder=\\\"File\\\" ng-model=\\\"file.createData.image_file_name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.image_file_name.$touched && !createForm.$submitted || createForm.image_file_name.$valid\\\">The image files name</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.image_file_name.$invalid && createForm.image_file_name.$touched || createForm.$submitted\\\" for=\\\"createForm.image_file_name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"file.doCreate(createForm)\\\">create request</button></form>\");\n$templateCache.put(\"app/components/file/templates/createRaw.html\",\"<h2>Create raw request</h2><p>Create a file with raw data.<br>see <code>services/resources/file_resource.inc => _file_resource_files()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"CreateRaw Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in file.createRawRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createRawForm\\\" novalidate><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doCreateRaw(createRawForm)\\\">Create raw request</button></form>\");\n$templateCache.put(\"app/components/file/templates/delete.html\",\"<h2>Delete request</h2><p>If the file is added to a node the request returns an object with the node id in it:<pre>\\r\\n\\\"file\\\": {\\r\\n    \\\"node\\\": {\\r\\n      \\\"15\\\": \\\"1\\\"\\r\\n    }\\r\\n}\\r\\n</pre>If you delete this node the file is also deleted.<br>If the file is not connected to a node you can delete it here.</p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Delete Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in file.deleteRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"deleteForm\\\" novalidate><div class=\\\"form-errors\\\"><div class=\\\"alert alert-danger fade in\\\" ng-repeat=\\\"serverError in file.deleteErrors.errors.server_errors\\\">{{serverError}}</div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': deleteForm.fid.$touched && deleteForm.fid.$invalid || deleteForm.fid.$invalid && deleteForm.$submitted}\\\"><label for=\\\"delete__fid\\\">Fid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"delete__fid\\\" name=\\\"fid\\\" placeholder=\\\"Fid\\\" ng-model=\\\"file.deleteData.fid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!deleteForm.fid.$touched && !deleteForm.$submitted || deleteForm.fid.$valid\\\">FID of the file to be deleted</p><ng-messages class=\\\"error\\\" ng-if=\\\"deleteForm.fid.$invalid && deleteForm.fid.$touched || deleteForm.$submitted\\\" for=\\\"deleteForm.fid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"file.doDelete(deleteForm)\\\">delete request</button></form>\");\n$templateCache.put(\"app/components/file/templates/index.html\",\"<h2>Index request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Index Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in file.indexRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"indexForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.page.$touched && indexForm.page.$invalid || indexForm.page.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__page\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__page\\\" name=\\\"page\\\" placeholder=\\\"Page\\\" ng-model=\\\"file.indexData.page\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.page.$touched && !indexForm.$submitted || indexForm.page.$valid\\\">Number of items to display on one page</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.page.$invalid && indexForm.page.$touched || createForm.$submitted\\\" for=\\\"indexForm.page.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.pagesize.$touched && indexForm.pagesize.$invalid || indexForm.pagesize.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__pagesize\\\">Pagesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pagesize\\\" name=\\\"pagesize\\\" placeholder=\\\"Pagesize\\\" ng-model=\\\"file.indexData.pagesize\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.pagesize.$touched && !indexForm.$submitted || indexForm.pagesize.$valid\\\">Number of items to display on one page. (Anonymous file are limited to 25)</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.pagesize.$invalid && indexForm.pagesize.$touched || createForm.$submitted\\\" for=\\\"indexForm.pagesize.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"file.indexFieldsColapsed = !file.indexFieldsColapsed\\\">Fields <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[file.indexFieldsColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Define the fields to fetched.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!file.indexFieldsColapsed && \\'in\\'\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.fid\\\"> fields.fid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.uid\\\"> fields.uid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.filename\\\"> fields.filename</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.filemime\\\"> fields.filemime</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.filesize\\\"> fields.filesize</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.status\\\"> fields.status</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.indexData.fields.timestamp\\\"> fields.timestamp</label></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"file.indexParametersColapsed = !file.indexParametersColapsed\\\">Parameters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[file.indexParametersColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Filter by field value.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!file.indexParametersColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><label for=\\\"index__parameters_uid\\\">Parameter fid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_uid\\\" placeholder=\\\"Fid\\\" ng-model=\\\"file.indexData.parameters.fid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_uid\\\">Parameter uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"file.indexData.parameters.uid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_name\\\">Parameter filename</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_filename\\\" placeholder=\\\"Filename\\\" ng-model=\\\"file.indexData.parameters.filename\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_filemime\\\">Parameter filemime</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_filemime\\\" placeholder=\\\"Filemime\\\" ng-model=\\\"file.indexData.parameters.filemime\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_filesize\\\">Parameter filesize</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_filesize\\\" placeholder=\\\"Filesize\\\" ng-model=\\\"file.indexData.parameters.filesize\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_status\\\">Parameter status</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_status\\\" placeholder=\\\"Status\\\" ng-model=\\\"file.indexData.parameters.status\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_access\\\">Parameter timestamp</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_timestamp\\\" placeholder=\\\"Timestamp\\\" ng-model=\\\"file.indexData.parameters.timestamp\\\"></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"file.doIndex(indexForm)\\\">index request</button></form>\");\n$templateCache.put(\"app/components/file/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Get file details.<br>see <code>services/resources/file_resource.inc => _file_resource_retrieve()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in file.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.fid.$touched && retrieveForm.fid.$invalid || retrieveForm.fid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__fid\\\">Fid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__fid\\\" name=\\\"fid\\\" placeholder=\\\"Fid\\\" ng-model=\\\"file.retrieveData.fid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.fid.$touched && !retrieveForm.$submitted || retrieveForm.fid.$valid\\\">FID of the file to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.fid.$invalid && retrieveForm.fid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.fid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.retrieveData.file_contents\\\"> File Contents</label><div class=\\\"help-block\\\"><p class=\\\"description\\\">To return file contents or not.</p></div></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"file.retrieveData.image_styles\\\"> Image Styles</label><div class=\\\"help-block\\\"><p class=\\\"description\\\">To return image styles or not.</p></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"file.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");\n$templateCache.put(\"app/components/node/templates/attachFile.html\",\"<h2>AttachFile request</h2><p>Get node details.<br>see <code>services/resources/node_resource.inc => _node_resource_attachFile()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"AttachFile Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.attachFileRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"attachFileForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': attachFileForm.nid.$touched && attachFileForm.nid.$invalid || attachFileForm.nid.$invalid && attachFileForm.$submitted }\\\"><label for=\\\"attachFile__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"attachFile__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.attachFileData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!attachFileForm.nid.$touched && !attachFileForm.$submitted || attachFileForm.nid.$valid\\\">NID of the node to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"attachFileForm.nid.$invalid && attachFileForm.nid.$touched || attachFileForm.$submitted\\\" for=\\\"attachFileForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': attachFileForm.field_name.$touched && attachFileForm.field_name.$invalid || attachFileForm.field_name.$invalid && attachFileForm.$submitted }\\\"><label for=\\\"attachFile__field_name\\\">Field name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"attachFile__field_name\\\" name=\\\"field_name\\\" placeholder=\\\"Field name\\\" ng-model=\\\"node.attachFileData.field_name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!attachFileForm.field_name.$touched && !attachFileForm.$submitted || attachFileForm.field_name.$valid\\\">The file field name</p><ng-messages class=\\\"error\\\" ng-if=\\\"attachFileForm.field_name.$invalid && attachFileForm.field_name.$touched || attachFileForm.$submitted\\\" for=\\\"attachFileForm.field_name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': attachFileForm.attach.$touched && attachFileForm.attach.$invalid || attachFileForm.attach.$invalid && attachFileForm.$submitted }\\\"><label for=\\\"attachFile__attach\\\">Attach</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"attachFile__attach\\\" name=\\\"attach\\\" placeholder=\\\"Attach\\\" ng-model=\\\"node.attachFileData.attach\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!attachFileForm.attach.$touched && !attachFileForm.$submitted || attachFileForm.attach.$valid\\\">Attach the file(s) to the node. If FALSE, this clears ALL files attached, and attaches the files</p><ng-messages class=\\\"error\\\" ng-if=\\\"attachFileForm.attach.$invalid && attachFileForm.attach.$touched || attachFileForm.$submitted\\\" for=\\\"attachFileForm.attach.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><label>Field values:</label><br><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': attachFileForm.field_values.title.$touched && attachFileForm.field_values.title.$invalid || attachFileForm.field_values.title.$invalid && attachFileForm.$submitted }\\\"><label for=\\\"attachFile__attach\\\">Title</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"attachFile__field_values_title\\\" name=\\\"field_values_title\\\" placeholder=\\\"Title\\\" ng-model=\\\"node.attachFileData.field_values.title\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!attachFileForm.field_values.title.$touched && !attachFileForm.$submitted || attachFileForm.field_values.title.$valid\\\">The extra title field value</p><ng-messages class=\\\"error\\\" ng-if=\\\"attachFileForm.field_values.title.$invalid && attachFileForm.field_values.title.$touched || attachFileForm.$submitted\\\" for=\\\"attachFileForm.field_values.title.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': attachFileForm.field_values.alt.$touched && attachFileForm.field_values.alt.$invalid || attachFileForm.field_values.alt.$invalid && attachFileForm.$submitted }\\\"><label for=\\\"attachFile__attach\\\">Alt</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"attachFile__field_values_alt\\\" name=\\\"field_values_alt\\\" placeholder=\\\"Alt\\\" ng-model=\\\"node.attachFileData.field_values.alt\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!attachFileForm.field_values.alt.$touched && !attachFileForm.$submitted || attachFileForm.field_values.alt.$valid\\\">The extra alt field value</p><ng-messages class=\\\"error\\\" ng-if=\\\"attachFileForm.field_values.alt.$invalid && attachFileForm.field_values.alt.$touched || attachFileForm.$submitted\\\" for=\\\"attachFileForm.field_values.alt.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doAttachFile(attachFileForm)\\\">Attach File request</button></form>\");\n$templateCache.put(\"app/components/node/templates/comments.html\",\"<h2>Comments request</h2><p>Get node details.<br>see <code>services/resources/node_resource.inc => _node_resource_comments()</code><br><blockquote class=\\\"bg-warning\\\"><h4>It\\'s possible to get following error here:</h4><small><b>Fatal error</b>: Call to undefined function services_field_permissions_comment_clean() in <b>/paths/to/your/system/sites/all/modules/services/resources/node_resource.inc</b> on line <b>614</b></small><br><a target=\\\"_blank\\\" href=\\\"https://www.drupal.org/files/issues/services_wrong_function_call_in_node_resource-2475119-99.patch\\\">Here</a> is a patch for this.</blockquote></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Comments Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.commentsRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"commentsForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': commentsForm.nid.$touched && commentsForm.nid.$invalid || commentsForm.nid.$invalid && commentsForm.$submitted }\\\"><label for=\\\"comments__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"comments__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.commentsData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!commentsForm.nid.$touched && !commentsForm.$submitted || commentsForm.nid.$valid\\\">NID of the node to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"commentsForm.nid.$invalid && commentsForm.nid.$touched || commentsForm.$submitted\\\" for=\\\"commentsForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': commentsForm.count.$touched && commentsForm.count.$invalid || commentsForm.count.$invalid && commentsForm.$submitted }\\\"><label for=\\\"comments__count\\\">Count</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"comments__count\\\" name=\\\"count\\\" placeholder=\\\"Count\\\" ng-model=\\\"node.commentsData.count\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!commentsForm.count.$touched && !commentsForm.$submitted || commentsForm.count.$valid\\\">Number of comments to load.</p><ng-messages class=\\\"error\\\" ng-if=\\\"commentsForm.count.$invalid && commentsForm.count.$touched || commentsForm.$submitted\\\" for=\\\"commentsForm.count.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': commentsForm.offset.$touched && commentsForm.offset.$invalid || commentsForm.offset.$invalid && commentsForm.$submitted }\\\"><label for=\\\"comments__offset\\\">Offset</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"comments__offset\\\" name=\\\"offset\\\" placeholder=\\\"Offset\\\" ng-model=\\\"node.commentsData.offset\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!commentsForm.offset.$touched && !commentsForm.$submitted || commentsForm.offset.$valid\\\">If count is set to non-zero value, you can pass also non-zero value for start. For example to get comments from 5 to 15, pass count=10 and offset=5.</p><ng-messages class=\\\"error\\\" ng-if=\\\"commentsForm.offset.$invalid && commentsForm.offset.$touched || commentsForm.$submitted\\\" for=\\\"commentsForm.offset.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doComments(commentsForm)\\\">comments request</button></form>\");\n$templateCache.put(\"app/components/node/templates/create.html\",\"<h2>Create request</h2><p>Create a new node.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/node_resource.inc => _node_resource_create()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Create Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.createRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.title.$touched && createForm.title.$invalid || createForm.title.$invalid && createForm.$submitted}\\\"><label for=\\\"create__title\\\">Title</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"create__title\\\" placeholder=\\\"Title\\\" ng-model=\\\"node.createData.title\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.title.$touched && !createForm.$submitted || createForm.title.$valid\\\">The node title</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.title.$invalid && createForm.title.$touched || createForm.$submitted\\\" for=\\\"createForm.title.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.type.$touched && createForm.type.$invalid || createForm.type.$invalid && createForm.$submitted}\\\"><label for=\\\"create__type\\\">Type</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"type\\\" id=\\\"create__type\\\" placeholder=\\\"Title\\\" ng-model=\\\"node.createData.type\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.type.$touched && !createForm.$submitted || createForm.type.$valid\\\">The node type. Default types are page and article</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.type.$invalid && createForm.type.$touched || createForm.$submitted\\\" for=\\\"createForm.type.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.body_value.$touched && createForm.body_value.$invalid || createForm.body_value.$invalid && createForm.$submitted}\\\"><label for=\\\"create__body_value\\\">Body Value</label><textarea class=\\\"form-control\\\" name=\\\"body_value\\\" id=\\\"create__body_value\\\" placeholder=\\\"Body Value\\\" ng-model=\\\"node.createData.body_value\\\" required>\\r\\n\t\t</textarea><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.body_value.$touched && !createForm.$submitted || createForm.body_value.$valid\\\">The body value.</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.body_value.$invalid && createForm.body_value.$touched || createForm.$submitted\\\" for=\\\"createForm.body_value.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.body_summary.$touched && createForm.body_summary.$invalid || createForm.body_summary.$invalid && createForm.$submitted}\\\"><label for=\\\"create__body_summary\\\">Body Summary</label><textarea class=\\\"form-control\\\" name=\\\"body_summary\\\" id=\\\"create__body_summary\\\" placeholder=\\\"Body Summary\\\" ng-model=\\\"node.createData.body_summary\\\" required>\\r\\n\t\t</textarea><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.body_summary.$touched && !createForm.$submitted || createForm.body_summary.$valid\\\">The body summary</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.body_summary.$invalid && createForm.body_summary.$touched || createForm.$submitted\\\" for=\\\"createForm.body_summary.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.field_custom_field.$touched && createForm.field_custom_field.$invalid || createForm.field_custom_field.$invalid && createForm.$submitted}\\\"><label for=\\\"create__field_custom_field\\\">Custom Field</label><input type=\\\"field_custom_field\\\" class=\\\"form-control\\\" name=\\\"field_custom_field\\\" id=\\\"create__field_custom_field\\\" placeholder=\\\"custom_field\\\" ng-model=\\\"node.createData.field_custom_field\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.field_custom_field.$touched && !createForm.$submitted || createForm.field_custom_field.$valid\\\">The nodes custom_field. ( Custom field. Needs to be <a target=\\\"_blank\\\" href=\\\"https://www.drupal.org/node/1354202\\\">formated properly</a>. )</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.field_custom_field.$invalid && createForm.field_custom_field.$touched || createForm.$submitted\\\" for=\\\"createForm.field_custom_field.$error\\\"></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doCreate(createForm)\\\">create request</button></form>\");\n$templateCache.put(\"app/components/node/templates/delete.html\",\"<h2>Delete request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Delete Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.deleteRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"deleteForm\\\" novalidate><div class=\\\"form-errors\\\"><div class=\\\"alert alert-danger fade in\\\" ng-repeat=\\\"serverError in node.deleteErrors.errors.server_errors\\\">{{serverError}}</div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': deleteForm.nid.$touched && deleteForm.nid.$invalid || deleteForm.nid.$invalid && deleteForm.$submitted}\\\"><label for=\\\"delete__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"delete__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.deleteData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!deleteForm.nid.$touched && !deleteForm.$submitted || deleteForm.nid.$valid\\\">NID of the node to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"deleteForm.nid.$invalid && deleteForm.nid.$touched || deleteForm.$submitted\\\" for=\\\"deleteForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doDelete(deleteForm)\\\">delete request</button></form>\");\n$templateCache.put(\"app/components/node/templates/files.html\",\"<h2>Files request</h2><p>Get node details.<br>see <code>services/resources/node_resource.inc => _node_resource_files()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Files Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.filesRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"filesForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': filesForm.nid.$touched && filesForm.nid.$invalid || filesForm.nid.$invalid && filesForm.$submitted }\\\"><label for=\\\"files__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"files__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.filesData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!filesForm.nid.$touched && !filesForm.$submitted || filesForm.nid.$valid\\\">NID of the node to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"filesForm.nid.$invalid && filesForm.nid.$touched || filesForm.$submitted\\\" for=\\\"filesForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.filesData.file_contents\\\"> File contents</label><div class=\\\"help-block\\\">To return file contents or not.</div></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.filesData.image_styles\\\"> Image Styles</label><div class=\\\"help-block\\\">To return image styles or not.</div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doFiles(filesForm)\\\">files request</button></form>\");\n$templateCache.put(\"app/components/node/templates/index.html\",\"<h2>Index request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Index Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.indexRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"indexForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.page.$touched && indexForm.page.$invalid || indexForm.page.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__page\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__page\\\" name=\\\"page\\\" placeholder=\\\"Page\\\" ng-model=\\\"node.indexData.page\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.page.$touched && !indexForm.$submitted || indexForm.page.$valid\\\">Number of items to display on one page</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.page.$invalid && indexForm.page.$touched || indexForm.$submitted\\\" for=\\\"indexForm.page.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.pagesize.$touched && indexForm.pagesize.$invalid || indexForm.pagesize.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__pagesize\\\">Pagesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pagesize\\\" name=\\\"pagesize\\\" placeholder=\\\"Pagesize\\\" ng-model=\\\"node.indexData.pagesize\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.pagesize.$touched && !indexForm.$submitted || indexForm.pagesize.$valid\\\">Number of items to display on one page. (Anonymous node are limited to 25)</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.pagesize.$invalid && indexForm.pagesize.$touched || indexForm.$submitted\\\" for=\\\"indexForm.pagesize.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"node.indexFieldsColapsed = !node.indexFieldsColapsed\\\">Fields <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[node.indexFieldsColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Define the fields to fetched.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!node.indexFieldsColapsed && \\'in\\'\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.nid\\\"> fields.nid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.vid\\\"> fields.vid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.title\\\"> fields.title</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.status\\\"> fields.status</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.comment\\\"> fields.comment</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.promote\\\"> fields.promote</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.sticky\\\"> fields.sticky</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.created\\\"> fields.created</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.changed\\\"> fields.changed</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.type\\\"> fields.type</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.language\\\"> fields.language</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.tnid\\\"> fields.tnid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"node.indexData.fields.translate\\\"> fields.translate</label></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"node.indexParametersColapsed = !node.indexParametersColapsed\\\">Parameters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[node.indexParametersColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Filter by field value.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!node.indexParametersColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><label for=\\\"index__parameters_nid\\\">Parameter nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.indexData.parameters.nid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_vid\\\">Parameter vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"node.indexData.parameters.vid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_title\\\">Parameter title</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_title\\\" placeholder=\\\"Title\\\" ng-model=\\\"node.indexData.parameters.title\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_status\\\">Parameter status</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_status\\\" placeholder=\\\"Status\\\" ng-model=\\\"node.indexData.parameters.status\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_comment\\\">Parameter comment</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_comment\\\" placeholder=\\\"Comment\\\" ng-model=\\\"node.indexData.parameters.comment\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_promote\\\">Parameter promote</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_promote\\\" placeholder=\\\"Promote\\\" ng-model=\\\"node.indexData.parameters.promote\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_sticky\\\">Parameter sticky</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_sticky\\\" placeholder=\\\"Sticky\\\" ng-model=\\\"node.indexData.parameters.sticky\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_created\\\">Parameter created</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_created\\\" placeholder=\\\"Created\\\" ng-model=\\\"node.indexData.parameters.created\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_changed\\\">Parameter changed</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_changed\\\" placeholder=\\\"Changed\\\" ng-model=\\\"node.indexData.parameters.changed\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_type\\\">Parameter type</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_type\\\" placeholder=\\\"Type\\\" ng-model=\\\"node.indexData.parameters.type\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_language\\\">Parameter language</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_language\\\" placeholder=\\\"Language\\\" ng-model=\\\"node.indexData.parameters.language\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_tnid\\\">Parameter tnid</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_tnid\\\" placeholder=\\\"Tnid\\\" ng-model=\\\"node.indexData.parameters.tnid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_timezone\\\">Parameter translate</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_translate\\\" placeholder=\\\"Translate\\\" ng-model=\\\"node.indexData.parameters.translate\\\"></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doIndex(indexForm)\\\">index request</button></form>\");\n$templateCache.put(\"app/components/node/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Get node details.<br>see <code>services/resources/node_resource.inc => _node_resource_retrieve()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.nid.$touched && retrieveForm.nid.$invalid || retrieveForm.nid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.retrieveData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.nid.$touched && !retrieveForm.$submitted || retrieveForm.nid.$valid\\\">NID of the node to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.nid.$invalid && retrieveForm.nid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");\n$templateCache.put(\"app/components/node/templates/update.html\",\"<h2>Update request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Update Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in node.updateRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"updateForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.nid.$touched && updateForm.nid.$invalid || updateForm.nid.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"update__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"node.updateData.nid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.nid.$touched && !updateForm.$submitted || updateForm.nid.$valid\\\">NID of the node to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.nid.$invalid && updateForm.nid.$touched || updateForm.$submitted\\\" for=\\\"updateForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.title.$touched && updateForm.title.$invalid || updateForm.title.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__title\\\">Title</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"update__title\\\" placeholder=\\\"Title\\\" ng-model=\\\"node.updateData.title\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.title.$touched && !updateForm.$submitted || updateForm.title.$valid\\\">The node title</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.title.$invalid && updateForm.title.$touched || updateForm.$submitted\\\" for=\\\"updateForm.title.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.body_value.$touched && updateForm.body_value.$invalid || updateForm.body_value.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__body_value\\\">Body Value</label><textarea class=\\\"form-control\\\" name=\\\"body_value\\\" id=\\\"update__body_value\\\" placeholder=\\\"Body Value\\\" ng-model=\\\"node.updateData.body_value\\\" required>\\r\\n\t\t</textarea><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.body_value.$touched && !updateForm.$submitted || updateForm.body_value.$valid\\\">The body value.</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.body_value.$invalid && updateForm.body_value.$touched || updateForm.$submitted\\\" for=\\\"updateForm.body_value.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.body_summary.$touched && updateForm.body_summary.$invalid || updateForm.body_summary.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__body_summary\\\">Body Summary</label><textarea class=\\\"form-control\\\" name=\\\"body_summary\\\" id=\\\"update__body_summary\\\" placeholder=\\\"Body Summary\\\" ng-model=\\\"node.updateData.body_summary\\\" required>\\r\\n\t\t</textarea><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.body_summary.$touched && !updateForm.$submitted || updateForm.body_summary.$valid\\\">The body summary</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.body_summary.$invalid && updateForm.body_summary.$touched || updateForm.$submitted\\\" for=\\\"updateForm.body_summary.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.field_custom_field.$touched && updateForm.field_custom_field.$invalid || updateForm.field_custom_field.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__field_custom_field\\\">Custom Field</label><input type=\\\"field_custom_field\\\" class=\\\"form-control\\\" name=\\\"field_custom_field\\\" id=\\\"update__field_custom_field\\\" placeholder=\\\"custom_field\\\" ng-model=\\\"node.updateData.field_custom_field\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.field_custom_field.$touched && !updateForm.$submitted || updateForm.field_custom_field.$valid\\\">The nodes custom_field. ( Custom field. Needs to be <a target=\\\"_blank\\\" href=\\\"https://www.drupal.org/node/1354202\\\">formated properly</a>. )</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.field_custom_field.$invalid && updateForm.field_custom_field.$touched || updateForm.$submitted\\\" for=\\\"updateForm.field_custom_field.$error\\\"></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"node.doUpdate(updateForm)\\\">update request</button></form>\");\n$templateCache.put(\"app/components/system/templates/connect.html\",\"<h2>Connect request</h2><p>Returns the details of currently logged in user.<br>object with session id, session name and a user object.<br>See <code>services/resources/system_resource.inc</code></p><hr><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Connect Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in system.connectRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"connectForm\\\" novalidate><button class=\\\"btn btn-success\\\" ng-click=\\\"system.doConncet(connectForm)\\\">connect request</button></form>\");\n$templateCache.put(\"app/components/system/templates/delVariable.html\",\"<h2>Del Variable request</h2><p>Unsets a persistent variable.<br>Case-sensitivity of the variable_* functions depends on the database collation used. To avoid problems, always use lower case for persistent variable names.<br>See <a target=\\\"_blank\\\" href=\\\"https://api.drupal.org/api/drupal/includes!bootstrap.inc/function/variable_del/7\\\" title=\\\"variable_del\\\">variable_del</a> and <code>services/resources/system_resource.inc</code></p><hr><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Del Variable Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in system.delVariableRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"delVariableForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': delVariableForm.name.$touched && delVariableForm.name.$invalid || delVariableForm.name.$invalid && delVariableForm.$submitted}\\\"><label for=\\\"del_variable__name\\\">Name</label><input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"del_variable__name\\\" placeholder=\\\"Variable name\\\" ng-model=\\\"system.delVariableData.name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!delVariableForm.name.$touched && !delVariableForm.$submitted || delVariableForm.name.$valid\\\">The name of the variable to return</p><ng-messages class=\\\"error\\\" ng-if=\\\"delVariableForm.name.$invalid && delVariableForm.name.$touched || delVariableForm.$submitted\\\" for=\\\"delVariableForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"system.doDelVariable(delVariableForm)\\\">del_variable request</button></form>\");\n$templateCache.put(\"app/components/system/templates/getVariable.html\",\"<h2>Get Variable request</h2><p>Returns a persistent variable.<br>Case-sensitivity of the variable_* functions depends on the database collation used. To avoid problems, always use lower case for persistent variable names.<br>See <a target=\\\"_blank\\\" href=\\\"https://api.drupal.org/api/drupal/includes!bootstrap.inc/function/variable_get/7\\\" title=\\\"variable_get\\\">variable_get</a> and <code>services/resources/system_resource.inc</code></p><hr><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Get Variable Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in system.getVariableRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"getVariableForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': getVariableForm.name.$touched && getVariableForm.name.$invalid || getVariableForm.name.$invalid && getVariableForm.$submitted}\\\"><label for=\\\"get_variable__name\\\">Name</label><input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"get_variable__name\\\" placeholder=\\\"Variable name\\\" ng-model=\\\"system.getVariableData.name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!getVariableForm.name.$touched && !getVariableForm.$submitted || getVariableForm.name.$valid\\\">The name of the variable to return</p><ng-messages class=\\\"error\\\" ng-if=\\\"getVariableForm.name.$invalid && getVariableForm.name.$touched || getVariableForm.$submitted\\\" for=\\\"getVariableForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label for=\\\"get_variable__default\\\">Default</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"get_variable__default\\\" placeholder=\\\"Variable default\\\" ng-model=\\\"system.getVariableData.default\\\"><div class=\\\"help-block\\\"><div>The default value to use if this variable has never been set</div></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"system.doGetVariable(getVariableForm)\\\">get_variable request</button></form>\");\n$templateCache.put(\"app/components/system/templates/setVariable.html\",\"<h2>Set Variable request</h2><p>Sets a persistent variable.<br>Case-sensitivity of the variable_* functions depends on the database collation used. To avoid problems, always use lower case for persistent variable names.<br>See <a target=\\\"_blank\\\" href=\\\"https://api.drupal.org/api/drupal/includes!bootstrap.inc/function/variable_set/7\\\" title=\\\"variable_set\\\">variable_set</a> and <code>services/resources/system_resource.inc</code></p><hr><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Set Variable Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in system.setVariableRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"setVariableForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': setVariableForm.name.$touched && setVariableForm.name.$invalid || setVariableForm.name.$invalid && setVariableForm.$submitted}\\\"><label for=\\\"set_variable__name\\\">Name</label><input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"set_variable__name\\\" placeholder=\\\"Variable name\\\" ng-model=\\\"system.setVariableData.name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!setVariableForm.name.$touched && !setVariableForm.$submitted || setVariableForm.name.$valid\\\">The name of the variable to return</p><ng-messages class=\\\"error\\\" ng-if=\\\"setVariableForm.name.$invalid && setVariableForm.name.$touched || setVariableForm.$submitted\\\" for=\\\"setVariableForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': setVariableForm.value.$touched && setVariableForm.value.$invalid || setVariableForm.value.$invalid && setVariableForm.$submitted}\\\"><label for=\\\"set_variable__value\\\">Value</label><input type=\\\"text\\\" name=\\\"value\\\" class=\\\"form-control\\\" id=\\\"set_variable__value\\\" placeholder=\\\"Variable value\\\" ng-model=\\\"system.setVariableData.value\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!setVariableForm.value.$touched && !setVariableForm.$submitted || setVariableForm.value.$valid\\\">The value to set. This can be any PHP data type; these functions take care of serialization as necessary</p><ng-messages class=\\\"error\\\" ng-if=\\\"setVariableForm.value.$invalid && setVariableForm.value.$touched || setVariableForm.$submitted\\\" for=\\\"setVariableForm.value.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"system.doSetVariable(setVariableForm)\\\">set_variable request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_term/templates/create.html\",\"<h2>Create request</h2><p>Create a new taxonomy_term.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/taxonomy_term_resource.inc => _taxonomy_term_resource_create()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Create Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_term.createRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.vid.$touched && createForm.vid.$invalid || createForm.vid.$invalid && createForm.$submitted}\\\"><label class=\\\"control-label\\\" for=\\\"create__parent\\\">Vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"vid\\\" id=\\\"create__vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_term.createData.vid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\">VID of the taxonomy terms vocabolary</p></div><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.vid.$invalid && createForm.vid.$touched || createForm.$submitted\\\" for=\\\"createForm.vid.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.name.$touched && createForm.name.$invalid || createForm.name.$invalid && createForm.$submitted}\\\"><label for=\\\"create__name\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"create__name\\\" placeholder=\\\"Name\\\" ng-model=\\\"taxonomy_term.createData.name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.name.$touched && !createForm.$submitted || createForm.name.$valid\\\">The terms name</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.name.$invalid && createForm.name.$touched || createForm.$submitted\\\" for=\\\"createForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.description.$touched && createForm.description.$invalid || createForm.description.$invalid && createForm.$submitted}\\\"><label for=\\\"create__description\\\">Description</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"create__description\\\" placeholder=\\\"Description\\\" ng-model=\\\"taxonomy_term.createData.description\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.description.$touched && !createForm.$submitted || createForm.description.$valid\\\">The description of the term</p></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.weight.$touched && createForm.weight.$invalid || createForm.weight.$invalid && createForm.$submitted}\\\"><label for=\\\"create__weight\\\">Weight</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"weight\\\" id=\\\"create__weight\\\" placeholder=\\\"Weight\\\" ng-model=\\\"taxonomy_term.createData.weight\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.weight.$touched && !createForm.$submitted || createForm.weight.$valid\\\">The weight/order of term</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.weight.$invalid && createForm.weight.$touched || createForm.$submitted\\\" for=\\\"createForm.weight.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.parent.$touched && createForm.parent.$invalid || createForm.parent.$invalid && createForm.$submitted}\\\"><label class=\\\"control-label\\\" for=\\\"create__parent\\\">Parent</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"parent\\\" id=\\\"create__parent\\\" placeholder=\\\"Parent\\\" ng-model=\\\"taxonomy_term.createData.parent\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\">Parent term tid.</p></div><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.parent.$invalid && createForm.parent.$touched || createForm.$submitted\\\" for=\\\"createForm.parent.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.format.$touched && createForm.format.$invalid || createForm.format.$invalid && createForm.$submitted}\\\"><label class=\\\"control-label\\\" for=\\\"create__format\\\">Format</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"format\\\" id=\\\"create__format\\\" placeholder=\\\"Format\\\" ng-model=\\\"taxonomy_term.createData.format\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\">Format of description</p></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_term.doCreate(createForm)\\\">create request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_term/templates/delete.html\",\"<h2>Delete request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Delete Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_term.deleteRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"deleteForm\\\" novalidate><div class=\\\"form-errors\\\"><div class=\\\"alert alert-danger fade in\\\" ng-repeat=\\\"serverError in taxonomy_term.deleteErrors.errors.server_errors\\\">{{serverError}}</div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': deleteForm.tid.$touched && deleteForm.tid.$invalid || deleteForm.tid.$invalid && deleteForm.$submitted}\\\"><label for=\\\"delete__tid\\\">Tid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"delete__tid\\\" name=\\\"tid\\\" placeholder=\\\"Tid\\\" ng-model=\\\"taxonomy_term.deleteData.tid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!deleteForm.tid.$touched && !deleteForm.$submitted || deleteForm.tid.$valid\\\">TID of the terms to delete</p><ng-messages class=\\\"error\\\" ng-if=\\\"deleteForm.tid.$invalid && deleteForm.tid.$touched || deleteForm.$submitted\\\" for=\\\"deleteForm.tid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_term.doDelete(deleteForm)\\\">delete request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_term/templates/index.html\",\"<h2>Index request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Index Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_term.indexRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"indexForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.page.$touched && indexForm.page.$invalid || indexForm.page.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__page\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__page\\\" name=\\\"page\\\" placeholder=\\\"Page\\\" ng-model=\\\"taxonomy_term.indexData.page\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.page.$touched && !indexForm.$submitted || indexForm.page.$valid\\\">Number of items to display on one page</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.page.$invalid && indexForm.page.$touched || indexForm.$submitted\\\" for=\\\"indexForm.page.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.pagesize.$touched && indexForm.pagesize.$invalid || indexForm.pagesize.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__pagesize\\\">Pagesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pagesize\\\" name=\\\"pagesize\\\" placeholder=\\\"Pagesize\\\" ng-model=\\\"taxonomy_term.indexData.pagesize\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.pagesize.$touched && !indexForm.$submitted || indexForm.pagesize.$valid\\\">Number of items to display on one page. (Anonymous taxonomy_term are limited to 25)</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.pagesize.$invalid && indexForm.pagesize.$touched || indexForm.$submitted\\\" for=\\\"indexForm.pagesize.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"taxonomy_term.indexFieldsColapsed = !taxonomy_term.indexFieldsColapsed\\\">Fields <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[taxonomy_term.indexFieldsColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Define the fields to fetched.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!taxonomy_term.indexFieldsColapsed && \\'in\\'\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.tid\\\"> fields.tid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.vid\\\"> fields.vid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.name\\\"> fields.name</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.description\\\"> fields.description</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.weight\\\"> fields.weight</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.parent\\\"> fields.parent</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_term.indexData.fields.format\\\"> fields.format</label></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"taxonomy_term.indexParametersColapsed = !taxonomy_term.indexParametersColapsed\\\">Parameters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[taxonomy_term.indexParametersColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Filter by field value.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!taxonomy_term.indexParametersColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><label for=\\\"index__parameters_tid\\\">Parameter tid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_tid\\\" placeholder=\\\"Tid\\\" ng-model=\\\"taxonomy_term.indexData.parameters.tid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_vid\\\">Parameter vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_term.indexData.parameters.vid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_name\\\">Parameter name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_name\\\" placeholder=\\\"TaxonomyTermname\\\" ng-model=\\\"taxonomy_term.indexData.parameters.name\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_description\\\">Parameter description</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_description\\\" placeholder=\\\"Description\\\" ng-model=\\\"taxonomy_term.indexData.parameters.description\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_weight\\\">Parameter weight</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_weight\\\" placeholder=\\\"Weight\\\" ng-model=\\\"taxonomy_term.indexData.parameters.weight\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_signature\\\">Parameter parent</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_parent\\\" placeholder=\\\"Parent\\\" ng-model=\\\"taxonomy_term.indexData.parameters.parent\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_format\\\">Parameter format</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_format\\\" placeholder=\\\"Signature Format\\\" ng-model=\\\"taxonomy_term.indexData.parameters.format\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_created\\\">Parameter created</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_created\\\" placeholder=\\\"Created\\\" ng-model=\\\"taxonomy_term.indexData.parameters.created\\\"></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_term.doIndex(indexForm)\\\">index request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_term/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Get taxonomy_term details.<br>see <code>services/resources/taxonomy_term_resource.inc => _taxonomy_term_resource_retrieve()</code></p><blockquote class=\\\"bg-warning\\\"><h4>It\\'s possible to get following error here if you require a term that not exist:</h4><small><b>Fatal error</b>: __clone method called on non-object in <b>/paths/to/your/system/sites/all/modules/services/services.module</b> on line <b>1022</b><br></small><br>@TODO find patch</blockquote><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_term.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.tid.$touched && retrieveForm.tid.$invalid || retrieveForm.tid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__tid\\\">Tid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__tid\\\" name=\\\"tid\\\" placeholder=\\\"Tid\\\" ng-model=\\\"taxonomy_term.retrieveData.tid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.tid.$touched && !retrieveForm.$submitted || retrieveForm.tid.$valid\\\">TID of the taxonomy_term to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.tid.$invalid && retrieveForm.tid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.tid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_term.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_term/templates/selectNodes.html\",\"<h2>SelectNodes request</h2><p>Get taxonomy_term selectNodes.<br>see <code>services/resources/taxonomy_term_resource.inc => _taxonomy_term_resource_selectNodes()</code></p><blockquote class=\\\"bg-warning\\\"><h4>It\\'s possible to get following error here if you require a term that not exist:</h4><small><b>Fatal error</b>: __clone method called on non-object in <b>/paths/to/your/system/sites/all/modules/services/services.module</b> on line <b>1022</b><br></small><br>@TODO find patch</blockquote><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"SelectNodes Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_term.selectNodesRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"selectNodesForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': selectNodesForm.tid.$touched && selectNodesForm.tid.$invalid || selectNodesForm.tid.$invalid && selectNodesForm.$submitted }\\\"><label for=\\\"retrieve__tid\\\">Tid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__tid\\\" name=\\\"tid\\\" placeholder=\\\"Tid\\\" ng-model=\\\"taxonomy_term.selectNodesData.tid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!selectNodesForm.tid.$touched && !selectNodesForm.$submitted || selectNodesForm.tid.$valid\\\">The vocabulary ids to retrieve, separated by comma.</p><ng-messages class=\\\"error\\\" ng-if=\\\"selectNodesForm.tid.$invalid && selectNodesForm.tid.$touched || selectNodesForm.$submitted\\\" for=\\\"selectNodesForm.tid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': selectNodesForm.pager.$touched && selectNodesForm.pager.$invalid || selectNodesForm.pager.$invalid && selectNodesForm.$submitted}\\\"><label for=\\\"index__pager\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pager\\\" name=\\\"pager\\\" placeholder=\\\"Pager\\\" ng-model=\\\"taxonomy_term.selectNodesData.pager\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!selectNodesForm.pager.$touched && !selectNodesForm.$submitted || selectNodesForm.pager.$valid\\\">Whether the nodes are to be used with a pager (the case on most Drupal pagers) or not (in an XML feed, for example).</p><ng-messages class=\\\"error\\\" ng-if=\\\"selectNodesForm.pager.$invalid && selectNodesForm.pager.$touched || selectNodesForm.$submitted\\\" for=\\\"selectNodesForm.pager.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': selectNodesForm.limit.$touched && selectNodesForm.limit.$invalid || selectNodesForm.limit.$invalid && selectNodesForm.$submitted}\\\"><label for=\\\"index__limit\\\">Limit</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__limit\\\" name=\\\"limit\\\" placeholder=\\\"Limit\\\" ng-model=\\\"taxonomy_term.selectNodesData.limit\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!selectNodesForm.limit.$touched && !selectNodesForm.$submitted || selectNodesForm.limit.$valid\\\">Maximum number of nodes to find.</p><ng-messages class=\\\"error\\\" ng-if=\\\"selectNodesForm.limit.$invalid && selectNodesForm.limit.$touched || selectNodesForm.$submitted\\\" for=\\\"selectNodesForm.limit.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': selectNodesForm.order.$touched && selectNodesForm.order.$invalid || selectNodesForm.order.$invalid && selectNodesForm.$submitted}\\\"><label for=\\\"index__order\\\">Limit</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__order\\\" name=\\\"order\\\" placeholder=\\\"Order\\\" ng-model=\\\"taxonomy_term.selectNodesData.order\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!selectNodesForm.order.$touched && !selectNodesForm.$submitted || selectNodesForm.order.$valid\\\">The order clause for the query that retrieve the nodes.</p><ng-messages class=\\\"error\\\" ng-if=\\\"selectNodesForm.order.$invalid && selectNodesForm.order.$touched || selectNodesForm.$submitted\\\" for=\\\"selectNodesForm.order.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_term.doSelectNodes(selectNodesForm)\\\">selectNodes request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_term/templates/update.html\",\"<h2>Update request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Update Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_term.updateRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"updateForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.tid.$touched && updateForm.tid.$invalid || updateForm.tid.$invalid && updateForm.$submitted }\\\"><label for=\\\"retrieve__tid\\\">Tid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__tid\\\" name=\\\"tid\\\" placeholder=\\\"Tid\\\" ng-model=\\\"taxonomy_term.updateData.tid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.tid.$touched && !updateForm.$submitted || updateForm.tid.$valid\\\">TID of the taxonomy_term to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.tid.$invalid && updateForm.tid.$touched || updateForm.$submitted\\\" for=\\\"updateForm.tid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.vid.$touched && updateForm.vid.$invalid || updateForm.vid.$invalid && updateForm.$submitted }\\\"><label for=\\\"retrieve__vid\\\">Vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__vid\\\" name=\\\"vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_term.updateData.vid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.vid.$touched && !updateForm.$submitted || updateForm.vid.$valid\\\">VID of the taxonomy terms vocabolary</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.vid.$invalid && updateForm.vid.$touched || updateForm.$submitted\\\" for=\\\"updateForm.vid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.name.$touched && updateForm.name.$invalid || updateForm.name.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__name\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"create__name\\\" placeholder=\\\"Name\\\" ng-model=\\\"taxonomy_term.updateData.name\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.name.$touched && !updateForm.$submitted || updateForm.name.$valid\\\">The terms name</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.name.$invalid && updateForm.name.$touched || updateForm.$submitted\\\" for=\\\"updateForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.description.$touched && updateForm.description.$invalid || updateForm.description.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__description\\\">Description</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"create__description\\\" placeholder=\\\"Description\\\" ng-model=\\\"taxonomy_term.updateData.description\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.description.$touched && !updateForm.$submitted || updateForm.description.$valid\\\">The description of the term</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.description.$invalid && updateForm.description.$touched || updateForm.$submitted\\\" for=\\\"updateForm.description.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.weight.$touched && updateForm.weight.$invalid || updateForm.weight.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__weight\\\">Weight</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"weight\\\" id=\\\"create__weight\\\" placeholder=\\\"Weight\\\" ng-model=\\\"taxonomy_term.updateData.weight\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.weight.$touched && !updateForm.$submitted || updateForm.weight.$valid\\\">The weight/order of term</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.weight.$invalid && updateForm.weight.$touched || updateForm.$submitted\\\" for=\\\"updateForm.weight.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.parent.$touched && updateForm.parent.$invalid || updateForm.parent.$invalid && updateForm.$submitted}\\\"><label class=\\\"control-label\\\" for=\\\"create__parent\\\">Parent</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"parent\\\" id=\\\"create__parent\\\" placeholder=\\\"Parent\\\" ng-model=\\\"taxonomy_term.updateData.parent\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\">Parent term tid.</p></div><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.parent.$invalid && updateForm.parent.$touched || updateForm.$submitted\\\" for=\\\"updateForm.parent.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.format.$touched && updateForm.format.$invalid || updateForm.format.$invalid && updateForm.$submitted}\\\"><label class=\\\"control-label\\\" for=\\\"create__format\\\">Format</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"format\\\" id=\\\"create__format\\\" placeholder=\\\"Format\\\" ng-model=\\\"taxonomy_term.updateData.format\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\">Format of description</p></div><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.format.$invalid && updateForm.format.$touched || updateForm.$submitted\\\" for=\\\"updateForm.format.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_term.doUpdate(updateForm)\\\">update request</button></form>\");\n$templateCache.put(\"app/components/user/templates/RequestNewPassword.html\",\"<h2>Request new password request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Request new password Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.requestNewPasswordRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"requestNewPasswordForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': requestNewPasswordForm.uid.$touched && requestNewPasswordForm.uid.$invalid || requestNewPasswordForm.uid.$invalid && requestNewPasswordForm.$submitted}\\\"><label for=\\\"passwordReset__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"passwordReset__uid\\\" name=\\\"uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.passwordResetData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!requestNewPasswordForm.uid.$touched && !requestNewPasswordForm.$submitted || requestNewPasswordForm.uid.$valid\\\">UID of the user to reset password</p><ng-messages class=\\\"error\\\" ng-if=\\\"requestNewPasswordForm.uid.$invalid && requestNewPasswordForm.uid.$touched || requestNewPasswordForm.$submitted\\\" for=\\\"requestNewPasswordForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doRequestNewPassword(requestNewPasswordForm)\\\">request new password request</button></form>\");\n$templateCache.put(\"app/components/user/templates/cancel.html\",\"<h2>Cancel request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Cancel Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.cancelRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"cancelForm\\\"><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': cancelForm.uid.$touched && cancelForm.uid.$invalid || cancelForm.uid.$invalid && cancelForm.$submitted }\\\"><label for=\\\"cancel__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"cancel__uid\\\" placeholder=\\\"Uid\\\" name=\\\"uid\\\" ng-model=\\\"user.cancelData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!cancelForm.uid.$touched && !cancelForm.$submitted || cancelForm.uid.$valid\\\">UID of the user to be canceled</p><ng-messages class=\\\"error\\\" ng-if=\\\"cancelForm.uid.$invalid && cancelForm.uid.$touched || cancelForm.$submitted\\\" for=\\\"cancelForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doCancel(cancelForm)\\\">resend welcome email request</button></form>\");\n$templateCache.put(\"app/components/user/templates/create.html\",\"<h2>Create request</h2><p>Create a new user.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/user_resource.inc => _user_resource_create()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Create Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.createRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.name.$touched && createForm.name.$invalid || createForm.name.$invalid && createForm.$submitted}\\\"><label for=\\\"create__name\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"create__name\\\" placeholder=\\\"Name\\\" ng-model=\\\"user.createData.name\\\" ng-maxlength=\\\"60\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.name.$touched && !createForm.$submitted || createForm.name.$valid\\\">The user name</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.name.$invalid && createForm.name.$touched || createForm.$submitted\\\" for=\\\"createForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><div ng-message=\\\"maxlength\\\">Your username must be less than 61 characters long</div></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.email.$touched && createForm.email.$invalid || createForm.email.$invalid && createForm.$submitted}\\\"><label for=\\\"create__email\\\">Email</label><input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"create__email\\\" placeholder=\\\"Email\\\" ng-model=\\\"user.createData.mail\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.email.$touched && !createForm.$submitted || createForm.email.$valid\\\">The email address</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.email.$invalid && createForm.email.$touched || createForm.$submitted\\\" for=\\\"createForm.email.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-email\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label for=\\\"create__password\\\">Password</label><input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"create__password\\\" placeholder=\\\"Password\\\" ng-model=\\\"user.createData.pass\\\" required><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.password.$touched && !createForm.$submitted || createForm.password.$valid\\\">The plain text unencrypted password</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.password.$invalid && createForm.password.$touched || createForm.$submitted\\\" for=\\\"createForm.password.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label\\\" for=\\\"create__status\\\">Status</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"create__status\\\" id=\\\"blocked\\\" ng-model=\\\"user.createData.status\\\" value=\\\"0\\\"> blocked</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"create__status\\\" id=\\\"active\\\" ng-model=\\\"user.createData.status\\\" value=\\\"1\\\"> active</label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Value 0 for blocked, otherwise will be active by default</p></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label\\\" for=\\\"create__notify\\\">Notify</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"create__notify\\\" id=\\\"notification\\\" ng-model=\\\"user.createData.notify\\\" value=\\\"0\\\"> no user notification</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"create__notify\\\" id=\\\"no_notification\\\" ng-model=\\\"user.createData.notify\\\" value=\\\"1\\\"> user notification</label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Value 1 to notify user of new account, will not notify by default</p></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"user.createRolesColapsed = !user.createRolesColapsed\\\">Roles (optional) <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[user.createRolesColapsed]\\\"></span></label></div><div class=\\\"well collapse\\\" ng-class=\\\"!user.createRolesColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><div class=\\\"checkbox disabled\\\"><label><input type=\\\"checkbox\\\" name=\\\"create__role__anonymous_user\\\" disabled=\\\"disabled\\\"> anonymous user (not available)</label></div><div class=\\\"checkbox disabled\\\"><label><input type=\\\"checkbox\\\" name=\\\"create__role__authenticated_user\\\" disabled=\\\"disabled\\\"> authenticated user (not available)</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" name=\\\"create__role__administrator\\\" ng-model=\\\"user.createData.roles.administrator\\\" ng-true-value=\\\"\\'3\\'\\\"> administrator</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" name=\\\"create__role__editor\\\" ng-model=\\\"user.createData.roles.editor\\\" ng-true-value=\\\"\\'4\\'\\\"> editor (custom created role)</label></div></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.field_nickname.$touched && createForm.field_nickname.$invalid || createForm.field_nickname.$invalid && createForm.$submitted}\\\"><label for=\\\"create__field_nickname\\\">Nickname</label><input type=\\\"field_nickname\\\" class=\\\"form-control\\\" name=\\\"field_nickname\\\" id=\\\"create__field_nickname\\\" placeholder=\\\"Nickname\\\" ng-model=\\\"user.createData.field_nickname\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.field_nickname.$touched && !createForm.$submitted || createForm.field_nickname.$valid\\\">The user\\'s nickname. ( Custom field. Needs to be <a target=\\\"_blank\\\" href=\\\"https://www.drupal.org/node/1354202\\\">formated properly</a>. )</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.field_nickname.$invalid && createForm.field_nickname.$touched || createForm.$submitted\\\" for=\\\"createForm.field_nickname.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doCreate(createForm)\\\">create request</button></form>\");\n$templateCache.put(\"app/components/user/templates/delete.html\",\"<h2>Delete request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Delete Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.deleteRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"deleteForm\\\" novalidate><div class=\\\"form-errors\\\"><div class=\\\"alert alert-danger fade in\\\" ng-repeat=\\\"serverError in user.deleteErrors.errors.server_errors\\\">{{serverError}}</div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': deleteForm.uid.$touched && deleteForm.uid.$invalid || deleteForm.uid.$invalid && deleteForm.$submitted}\\\"><label for=\\\"delete__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"delete__uid\\\" name=\\\"uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.deleteData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!deleteForm.uid.$touched && !deleteForm.$submitted || deleteForm.uid.$valid\\\">UID of the user to be deleted</p><ng-messages class=\\\"error\\\" ng-if=\\\"deleteForm.uid.$invalid && deleteForm.uid.$touched || deleteForm.$submitted\\\" for=\\\"deleteForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doDelete(deleteForm)\\\">delete request</button></form>\");\n$templateCache.put(\"app/components/user/templates/index.html\",\"<h2>Index request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Index Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.indexRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"indexForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.page.$touched && indexForm.page.$invalid || indexForm.page.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__page\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__page\\\" name=\\\"page\\\" placeholder=\\\"Page\\\" ng-model=\\\"user.indexData.page\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.page.$touched && !indexForm.$submitted || indexForm.page.$valid\\\">Number of items to display on one page</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.page.$invalid && indexForm.page.$touched || indexForm.$submitted\\\" for=\\\"indexForm.page.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.pagesize.$touched && indexForm.pagesize.$invalid || indexForm.pagesize.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__pagesize\\\">Pagesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pagesize\\\" name=\\\"pagesize\\\" placeholder=\\\"Pagesize\\\" ng-model=\\\"user.indexData.pagesize\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.pagesize.$touched && !indexForm.$submitted || indexForm.pagesize.$valid\\\">Number of items to display on one page. (Anonymous user are limited to 25)</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.pagesize.$invalid && indexForm.pagesize.$touched || indexForm.$submitted\\\" for=\\\"indexForm.pagesize.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"user.indexFieldsColapsed = !user.indexFieldsColapsed\\\">Fields <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[user.indexFieldsColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Define the fields to fetched.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!user.indexFieldsColapsed && \\'in\\'\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.uid\\\"> fields.uid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.name\\\"> fields.name</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.mail\\\"> fields.mail</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.theme\\\"> fields.theme</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.signature\\\"> fields.signature</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.signature_format\\\"> fields.signature_format</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.created\\\"> fields.created</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.access\\\"> fields.access</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.login\\\"> fields.login</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.status\\\"> fields.status</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.timezone\\\"> fields.timezone</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.language\\\"> fields.language</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.picture\\\"> fields.picture</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.init\\\"> fields.init</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"user.indexData.fields.data\\\"> fields.data</label></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"user.indexParametersColapsed = !user.indexParametersColapsed\\\">Parameters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[user.indexParametersColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Filter by field value.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!user.indexParametersColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><label for=\\\"index__parameters_uid\\\">Parameter uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.indexData.parameters.uid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_name\\\">Parameter name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_name\\\" placeholder=\\\"Username\\\" ng-model=\\\"user.indexData.parameters.name\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_mail\\\">Parameter mail</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_mail\\\" placeholder=\\\"EMail\\\" ng-model=\\\"user.indexData.parameters.mail\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_theme\\\">Parameter theme</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_theme\\\" placeholder=\\\"Theme\\\" ng-model=\\\"user.indexData.parameters.theme\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_signature\\\">Parameter signature</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_signature\\\" placeholder=\\\"Signature\\\" ng-model=\\\"user.indexData.parameters.signature\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_signature_format\\\">Parameter signature_format</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_signature_format\\\" placeholder=\\\"Signature Format\\\" ng-model=\\\"user.indexData.parameters.signature_format\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_created\\\">Parameter created</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_created\\\" placeholder=\\\"Created\\\" ng-model=\\\"user.indexData.parameters.created\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_access\\\">Parameter access</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_access\\\" placeholder=\\\"Access\\\" ng-model=\\\"user.indexData.parameters.access\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_login\\\">Parameter login</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_login\\\" placeholder=\\\"Login\\\" ng-model=\\\"user.indexData.parameters.login\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_status\\\">Parameter status</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_status\\\" placeholder=\\\"Status\\\" ng-model=\\\"user.indexData.parameters.status\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_timezone\\\">Parameter timezone</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_timezone\\\" placeholder=\\\"Timezone\\\" ng-model=\\\"user.indexData.parameters.timezone\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_language\\\">Parameter language</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_language\\\" placeholder=\\\"Language\\\" ng-model=\\\"user.indexData.parameters.language\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_picture\\\">Parameter picture</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_picture\\\" placeholder=\\\"Picture\\\" ng-model=\\\"user.indexData.parameters.picture\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_init\\\">Parameter init</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_init\\\" placeholder=\\\"Init\\\" ng-model=\\\"user.indexData.parameters.init\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_data\\\">Parameter data</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_data\\\" placeholder=\\\"Data\\\" ng-model=\\\"user.indexData.parameters.data\\\"></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doIndex(indexForm)\\\">index request</button></form>\");\n$templateCache.put(\"app/components/user/templates/login.html\",\"<h2>Login request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Login Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.loginRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"loginForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': loginForm.username.$touched && loginForm.username.$invalid || loginForm.username.$invalid && loginForm.$submitted}\\\"><label for=\\\"login__username\\\">Username</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"login__username\\\" placeholder=\\\"Name\\\" ng-model=\\\"user.loginData.username\\\" ng-maxlength=\\\"60\\\" maxlength=\\\"61\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p ng-if=\\\"!loginForm.username.$touched && !loginForm.$submitted || loginForm.username.$valid\\\">The user name</p><ng-messages ng-if=\\\"loginForm.username.$invalid && loginForm.username.$touched || loginForm.$submitted\\\" for=\\\"loginForm.username.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><div ng-message=\\\"maxlength\\\">Your username must be less than 61 characters long</div></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': loginForm.password.$touched && loginForm.password.$invalid || loginForm.password.$invalid && loginForm.$submitted}\\\"><label for=\\\"login__password\\\">Password</label><input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"login__password\\\" placeholder=\\\"Password\\\" ng-model=\\\"user.loginData.password\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!loginForm.password.$touched && !loginForm.$submitted || loginForm.password.$valid\\\">The plain text unencrypted password</p><ng-messages class=\\\"error\\\" ng-if=\\\"loginForm.password.$invalid && loginForm.password.$touched || loginForm.$submitted\\\" for=\\\"loginForm.password.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doLogin(loginForm)\\\">login request</button></form>\");\n$templateCache.put(\"app/components/user/templates/logout.html\",\"<h2>Logout request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Logout Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.logoutRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"logoutForm\\\" novalidate><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doLogout(logoutForm)\\\">logout request</button></form>\");\n$templateCache.put(\"app/components/user/templates/passwordReset.html\",\"<h2>PasswordReset request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"PasswordReset Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.passwordResetRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"passwordResetForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': passwordResetForm.uid.$touched && passwordResetForm.uid.$invalid || passwordResetForm.uid.$invalid && passwordResetForm.$submitted}\\\"><label for=\\\"passwordReset__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"passwordReset__uid\\\" name=\\\"uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.passwordResetData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!passwordResetForm.uid.$touched && !passwordResetForm.$submitted || passwordResetForm.uid.$valid\\\">UID of the user to reset password</p><ng-messages class=\\\"error\\\" ng-if=\\\"passwordResetForm.uid.$invalid && passwordResetForm.uid.$touched || passwordResetForm.$submitted\\\" for=\\\"passwordResetForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doPasswordReset(passwordResetForm)\\\">resend welcome email request</button></form>\");\n$templateCache.put(\"app/components/user/templates/register.html\",\"<h2>Register request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Register Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.registerRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"registerForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': registerForm.username.$touched && registerForm.username.$invalid || registerForm.username.$invalid && registerForm.$submitted}\\\"><label for=\\\"register__name\\\">Username</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"register__username\\\" placeholder=\\\"Username\\\" ng-model=\\\"user.registerData.username\\\" ng-maxlength=\\\"60\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!registerForm.username.$touched && !registerForm.$submitted || registerForm.username.$valid\\\">The user name</p><ng-messages class=\\\"error\\\" ng-if=\\\"registerForm.username.$invalid && registerForm.username.$touched || registerForm.$submitted\\\" for=\\\"registerForm.username.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><div ng-message=\\\"maxlength\\\">Your username must be less than 61 characters long</div></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': registerForm.email.$touched && registerForm.email.$invalid || registerForm.email.$invalid && registerForm.$submitted}\\\"><label for=\\\"register__email\\\">Email</label><input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"register__email\\\" placeholder=\\\"Email\\\" ng-model=\\\"user.registerData.mail\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!registerForm.email.$touched && !registerForm.$submitted || registerForm.email.$valid\\\">The email address</p><ng-messages class=\\\"error\\\" ng-if=\\\"registerForm.email.$invalid && registerForm.email.$touched || registerForm.$submitted\\\" for=\\\"registerForm.email.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-email\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': registerForm.pass.$touched && registerForm.pass.$invalid || registerForm.pass.$invalid && registerForm.$submitted}\\\"><label for=\\\"register__pass\\\">Password</label><input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pass\\\" id=\\\"register__pass\\\" placeholder=\\\"Password\\\" ng-model=\\\"user.registerData.pass\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!registerForm.pass.$touched && !registerForm.$submitted || registerForm.pass.$valid\\\">The plain text unencrypted password</p><ng-messages class=\\\"error\\\" ng-if=\\\"registerForm.pass.$invalid && registerForm.pass.$touched || registerForm.$submitted\\\" for=\\\"registerForm.pass.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doRegister(registerForm)\\\">register request</button></form>\");\n$templateCache.put(\"app/components/user/templates/resendWelcomeEmail.html\",\"<h2>Resend Welcome Email request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Resend Welcome Email Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.resendWelcomeEmailRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"resendWelcomeEmailForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': resendWelcomeEmailForm.uid.$touched && resendWelcomeEmailForm.uid.$invalid || resendWelcomeEmailForm.uid.$invalid && resendWelcomeEmailForm.$submitted}\\\"><label for=\\\"resendWelcomeEmail__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"resendWelcomeEmail__uid\\\" name=\\\"uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.resendWelcomeEmailData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!resendWelcomeEmailForm.uid.$touched && !resendWelcomeEmailForm.$submitted || resendWelcomeEmailForm.uid.$valid\\\">UID of the user to resend the welcome email</p><ng-messages class=\\\"error\\\" ng-if=\\\"resendWelcomeEmailForm.uid.$invalid && resendWelcomeEmailForm.uid.$touched || resendWelcomeEmailForm.$submitted\\\" for=\\\"resendWelcomeEmailForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doResendWelcomeEmail(resendWelcomeEmailForm)\\\">resend welcome email request</button></form>\");\n$templateCache.put(\"app/components/user/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Get user details.<br>see <code>services/resources/user_resource.inc => _user_resource_retrieve()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.uid.$touched && retrieveForm.uid.$invalid || retrieveForm.uid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__uid\\\" name=\\\"uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.retrieveData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.uid.$touched && !retrieveForm.$submitted || retrieveForm.uid.$valid\\\">UID of the user to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.uid.$invalid && retrieveForm.uid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");\n$templateCache.put(\"app/components/user/templates/token.html\",\"<h2>Token request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Token Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.tokenRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"tokenForm\\\" novalidate><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doToken(tokenForm)\\\">token request</button></form>\");\n$templateCache.put(\"app/components/user/templates/update.html\",\"<h2>Update request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Update Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in user.updateRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"updateForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.uid.$touched && updateForm.uid.$invalid || updateForm.uid.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__uid\\\">Uid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"update__uid\\\" name=\\\"uid\\\" placeholder=\\\"Uid\\\" ng-model=\\\"user.updateData.uid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.uid.$touched && !updateForm.$submitted || updateForm.uid.$valid\\\">UID of the user to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.uid.$invalid && updateForm.uid.$touched || updateForm.$submitted\\\" for=\\\"updateForm.uid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.name.$touched && updateForm.name.$invalid || updateForm.name.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__name\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"update__name\\\" placeholder=\\\"Name\\\" ng-model=\\\"user.updateData.name\\\" ng-maxlength=\\\"60\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.name.$touched && !updateForm.$submitted || updateForm.name.$valid\\\">The user name</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.name.$invalid && updateForm.name.$touched || updateForm.$submitted\\\" for=\\\"updateForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><div ng-message=\\\"maxlength\\\">Your username must be less than 61 characters long</div></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.email.$touched && updateForm.email.$invalid || updateForm.email.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__email\\\">Email</label><input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"update__email\\\" placeholder=\\\"Email\\\" ng-model=\\\"user.updateData.mail\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.email.$touched && !updateForm.$submitted || updateForm.email.$valid\\\">The email address</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.email.$invalid && updateForm.email.$touched || updateForm.$submitted\\\" for=\\\"updateForm.email.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-email\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label\\\" for=\\\"update__status\\\">Status</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"update__status\\\" id=\\\"blocked\\\" ng-model=\\\"user.updateData.status\\\" value=\\\"0\\\"> blocked</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"update__status\\\" id=\\\"active\\\" ng-model=\\\"user.updateData.status\\\" value=\\\"1\\\"> active</label><div class=\\\"help-block\\\"><div>Value 0 for blocked, otherwise will be active by default</div></div></div><div class=\\\"form-group\\\"><label class=\\\"control-label\\\" for=\\\"update__notify\\\">Notify</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"update__notify\\\" id=\\\"notification\\\" ng-model=\\\"user.updateData.notify\\\" value=\\\"0\\\"> no user notification</label><label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"update__notify\\\" id=\\\"no_notification\\\" ng-model=\\\"user.updateData.notify\\\" value=\\\"1\\\"> user notification</label><div class=\\\"help-block\\\"><div>Value 1 to notify user of new account, will not notify by default</div></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"user.updateRolesColapsed = !user.updateRolesColapsed\\\">Roles (optional) <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[user.updateRolesColapsed]\\\"></span></label></div><div class=\\\"well collapse\\\" ng-class=\\\"!user.updateRolesColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><div class=\\\"checkbox disabled\\\"><label><input type=\\\"checkbox\\\" name=\\\"update__role__anonymous_user\\\" disabled=\\\"disabled\\\"> anonymous user (not available)</label></div><div class=\\\"checkbox disabled\\\"><label><input type=\\\"checkbox\\\" name=\\\"update__role__authenticated_user\\\" disabled=\\\"disabled\\\"> authenticated user (not available)</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" name=\\\"update__role__administrator\\\" ng-model=\\\"user.updateData.roles.administrator\\\" ng-true-value=\\\"\\'3\\'\\\"> administrator</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" name=\\\"update__role__editor\\\" ng-model=\\\"user.updateData.roles.editor\\\" ng-true-value=\\\"\\'4\\'\\\"> editor (custom updated role)</label></div></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.field_nickname.$touched && updateForm.field_nickname.$invalid || updateForm.field_nickname.$invalid && updateForm.$submitted}\\\"><label for=\\\"update__field_nickname\\\">Nickname</label><input type=\\\"field_nickname\\\" class=\\\"form-control\\\" name=\\\"field_nickname\\\" id=\\\"update__field_nickname\\\" placeholder=\\\"Nickname\\\" ng-model=\\\"user.updateData.field_nickname\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.field_nickname.$touched && !updateForm.$submitted || updateForm.field_nickname.$valid\\\">The user\\'s nickname. ( Custom created field. Needs to be <a target=\\\"_blank\\\" href=\\\"https://www.drupal.org/node/1354202\\\">formated properly</a>. )</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.field_nickname.$invalid && updateForm.field_nickname.$touched || updateForm.$submitted\\\" for=\\\"updateForm.field_nickname.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"user.doUpdate(updateForm)\\\">update request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/templates/create.html\",\"<h2>Create request</h2><p>Create a new taxonomy_vocabulary.<br>This function uses drupal_form_submit() and as such expects all input to match the submitting form in question.see <code>services/resources/taxonomy_vocabulary_resource.inc => _taxonomy_vocabulary_resource_create()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Create Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_vocabulary.createRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"createForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.name.$touched && createForm.name.$invalid || createForm.name.$invalid && createForm.$submitted}\\\"><label for=\\\"create__name\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"create__name\\\" placeholder=\\\"Name\\\" ng-model=\\\"taxonomy_vocabulary.createData.name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.name.$touched && !createForm.$submitted || createForm.name.$valid\\\">The terms name</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.name.$invalid && createForm.name.$touched || createForm.$submitted\\\" for=\\\"createForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.machine_name.$touched && createForm.machine_name.$invalid || createForm.machine_name.$invalid && createForm.$submitted}\\\"><label for=\\\"create__machine_name\\\">Machine Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"machine_name\\\" id=\\\"create__machine_name\\\" placeholder=\\\"Machine Name\\\" ng-model=\\\"taxonomy_vocabulary.createData.machine_name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.machine_name.$touched && !createForm.$submitted || createForm.machine_name.$valid\\\">The terms machine_name</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.machine_name.$invalid && createForm.machine_name.$touched || createForm.$submitted\\\" for=\\\"createForm.machine_name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.description.$touched && createForm.description.$invalid || createForm.description.$invalid && createForm.$submitted}\\\"><label for=\\\"create__description\\\">Description</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"create__description\\\" placeholder=\\\"Description\\\" ng-model=\\\"taxonomy_vocabulary.createData.description\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.description.$touched && !createForm.$submitted || createForm.description.$valid\\\">The description of the term</p></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.hierarchy.$touched && createForm.hierarchy.$invalid || createForm.hierarchy.$invalid && createForm.$submitted}\\\"><label for=\\\"create__hierarchy\\\">Hierarchy</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"hierarchy\\\" id=\\\"create__hierarchy\\\" placeholder=\\\"Hierarchy\\\" ng-model=\\\"taxonomy_vocabulary.createData.hierarchy\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.hierarchy.$touched && !createForm.$submitted || createForm.hierarchy.$valid\\\">The hierarchy of term</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.hierarchy.$invalid && createForm.hierarchy.$touched || createForm.$submitted\\\" for=\\\"createForm.hierarchy.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': createForm.weight.$touched && createForm.weight.$invalid || createForm.weight.$invalid && createForm.$submitted}\\\"><label for=\\\"create__weight\\\">Weight</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"weight\\\" id=\\\"create__weight\\\" placeholder=\\\"Weight\\\" ng-model=\\\"taxonomy_vocabulary.createData.weight\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!createForm.weight.$touched && !createForm.$submitted || createForm.weight.$valid\\\">The weight/order of term</p><ng-messages class=\\\"error\\\" ng-if=\\\"createForm.weight.$invalid && createForm.weight.$touched || createForm.$submitted\\\" for=\\\"createForm.weight.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_vocabulary.doCreate(createForm)\\\">create request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/templates/delete.html\",\"<h2>Delete request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Delete Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_vocabulary.deleteRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"deleteForm\\\" novalidate><div class=\\\"form-errors\\\"><div class=\\\"alert alert-danger fade in\\\" ng-repeat=\\\"serverError in taxonomy_vocabulary.deleteErrors.errors.server_errors\\\">{{serverError}}</div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': deleteForm.tid.$touched && deleteForm.tid.$invalid || deleteForm.tid.$invalid && deleteForm.$submitted}\\\"><label for=\\\"delete__tid\\\">Tid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"delete__tid\\\" name=\\\"tid\\\" placeholder=\\\"Tid\\\" ng-model=\\\"taxonomy_vocabulary.deleteData.tid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!deleteForm.tid.$touched && !deleteForm.$submitted || deleteForm.tid.$valid\\\">TID of the terms to delete</p><ng-messages class=\\\"error\\\" ng-if=\\\"deleteForm.tid.$invalid && deleteForm.tid.$touched || deleteForm.$submitted\\\" for=\\\"deleteForm.tid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_vocabulary.doDelete(deleteForm)\\\">delete request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/templates/getTree.html\",\"<h2>GetTree request</h2><p>Get taxonomy_vocabulary getTree.<br>see <code>services/resources/taxonomy_vocabulary_resource.inc => _taxonomy_vocabulary_resource_getTree()</code></p><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"SelectNodes Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_vocabulary.getTreeRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"getTreeForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': getTreeForm.vid.$touched && getTreeForm.vid.$invalid || getTreeForm.vid.$invalid && getTreeForm.$submitted }\\\"><label for=\\\"retrieve__vid\\\">Vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__vid\\\" name=\\\"vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_vocabulary.getTreeData.vid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!getTreeForm.vid.$touched && !getTreeForm.$submitted || getTreeForm.vid.$valid\\\">The vocabulary ids to retrieve, separated by comma.</p><ng-messages class=\\\"error\\\" ng-if=\\\"getTreeForm.vid.$invalid && getTreeForm.vid.$touched || getTreeForm.$submitted\\\" for=\\\"getTreeForm.vid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': getTreeForm.parent.$touched && getTreeForm.parent.$invalid || getTreeForm.parent.$invalid && getTreeForm.$submitted}\\\"><label for=\\\"index__parent\\\">Parent</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parent\\\" name=\\\"parent\\\" placeholder=\\\"Parent\\\" ng-model=\\\"taxonomy_vocabulary.getTreeData.parent\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!getTreeForm.parent.$touched && !getTreeForm.$submitted || getTreeForm.parent.$valid\\\">The term ID under which to generate the tree. If 0, generate the tree for the entire vocabulary.</p><ng-messages class=\\\"error\\\" ng-if=\\\"getTreeForm.parent.$invalid && getTreeForm.parent.$touched || getTreeForm.$submitted\\\" for=\\\"getTreeForm.parent.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': getTreeForm.maxdepth.$touched && getTreeForm.maxdepth.$invalid || getTreeForm.maxdepth.$invalid && getTreeForm.$submitted}\\\"><label for=\\\"index__maxdepth\\\">Maxdepth</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__maxdepth\\\" name=\\\"maxdepth\\\" placeholder=\\\"Maxdepth\\\" ng-model=\\\"taxonomy_vocabulary.getTreeData.maxdepth\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!getTreeForm.maxdepth.$touched && !getTreeForm.$submitted || getTreeForm.maxdepth.$valid\\\">Maximum number of nodes to find.</p><ng-messages class=\\\"error\\\" ng-if=\\\"getTreeForm.maxdepth.$invalid && getTreeForm.maxdepth.$touched || getTreeForm.$submitted\\\" for=\\\"getTreeForm.maxdepth.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': getTreeForm.load_entities.$touched && getTreeForm.load_entities.$invalid || getTreeForm.load_entities.$invalid && getTreeForm.$submitted}\\\"><label for=\\\"index__load_entities\\\">Load Entities</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__load_entities\\\" name=\\\"load_entities\\\" placeholder=\\\"Load Entities\\\" ng-model=\\\"taxonomy_vocabulary.getTreeData.load_entities\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!getTreeForm.load_entities.$touched && !getTreeForm.$submitted || getTreeForm.load_entities.$valid\\\">Whether the tree of terms should contain full term entity objects. If 1 (TRUE), a full entity load will occur on the term objects. Otherwise they are partial objects to save execution time and memory consumption. Defaults to 0 (FALSE).</p><ng-messages class=\\\"error\\\" ng-if=\\\"getTreeForm.load_entities.$invalid && getTreeForm.load_entities.$touched || getTreeForm.$submitted\\\" for=\\\"getTreeForm.load_entities.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_vocabulary.doGetTree(getTreeForm)\\\">getTree request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/templates/index.html\",\"<h2>Index request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Index Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_vocabulary.indexRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"indexForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.page.$touched && indexForm.page.$invalid || indexForm.page.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__page\\\">Page</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__page\\\" name=\\\"page\\\" placeholder=\\\"Page\\\" ng-model=\\\"taxonomy_vocabulary.indexData.page\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.page.$touched && !indexForm.$submitted || indexForm.page.$valid\\\">Number of items to display on one page</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.page.$invalid && indexForm.page.$touched || indexForm.$submitted\\\" for=\\\"indexForm.page.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': indexForm.pagesize.$touched && indexForm.pagesize.$invalid || indexForm.pagesize.$invalid && indexForm.$submitted}\\\"><label for=\\\"index__pagesize\\\">Pagesize</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__pagesize\\\" name=\\\"pagesize\\\" placeholder=\\\"Pagesize\\\" ng-model=\\\"taxonomy_vocabulary.indexData.pagesize\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!indexForm.pagesize.$touched && !indexForm.$submitted || indexForm.pagesize.$valid\\\">Number of items to display on one page. (Anonymous taxonomy_vocabulary are limited to 25)</p><ng-messages class=\\\"error\\\" ng-if=\\\"indexForm.pagesize.$invalid && indexForm.pagesize.$touched || indexForm.$submitted\\\" for=\\\"indexForm.pagesize.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"taxonomy_vocabulary.indexFieldsColapsed = !taxonomy_vocabulary.indexFieldsColapsed\\\">Fields <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[taxonomy_vocabulary.indexFieldsColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Define the fields to fetched.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!taxonomy_vocabulary.indexFieldsColapsed && \\'in\\'\\\"><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_vocabulary.indexData.fields.vid\\\"> fields.vid</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_vocabulary.indexData.fields.name\\\"> fields.name</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_vocabulary.indexData.fields.machine_name\\\"> fields.machine_name</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_vocabulary.indexData.fields.description\\\"> fields.description</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_vocabulary.indexData.fields.weight\\\"> fields.weight</label></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"taxonomy_vocabulary.indexData.fields.hierarchy\\\"> fields.hierarchy</label></div></div><div class=\\\"form-group\\\"><label ng-click=\\\"taxonomy_vocabulary.indexParametersColapsed = !taxonomy_vocabulary.indexParametersColapsed\\\">Parameters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[taxonomy_vocabulary.indexParametersColapsed]\\\"></span></label><div class=\\\"help-block\\\"><p class=\\\"description\\\">Filter by field value.</p></div></div><div class=\\\"well collapse\\\" ng-class=\\\"!taxonomy_vocabulary.indexParametersColapsed && \\'in\\'\\\"><div class=\\\"form-group\\\"><label for=\\\"index__parameters_vid\\\">Parameter vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"index__parameters_vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_vocabulary.indexData.parameters.vid\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_name\\\">Parameter name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_name\\\" placeholder=\\\"TaxonomyVocabularyname\\\" ng-model=\\\"taxonomy_vocabulary.indexData.parameters.name\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_machine_name\\\">Parameter machine_name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_machine_name\\\" placeholder=\\\"Machine Name\\\" ng-model=\\\"taxonomy_vocabulary.indexData.parameters.machine_name\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_description\\\">Parameter description</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_description\\\" placeholder=\\\"Description\\\" ng-model=\\\"taxonomy_vocabulary.indexData.parameters.description\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_weight\\\">Parameter weight</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_weight\\\" placeholder=\\\"Weight\\\" ng-model=\\\"taxonomy_vocabulary.indexData.parameters.weight\\\"></div><div class=\\\"form-group\\\"><label for=\\\"index__parameters_signature\\\">Parameter hierarchy</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"index__parameters_hierarchy\\\" placeholder=\\\"Parent\\\" ng-model=\\\"taxonomy_vocabulary.indexData.parameters.hierarchy\\\"></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_vocabulary.doIndex(indexForm)\\\">index request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Get taxonomy_vocabulary details.<br>see <code>services/resources/taxonomy_vocabulary_resource.inc => _taxonomy_vocabulary_resource_retrieve()</code></p><blockquote class=\\\"bg-warning\\\"><h4>It\\'s possible to get following error here if you require a term that not exist:</h4><small><b>Fatal error</b>: __clone method called on non-object in <b>/paths/to/your/system/sites/all/modules/services/services.module</b> on line <b>1022</b><br></small><br>@TODO find patch</blockquote><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_vocabulary.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.vid.$touched && retrieveForm.vid.$invalid || retrieveForm.vid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__vid\\\">Vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__vid\\\" name=\\\"vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_vocabulary.retrieveData.vid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.vid.$touched && !retrieveForm.$submitted || retrieveForm.vid.$valid\\\">VID of the taxonomy vocabulary to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.vid.$invalid && retrieveForm.vid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.vid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_vocabulary.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");\n$templateCache.put(\"app/components/taxonomy_vocabulary/templates/update.html\",\"<h2>Update request</h2><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Update Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in taxonomy_vocabulary.updateRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"updateForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.vid.$touched && updateForm.vid.$invalid || updateForm.vid.$invalid && updateForm.$submitted }\\\"><label for=\\\"retrieve__tid\\\">Vid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__vid\\\" name=\\\"vid\\\" placeholder=\\\"Vid\\\" ng-model=\\\"taxonomy_vocabulary.updateData.vid\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.tid.$touched && !updateForm.$submitted || updateForm.tid.$valid\\\">VID of the taxonomy_vocabulary to be loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.vid.$invalid && updateForm.vid.$touched || updateForm.$submitted\\\" for=\\\"updateForm.vid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.name.$touched && updateForm.name.$invalid || updateForm.name.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__name\\\">Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"create__name\\\" placeholder=\\\"Name\\\" ng-model=\\\"taxonomy_vocabulary.updateData.name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.name.$touched && !updateForm.$submitted || updateForm.name.$valid\\\">The terms name</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.name.$invalid && updateForm.name.$touched || updateForm.$submitted\\\" for=\\\"updateForm.name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.machine_name.$touched && updateForm.machine_name.$invalid || updateForm.machine_name.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__machine_name\\\">Machine Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"machine_name\\\" id=\\\"create__machine_name\\\" placeholder=\\\"Machine Name\\\" ng-model=\\\"taxonomy_vocabulary.updateData.machine_name\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.machine_name.$touched && !updateForm.$submitted || updateForm.machine_name.$valid\\\">The terms machine_name</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.machine_name.$invalid && updateForm.machine_name.$touched || updateForm.$submitted\\\" for=\\\"updateForm.machine_name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.description.$touched && updateForm.description.$invalid || updateForm.description.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__description\\\">Description</label><input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"create__description\\\" placeholder=\\\"Description\\\" ng-model=\\\"taxonomy_vocabulary.updateData.description\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.description.$touched && !updateForm.$submitted || updateForm.description.$valid\\\">The description of the term</p></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.hierarchy.$touched && updateForm.hierarchy.$invalid || updateForm.hierarchy.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__hierarchy\\\">Hierarchy</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"hierarchy\\\" id=\\\"create__hierarchy\\\" placeholder=\\\"Hierarchy\\\" ng-model=\\\"taxonomy_vocabulary.updateData.hierarchy\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.hierarchy.$touched && !updateForm.$submitted || updateForm.hierarchy.$valid\\\">The hierarchy of term</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.hierarchy.$invalid && updateForm.hierarchy.$touched || updateForm.$submitted\\\" for=\\\"updateForm.hierarchy.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': updateForm.weight.$touched && updateForm.weight.$invalid || updateForm.weight.$invalid && updateForm.$submitted}\\\"><label for=\\\"create__weight\\\">Weight</label><input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"weight\\\" id=\\\"create__weight\\\" placeholder=\\\"Weight\\\" ng-model=\\\"taxonomy_vocabulary.updateData.weight\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!updateForm.weight.$touched && !updateForm.$submitted || updateForm.weight.$valid\\\">The weight/order of term</p><ng-messages class=\\\"error\\\" ng-if=\\\"updateForm.weight.$invalid && updateForm.weight.$touched || updateForm.$submitted\\\" for=\\\"updateForm.weight.$error\\\"><ng-messages-include src=\\\"error-number\\\"></ng-messages-include></ng-messages></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"taxonomy_vocabulary.doUpdate(updateForm)\\\">update request</button></form>\");\n$templateCache.put(\"app/components/views/templates/retrieve.html\",\"<h2>Retrieve request</h2><p>Returns the details of currently logged in views.<br>object with session id, session name and a views object.<br>See <code>services/resources/views_resource.inc</code></p><hr><accordion close-others=\\\"oneAtATime\\\"><accordion-group heading=\\\"Retrieve Request {{key}} at {{request.requestStart | date:\\'HH:mm:ss\\'}}\\\" ng-repeat=\\\"(key,request) in views.retrieveRequests\\\"><ng-include src=\\\"\\'app/templates/request/request.html\\'\\\"></ng-include></accordion-group></accordion><form name=\\\"retrieveForm\\\" novalidate><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.view_name.$touched && retrieveForm.view_name.$invalid || retrieveForm.view_name.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__view_name\\\">View Name</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"retrieve__view_name\\\" name=\\\"view_name\\\" placeholder=\\\"View Name\\\" ng-model=\\\"views.retrieveData.view_name\\\" required><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.view_name.$touched && !retrieveForm.$submitted || retrieveForm.view_name.$valid\\\">Name of the view to loaded</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.view_name.$invalid && retrieveForm.view_name.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.view_name.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.display_id.$touched && retrieveForm.display_id.$invalid || retrieveForm.display_id.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__display_id\\\">Display Id</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"retrieve__display_id\\\" name=\\\"display_id\\\" placeholder=\\\"Display Id\\\" ng-model=\\\"views.retrieveData.display_id\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.display_id.$touched && !retrieveForm.$submitted || retrieveForm.display_id.$valid\\\">Display Id of the view to loaded. You can find this under Views Administration -> Advanced -> Other -> Machine Name: \\\"display_id\\\"</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.display_id.$invalid && retrieveForm.display_id.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.display_id.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.args.$touched && retrieveForm.args.$invalid || retrieveForm.args.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__args\\\">Args</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"retrieve__args\\\" name=\\\"args\\\" placeholder=\\\"Args\\\" ng-model=\\\"views.retrieveData.args\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.args.$touched && !retrieveForm.$submitted || retrieveForm.args.$valid\\\">Args to pass to view</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.args.$invalid && retrieveForm.args.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.args.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.offset.$touched && retrieveForm.offset.$invalid || retrieveForm.offset.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__offset\\\">Offset</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__offset\\\" name=\\\"offset\\\" placeholder=\\\"Offset\\\" ng-model=\\\"views.retrieveData.offset\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.offset.$touched && !retrieveForm.$submitted || retrieveForm.offset.$valid\\\">Offset of the views records</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.offset.$invalid && retrieveForm.offset.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.offset.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.limit.$touched && retrieveForm.limit.$invalid || retrieveForm.limit.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__limit\\\">Limit</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__limit\\\" name=\\\"limit\\\" placeholder=\\\"Limit\\\" ng-model=\\\"views.retrieveData.limit\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.limit.$touched && !retrieveForm.$submitted || retrieveForm.limit.$valid\\\">Limit of the views records</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.limit.$invalid && retrieveForm.limit.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.limit.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"checkbox\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"views.retrieveData.format_output\\\"> format_output</label><div class=\\\"help-block\\\"><p class=\\\"description\\\">To format the output as html or not</p></div></div><label ng-click=\\\"views.exposed_sortsCollapsed = !views.exposed_sortsCollapsed\\\">Exposed sorts <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[views.exposed_sortsCollapsed]\\\"></span></label><div class=\\\"help-block\\\"><p>The sort criteria have to be set to exposed in the view</p></div><div class=\\\"well collapse\\\" ng-class=\\\"!views.exposed_sortsCollapsed && \\'in\\'\\\"><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.exposed_sorts.sort_order.$touched && retrieveForm.exposed_sorts.sort_order.$invalid || retrieveForm.exposed_sorts.sort_order.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__exposed_sorts.sort_order\\\">Sort Order:</label><br><label class=\\\"radio-inline\\\" ng-repeat=\\\"(sortName, value) in views.sorts\\\"><input type=\\\"radio\\\" name=\\\"sort_order\\\" id=\\\"retrieve__exposed_sorts_sort_order_{{sortName}}\\\" ng-model=\\\"views.retrieveData.exposed_sorts.sort_order\\\" value=\\\"{{value}}\\\"> {{value}}</label><div class=\\\"help-block\\\"><p class=\\\"description\\\">The sort order</p></div></div><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.exposed_sorts.sort_by.$touched && retrieveForm.exposed_sorts.sort_by.$invalid || retrieveForm.exposed_sorts.sort_by.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__exposed_sorts.sort_by\\\">Sort By</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"retrieve__exposed_sort_sort_by\\\" name=\\\"Sort Order\\\" placeholder=\\\"Sort By\\\" ng-model=\\\"views.retrieveData.exposed_sorts.sort_by\\\"><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.exposed_sorts.sort_by.$touched && !retrieveForm.$submitted || retrieveForm.exposed_sorts.sort_by.$valid\\\">The field name to sort by</p></div></div></div><label ng-click=\\\"views.exposed_filtersCollapsed = !views.exposed_filtersCollapsed\\\">Exposed filters <span class=\\\"caret\\\" ng-class=\\\"{true:\\'down\\',false:\\'up\\'}[views.exposed_filtersCollapsed]\\\"></span></label><div class=\\\"help-block\\\"><p>The filters criteria have to be set to exposed in the view</p></div><div class=\\\"well collapse\\\" ng-class=\\\"!views.exposed_filtersCollapsed && \\'in\\'\\\"><div class=\\\"form-group\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.nid.$touched && retrieveForm.nid.$invalid || retrieveForm.nid.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__nid\\\">Nid</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__nid\\\" name=\\\"nid\\\" placeholder=\\\"Nid\\\" ng-model=\\\"views.retrieveData.exposed_filters.nid\\\"><form-control-feedback></form-control-feedback><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.nid.$touched && !retrieveForm.$submitted || retrieveForm.nid.$valid\\\">Nid in views records (The field is set to exposed in the view)</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.nid.$invalid && retrieveForm.nid.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.nid.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\"><label for=\\\"retrieve__exposed_sorts.sort_order\\\">Comment count operators (The field and operators are set to exposed in the view)</label><br><div class=\\\"radio\\\" ng-repeat=\\\"(filterName, value)  in views.filters\\\"><label><input type=\\\"radio\\\" name=\\\"{{filterName}}\\\" id=\\\"retrieve__exposed_filters__{{filterName}}\\\" ng-model=\\\"views.retrieveData.exposed_filters.comment_count_op\\\" value=\\\"{{value}}\\\"> {{filterName}}</label></div><div class=\\\"help-block\\\"><p class=\\\"description\\\">The comment count operators</p></div></div><div class=\\\"form-group\\\" ng-if=\\\"views.retrieveData.exposed_filters.comment_count_op !== \\'between\\' && views.retrieveData.exposed_filters.comment_count_op !== \\'not+between\\' && views.retrieveData.exposed_filters.comment_count_op !== \\'regular_expression\\'\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.exposed_filters.comment_count.$touched && retrieveForm.exposed_filters.comment_count.$invalid || retrieveForm.exposed_filters.comment_count.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__exposed_filters.comment_count\\\">Comment count value</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__exposed_filters_comment_count_value\\\" name=\\\"Comment count value\\\" placeholder=\\\"Comment count value\\\" ng-model=\\\"views.retrieveData.exposed_filters.comment_count.value\\\"><div class=\\\"help-block\\\"><p class=\\\"description\\\">Comment count of node in views records</p></div></div><div class=\\\"form-group\\\" ng-if=\\\"views.retrieveData.exposed_filters.comment_count_op === \\'between\\' || views.retrieveData.exposed_filters.comment_count_op === \\'not+between\\'\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.exposed_filters.comment_count.min.$touched && retrieveForm.exposed_filters.comment_count.min.$invalid || retrieveForm.exposed_filters.comment_count.min.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__exposed_filters.comment_count_min\\\">Comment count min</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__exposed_filters_comment_count_min\\\" name=\\\"Comment count min\\\" placeholder=\\\"Comment count min\\\" ng-model=\\\"views.retrieveData.exposed_filters.comment_count.min\\\"><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.exposed_filters.comment_count.min.$touched && !retrieveForm.$submitted || retrieveForm.exposed_filters.comment_count.min.$valid\\\">Comment count of node in views records</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.exposed_filters.comment_count.min.$invalid && retrieveForm.exposed_filters.comment_count.min.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.exposed_filters.comment_count.min.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-if=\\\"views.retrieveData.exposed_filters.comment_count_op === \\'between\\' || views.retrieveData.exposed_filters.comment_count_op === \\'not+between\\'\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.exposed_filters.comment_count.max.$touched && retrieveForm.exposed_filters.comment_count.max.$invalid || retrieveForm.exposed_filters.comment_count.max.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__exposed_filters.comment_count_max\\\">Comment count max</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"retrieve__exposed_filters_comment_count.max\\\" name=\\\"Comment count max\\\" placeholder=\\\"Comment count max\\\" ng-model=\\\"views.retrieveData.exposed_filters.comment_count.max\\\"><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.exposed_filters.comment_count.max.$touched && !retrieveForm.$submitted || retrieveForm.exposed_filters.comment_count.max.$valid\\\">Comment count of node in views records</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.exposed_filters.comment_count.max.$invalid && retrieveForm.exposed_filters.comment_count.max.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.exposed_filters.comment_count.max.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div><div class=\\\"form-group\\\" ng-if=\\\"views.retrieveData.exposed_filters.comment_count_op === \\'regular_expression\\'\\\" ng-class=\\\"{ \\'has-error has-feedback\\': retrieveForm.exposed_filters.comment_count.regular_expression.$touched && retrieveForm.exposed_filters.comment_count.regular_expression.$invalid || retrieveForm.exposed_filters.comment_count.regular_expression.$invalid && retrieveForm.$submitted }\\\"><label for=\\\"retrieve__exposed_filters.comment_count_regular_expression\\\">Comment count regular_expression</label><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"retrieve__exposed_filters_comment_count.regular_expression\\\" name=\\\"Comment count regular_expression\\\" placeholder=\\\"Comment count regular_expression\\\" ng-model=\\\"views.retrieveData.exposed_filters.comment_count.regular_expression\\\"><div class=\\\"help-block\\\"><p class=\\\"description\\\" ng-if=\\\"!retrieveForm.exposed_filters.comment_count.regular_expression.$touched && !retrieveForm.$submitted || retrieveForm.exposed_filters.comment_count.regular_expression.$valid\\\">Comment count of node in views records</p><ng-messages class=\\\"error\\\" ng-if=\\\"retrieveForm.exposed_filters.comment_count.regular_expression.$invalid && retrieveForm.exposed_filters.comment_count.regular_expression.$touched || retrieveForm.$submitted\\\" for=\\\"retrieveForm.exposed_filters.comment_count.regular_expression.$error\\\"><ng-messages-include src=\\\"error-required\\\"></ng-messages-include></ng-messages></div></div></div><button class=\\\"btn btn-success\\\" ng-click=\\\"views.doRetrieve(retrieveForm)\\\">retrieve request</button></form>\");}]);"],"sourceRoot":"/source/"}