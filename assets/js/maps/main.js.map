{"version":3,"sources":["app/commons/directives/formControlFeedback.js","app/commons/directives/navbarLogin.js","app/commons/filters/filters.ifEmpty.js","app/app.controller.js","app/components/home/home.controller.js","app/components/commons/commons.controller.js","app/components/services_3x/services_3x.controller.js","app/components/services_views/services_views.controller.js","app/components/authentication/authentication.controller.js","app/components/authentication/authentication.states.js","app/components/comment/comment.controller.js","app/components/comment/comment.states.js","app/components/system/system.controller.js","app/components/system/system.states.js","app/components/user/user.controller.js","app/components/user/user.states.js","app/components/node/node.controller.js","app/components/node/node.states.js","app/components/file/file.controller.js","app/components/file/file.states.js","app/components/taxonomy_term/taxonomy_term.controller.js","app/components/taxonomy_term/taxonomy_term.states.js","app/components/taxonomy_vocabulary/taxonomy_vocabulary.controller.js","app/components/taxonomy_vocabulary/taxonomy_vocabulary.states.js","app/components/views/views.controller.js","app/components/views/views.states.js","app/app.config.js","app/app.states.js","app/app.js"],"names":["formControlFeedback","restrict","replace","require","template","link","scope","elem","attrs","form","formElem","parent","find","formElemName","attr","prevDisp","css","$watch","$name","newVal","angular","module","directive","navbarLogin","AuthenticationService","AuthenticationChannel","AuthenticationServiceConstant","navbarLoginform","ele","ctrl","doLogin","navbarLoginForm","$valid","login","ngModel","navbarLoginData","then","data","$setPristine","$setUntouched","doLogout","logout","currentUserUpdatedHandler","user","username","name","accessLevels","subCurrentUserUpdated","$inject","ifEmpty","input","defaultValue","isUndefined","filter","AppController","$state","vm","this","navCollapsed","refreshConnection","controller","HomeController","$scope","CommonsController","descriptionColapsed","Services_3xController","Services_ViewsController","AuthenticationController","$filter","updateSelectedAccessLevel","accessLevelKeyName","isAuthorizedData","selectedAccessLevel","updateSelectedRoles","roleId","selectedRoles","roles","doIsAuthorized","authType","isUserAuthorized","isAuthorized","loginForm","requestStart","Date","now","loginData","console","log","subLoginConfirmedCallback","requestEnd","loginRequests","push","requestDuration","subLoginFailedCallback","logoutData","subLogoutConfirmedCallback","logoutRequests","subLogoutFailedCallback","doRefreshConnection","subRefreshConnectionConfirmedCallback","refreshConnectionRequests","subRefreshConnectionFailedCallback","doGetLastConnectTime","lastConnectionTime","getLastConnectTime","doGetConnectionState","getConnectionState","currentConnectionState","subConnectionStateUpdatedCallback","connectionStateChanges","timeOfChange","from","to","doGetAuthenticationHeaders","currentAuthenticationHeaders","getAuthenticationHeaders","doGetCurrentUser","currentUser","getCurrentUser","subCurrentUserUpdatedCallback","currentUserChanges","rolesOptions","forEach","v","k","isAuthorizedResult","uid","subLoginConfirmed","subLoginFailed","subLogoutConfirmed","subLogoutFailed","subRefreshConnectionConfirmed","subRefreshConnectionFailed","subConnectionStateUpdated","configFunction","$stateProvider","$urlRouterProvider","state","url","abstract","views","authentication","templateUrl","controllerAs","deepStateRedirect","sticky","config","CommentController","CommentResource","CommentChannel","DrupalHelperService","doRetrieve","retrieveForm","retrieve","retrieveData","subRetrieveConfirmedCallback","retrieveRequests","subRetrieveFailedCallback","doCreate","createForm","formatedCreateData","extend","createData","comment_body","structureField","value","comment_body_value","create","subCreateConfirmedCallback","createRequests","subCreateFailedCallback","doUpdate","updateForm","formatedUpdateData","updateData","update","subUpdateConfirmedCallback","updateRequests","subUpdateFailedCallback","doDelete","deleteForm","deleteData","subDeleteConfirmedCallback","deleteRequests","subDeleteFailedCallback","deleteErrors","doIndex","indexForm","index","indexData","subIndexConfirmedCallback","indexRequests","subIndexFailedCallback","doCountAll","countAllForm","countAllData","countAll","subCountAllConfirmedCallback","countAllRequests","subCountAllFailedCallback","doCountNew","countNewForm","countNew","countNewData","subCountNewConfirmedCallback","countNewRequests","subCountNewFailedCallback","subRetrieveConfirmed","subRetrieveFailed","subCreateConfirmed","subCreateFailed","subUpdateConfirmed","subUpdateFailed","subDeleteConfirmed","subDeleteFailed","page","fields","parameters","pagesize","indexFieldsColapsed","indexParametersColapsed","subIndexConfirmed","subIndexFailed","subCountAllConfirmed","subCountAllFailed","subCountNewConfirmed","subCountNewFailed","comment","delete","SystemController","SystemResource","SystemChannel","doConncet","connectForm","connect","subConnectConfirmedCallback","connectRequests","subConnectFailedCallback","doGetVariable","getVariableForm","get_variable","getVariableData","subGetVariableConfirmedCallback","getVariableRequests","subGetVariableFailedCallback","doSetVariable","setVariableForm","set_variable","setVariableData","subSetVariableConfirmedCallback","setVariableRequests","subSetVariableFailedCallback","doDelVariable","delVariableForm","del_variable","delVariableData","subDelVariableConfirmedCallback","delVariableRequests","subDelVariableFailedCallback","subConnectConfirmed","subConnectFailed","default","subGetVariableConfirmed","subGetVariableFailed","subSetVariableConfirmed","subSetVariableFailed","subDelVariableConfirmed","subDelVariableFailed","system","getVariable","setVariable","delVariable","UserController","UserResource","UserChannel","logoutForm","doToken","tokenForm","token","tokenData","subTokenConfirmedCallback","tokenRequests","subTokenFailedCallback","field_nickname","doRegister","registerForm","register","registerData","subRegisterConfirmedCallback","registerRequests","subRegisterFailedCallback","doResendWelcomeEmail","resendWelcomeEmailForm","resendWelcomeEmail","resendWelcomeEmailData","subResendWelcomeEmailConfirmedCallback","resendWelcomeEmailRequests","subResendWelcomeEmailFailedCallback","doCancel","cancel","cancelData","subCancelConfirmedCallback","cancelRequests","subCancelFailedCallback","doPasswordReset","passwordReset","passwordResetData","subPasswordResetConfirmedCallback","passwordResetRequests","subPasswordResetFailedCallback","doRequestNewPassword","requestNewPassword","requestNewPasswordData","subRequestNewPasswordConfirmedCallback","requestNewPasswordRequests","subRequestNewPasswordFailedCallback","subTokenConfirmed","subTokenFailed","pass","mail","subRegisterConfirmed","subRegisterFailed","subResendWelcomeEmailConfirmed","subResendWelcomeEmailFailed","subCancelConfirmed","subCancelFailed","subPasswordResetConfirmed","subPasswordResetFailed","subRequestNewPasswordConfirmed","subRequestNewPasswordFailed","NodeController","NodeResource","NodeChannel","body","body_value","summary","body_summary","field_custom_field","doFiles","filesForm","files","filesData","subFilesConfirmedCallback","filesRequests","subFilesFailedCallback","doComments","commentsForm","comments","commentsData","subCommentsConfirmedCallback","commentsRequests","subCommentsFailedCallback","doAttachFile","attachFileForm","attachFile","attachFileData","subAttachFileConfirmedCallback","attachFileRequests","subAttachFileFailedCallback","filesErrors","subFilesConfirmed","subFilesFailed","commentsErrors","nid","subCommentsConfirmed","subCommentsFailed","attachFileErrors","subAttachFileConfirmed","subAttachFileFailed","node","FileController","FileResource","FileChannel","doCreateRaw","createRawForm","createRaw","createRawData","subCreateRawConfirmedCallback","createRawRequests","subCreateRawFailedCallback","fid","file_contents","image_styles","file","filename","filesize","length","filepath","filemime","image_file_name","createRawErrors","subCreateRawConfirmed","subCreateRawFailed","TaxonomyTermController","TaxonomyTermResource","TaxonomyTermChannel","doSelectNodes","selectNodesForm","selectNodes","selectNodesData","subSelectNodesConfirmedCallback","selectNodesRequests","subSelectNodesFailedCallback","subSelectNodesConfirmed","subSelectNodesFailed","taxonomy_term","TaxonomyVocabularyController","TaxonomyVocabularyResource","TaxonomyVocabularyChannel","doGetTree","getTreeForm","getTree","getTreeData","subGetTreeConfirmedCallback","getTreeRequests","subGetTreeFailedCallback","subGetTreeConfirmed","subGetTreeFailed","taxonomy_vocabulary","ViewsController","ViewsResource","ViewsChannel","ViewsOperatorsConstant","exposed_filters","comment_count_op","filters","regular_expression","is_between","is_not_between","comment_count","min","max","error","filter_operators","sorts","sort_operators","view_name","exposed_sorts","exposed_filtersCollapsed","exposed_sortsCollapsed","DrupalApiConstant","drupal_instance","api_endpoint","otherwise","mainNavContent"],"mappings":"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","file":"main.js","sourcesContent":[";(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('commons.directives.formControlFeedback', [])\r\n        .directive('formControlFeedback', formControlFeedback);\r\n\r\n\r\n    //formControlFeedback.$inject = [''];\r\n\r\n    /** @ngInject */\r\n    function formControlFeedback() {\r\n\r\n        return {\r\n            // restrict to an element type.\r\n            restrict: 'E',\r\n            replace: true,\r\n            require: '^form',\r\n            template:'<span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>',\r\n            link : function(scope, elem, attrs, form) {\r\n            \t\r\n            \tvar formElem = elem.parent().find('input'),\r\n            \t\tformElemName = formElem.attr('name'),\r\n            \t\tprevDisp = formElem.css('display');\r\n            \t\r\n            \tscope.$watch( form.$name + '.' + formElemName + '.$valid', function(newVal) {\r\n            \t\r\n            \t\tif(!newVal) {\r\n            \t\t\telem.css('display', prevDisp);\r\n            \t\t} else {\r\n            \t\t\telem.css('display', 'none');\r\n            \t\t}\r\n            \t\t\r\n            \t});\r\n            \t\r\n            \t\r\n            \t\r\n            }\r\n        };\r\n\r\n\r\n    };\r\n\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('commons.directives.navbarLogin', ['d7-services.commons.authentication.service', 'd7-services.commons.authentication.channel', 'd7-services.commons.authentication.serviceConstant'])\r\n        .directive('navbarLogin', navbarLogin);\r\n\r\n\r\n    navbarLogin.$inject = ['AuthenticationService', 'AuthenticationChannel', 'AuthenticationServiceConstant'];\r\n\r\n    /** @ngInject */\r\n    function navbarLogin(AuthenticationService, AuthenticationChannel, AuthenticationServiceConstant) {\r\n    \t\r\n    \tvar navbarLoginform = \r\n\t    \t\t\t'<div class=\"navbar-right\">'+\r\n\t\t    \t\t\t'<form toggle-by-accesslevel=\"{{accessLevels.anon}}\" class=\"navbar-form navbar-right\" name=\"navbarLoginForm\" id=\"navbar-login\" novalidate>' +\r\n\t\t\t\t    \t\t'<div class=\"form-group\" ng-class=\"{ \\'has-error\\' : navbarLoginForm.username.$touched && navbarLoginForm.username.$invalid || navbarLoginForm.username.$invalid && navbarLoginForm.$submitted}\">' +\r\n\t\t\t\t    \t\t\t'<input type=\"text\" class=\"form-control\" name=\"username\" id=\"navbarLogin__username\" placeholder=\"Username\" ng-model=\"ngModel.navbarLoginData.username\" ng-maxlength=\"60\" required>' +\r\n\t\t\t\t    \t\t'</div> ' +\r\n\t\t\t\t    \t\t'<div class=\"form-group\" ng-class=\"{ \\'has-error\\': navbarLoginForm.password.$touched && navbarLoginForm.password.$invalid || navbarLoginForm.password.$invalid && navbarLoginForm.$submitted}\">' +\r\n\t\t\t\t    \t\t\t'<input type=\"password\" class=\"form-control\" name=\"password\" id=\"navbarLogin__password\" placeholder=\"Password\" ng-model=\"ngModel.navbarLoginData.password\" required>' +\r\n\t\t\t\t    \t\t'</div> '+\r\n\t\t\t\t    \t\t'<button class=\"btn btn-primary\" ng-click=\"doLogin(navbarLoginForm)\">Login</button>' +\r\n\t\t\t\t    \t'</form>'+\r\n\t\t\t\t    \t'<ul id=\"navbar-user\" class=\"nav navbar-nav\"  toggle-by-accesslevel=\"{{accessLevels.user}}\">'+\r\n\t\t\t\t    \t\t'<li class=\"dropdown\" dropdown>'+\r\n\t\t\t\t    \t\t\t'<a href=\"#\" dropdown-toggle>'+\r\n\t\t\t\t    \t\t\t\t'<span class=\"glyphicon glyphicon-user\"></span> {{username}} <b class=\"caret\"></b>'+\r\n\t\t\t\t    \t\t\t'</a>'+\r\n\t\t\t\t    \t\t\t'<ul class=\"dropdown-menu\">'+\r\n\t\t\t                        '<li class=\"divider\"></li>'+\r\n\t\t\t                        '<li><a href=\"#\" ng-click=\"doLogout()\"><span class=\"glyphicon glyphicon-off\"> </span>Logout</a></li>'+\r\n\t\t\t                    '</ul>'+\r\n\t\t\t                 '</li>'+\r\n\t\t\t\t    \t'</ul>'+\r\n\t\t\t    \t'</div>';\r\n\t\t    \t    \t\r\n        return {\r\n            // restrict to an element type.\r\n            restrict: 'E',\r\n            replace: true,\r\n            template: navbarLoginform,\r\n            link : function linkFunction(scope, ele, attrs, ctrl) {\r\n            \t\r\n            \tscope.accessLevels = AuthenticationServiceConstant.accessLevels;\r\n            \tscope.doLogin = doLogin;\r\n            \tscope.doLogout = doLogout;\r\n\r\n            \tAuthenticationChannel.subCurrentUserUpdated(scope, currentUserUpdatedHandler);\r\n                \r\n            \t///////////////////////////////\r\n            \t\r\n            \tfunction doLogin(navbarLoginForm) {\r\n\t\r\n            \t\tif(navbarLoginForm.$valid) {\t\t\r\n            \t\t\tAuthenticationService.login(scope.ngModel.navbarLoginData)\r\n\t\t    \t\t\t    .then(\r\n\t\t    \t\t\t    \t\t//login success\r\n\t\t    \t\t\t    \t\tfunction(data) { \r\n\t\t    \t\t\t    \t\t\tscope.ngModel.navbarLoginData = {};\r\n\t\t\t\t\t\t    \t\t\tnavbarLoginForm.$setPristine();\r\n\t\t\t\t\t\t    \t\t\tnavbarLoginForm.$setUntouched();\r\n\t\t    \t\t\t    \t\t}\r\n\t\t    \t\t\t    );\r\n            \t\t}\r\n            \t\t\r\n            \t};\r\n            \t\r\n            \tfunction doLogout() {\r\n            \t\tAuthenticationService.logout();\r\n            \t};\r\n            \t\r\n            \tfunction currentUserUpdatedHandler(user){\r\n                 \tscope.username = user.name;\r\n                };\r\n            }\r\n           \r\n            \r\n        };\r\n\r\n    };\r\n    \r\n\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('commons.filters.ifEmpty', [])\r\n        .filter('ifEmpty', ifEmpty);\r\n\r\n\r\n    //ifEmpty.$inject = [];\r\n\r\n    /**\r\n     *\r\n     * provide a default value if original is not given\r\n     *\r\n     * example {{input | ifEmpty:0}}\r\n     *\r\n     */\r\n    /** @ngInject */\r\n    function ifEmpty() {\r\n        return function(input, defaultValue) {\r\n            if (angular.isUndefined(input) || input === null || input === '') {\r\n                return defaultValue;\r\n            }\r\n\r\n            return input;\r\n        }\r\n\r\n    };\r\n    \r\n})();\r\n\r\n","(function() {\r\n    'use strict';\r\n\r\n\tangular\r\n\t    .module('ngDrupalServicesTests.app.controller', ['commons.directives.navbarLogin'])\r\n\t    .controller('AppController', AppController);\r\n\t\r\n\tAppController.$inject = ['$state', 'AuthenticationService', 'AuthenticationServiceConstant'];\r\n\t\r\n\t/** @ngInject */\r\n\tfunction AppController($state, AuthenticationService, AuthenticationServiceConstant) { \r\n\t\t/* jshint validthis: true */\r\n\t\tvar vm = this;\r\n\t\t\r\n\t\tvm.navCollapsed = true;\r\n\t\tvm.$state = $state;\r\n\t\t\r\n\t\tvm.accessLevels = AuthenticationServiceConstant.accessLevels;\r\n\t\t\r\n\t\tAuthenticationService.refreshConnection();\r\n\t};\r\n\r\n\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.home.controller', [])\r\n    .controller('HomeController', HomeController);\r\n\r\n\tHomeController.$inject = ['$scope'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction HomeController($scope ) \r\n\t{ \r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t    \r\n\t\t///////////////////////\r\n\t    \r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.commons.controller', [])\r\n    .controller('CommonsController', CommonsController);\r\n\r\n\t//CommonsController.$inject = [];\r\n\r\n\t/** @ngInject */ \r\n\tfunction CommonsController() { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\tvm.descriptionColapsed = true;\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.services_3x.controller', ['ui.router'])\r\n    .controller('Services_3xController', Services_3xController);\r\n\r\n\t//Services_3xController.$inject = [];\r\n\r\n\t/** @ngInject */ \r\n\tfunction Services_3xController() { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\tvm.descriptionColapsed = true;\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.services_views.controller', ['ui.router'])\r\n    .controller('Services_ViewsController', Services_ViewsController);\r\n\r\n\t//Services_ViewsController.$inject = [];\r\n\r\n\t/** @ngInject */ \r\n\tfunction Services_ViewsController() { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t \r\n\t\tvm.descriptionColapsed = true;\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.authentication.controller', ['d7-services.commons.authentication.service', 'd7-services.commons.authentication.serviceConstant', 'd7-services.commons.authentication.channel', 'commons.filters.ifEmpty'])\r\n    .controller('AuthenticationController', AuthenticationController);\r\n\r\n\tAuthenticationController.$inject = ['$scope', 'AuthenticationService', 'AuthenticationChannel', 'AuthenticationServiceConstant', '$filter'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction AuthenticationController($scope ,AuthenticationService, AuthenticationChannel, AuthenticationServiceConstant, $filter) \r\n\t{ \r\n\t\t\r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t \r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\r\n\t\t//AuthenticationServiceConstant\r\n\t\tvm.roles = AuthenticationServiceConstant.roles;\r\n\t\tvm.accessLevels = AuthenticationServiceConstant.accessLevels;\r\n\t\tvm.selectedAccessLevel = 'public';\r\n\t\tvm.rolesOptions = {};\r\n\t\t\r\n\t\t//@TODO make initial selected accessLevel work also with other then accessLevels.public\r\n\t\tvm.isAuthorizedData = {};\r\n\t\t\r\n\t\tvm.isAuthorizedData.selectedAccessLevel = vm.accessLevels.public\r\n\t\t\r\n\t\tvm.isAuthorizedData.selectedRoles = {};\r\n\t\tvm.isAuthorizedData.selectedRoles['1'] =  vm.roles['1'];\r\n\t\t\r\n\t\t\r\n\t\t//create object of roleId and boolean\r\n\t\t//set roleID of vm.isAuthorizedData.accessLevel to true\r\n\t\tangular.forEach(vm.roles, function(v,k) { vm.rolesOptions[k] = (vm.isAuthorizedData.selectedRoles[k])?true:false; });\r\n\t\t\r\n\t\t//isAuthorized\r\n\t\tvm.isAuthorizedResult;\r\n\t\tvm.updateSelectedAccessLevel = updateSelectedAccessLevel;\r\n\t\tvm.updateSelectedRoles = updateSelectedRoles;\r\n\t\tvm.doIsAuthorized = doIsAuthorized;\r\n\t\t\r\n\t\t// login request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.loginRequests = [];\r\n\t\tvm.loginData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t// test request\r\n\t\tvm.doLogin = doLogin;\r\n\t\t// test the login on confirm event\r\n\t\tAuthenticationChannel.subLoginConfirmed($scope, subLoginConfirmedCallback);\r\n\t\t// test the login on failed event\r\n\t\tAuthenticationChannel.subLoginFailed($scope, subLoginFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t\t// isAuthorized check\r\n\t\tfunction updateSelectedAccessLevel(accessLevelKeyName) {\r\n\t\t\tvm.isAuthorizedData.selectedAccessLevel = vm.accessLevels[accessLevelKeyName];\r\n\t\t};\r\n\t\t\r\n\t\tfunction updateSelectedRoles(roleId) {\r\n\t\t\t\r\n\t\t\tif(vm.isAuthorizedData.selectedRoles[roleId]){\r\n\t\t\t\tdelete vm.isAuthorizedData.selectedRoles[roleId];\r\n\t\t\t} else {\r\n\t\t\t\tvm.isAuthorizedData.selectedRoles[roleId] =  vm.roles[roleId];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tfunction doIsAuthorized(authType) {\r\n\t\t\t\r\n\t\t\tif(authType == 'level') {\r\n\t\t\t\tvm.isUserAuthorized = AuthenticationService.isAuthorized(vm.isAuthorizedData.selectedAccessLevel);\r\n\t\t\t}\r\n\t\t\tif(authType == 'roles_and_level') {\r\n\t\t\t\tvm.isUserAuthorized = AuthenticationService.isAuthorized(vm.isAuthorizedData.selectedAccessLevel, vm.isAuthorizedData.selectedRoles);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t// logout request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.logoutRequests = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doLogout = doLogout;\r\n\t\t// test the token on confirm event\r\n\t\tAuthenticationChannel.subLogoutConfirmed($scope, subLogoutConfirmedCallback);\r\n\t\t// test the token on failed event\r\n\t    AuthenticationChannel.subLogoutFailed($scope, subLogoutFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    // refresh connection request\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.refreshConnectionRequests = [];\r\n\r\n\t\t// test request\r\n\t\tvm.doRefreshConnection = doRefreshConnection;\r\n\t\t// test the token on confirm event\r\n\t\tAuthenticationChannel.subRefreshConnectionConfirmed($scope, subRefreshConnectionConfirmedCallback);\r\n\t\t// test the token on failed event\r\n\t    AuthenticationChannel.subRefreshConnectionFailed($scope, subRefreshConnectionFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t  \r\n\t    // getLastConnectionTime\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.lastConnectionTime = '';\r\n\r\n\t\t// test request\r\n\t\tvm.doGetLastConnectTime = doGetLastConnectTime;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getConnectionState\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.connectionStateChanges = [];\r\n\t\tvm.currentConnectionState = '';\r\n\r\n\t\t// test request\r\n\t\tvm.doGetConnectionState = doGetConnectionState;\r\n\t\t// test connectionState updated event\r\n\t\tAuthenticationChannel.subConnectionStateUpdated($scope, subConnectionStateUpdatedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getAuthenticationHeaders\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.currentAuthenticationHeaders = '';\r\n\r\n\t\t// test request\r\n\t\tvm.doGetAuthenticationHeaders = doGetAuthenticationHeaders;\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t// getCurrentUser\r\n\t\t\r\n\t\t// store requests\r\n\t\tvm.currentUserChanges = [];\r\n\t\tvm.currentUser = AuthenticationService.getCurrentUser();\r\n\r\n\t\t// test request\r\n\t\tvm.doGetCurrentUser = doGetCurrentUser;\r\n\t\t\r\n\t\t// test connectionState updated event\r\n\t\tAuthenticationChannel.subCurrentUserUpdated($scope, subCurrentUserUpdatedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t///////////////////////\r\n\t    \r\n\t\t// login request\r\n\t    \r\n\t    // do request\r\n\t\tfunction doLogin(loginForm) {\r\n\t\t\tif(loginForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tAuthenticationService.login(vm.loginData)\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//login success\r\n\t\t\t\t    \t\tfunction(data) { \r\n\t\t\t\t    \t\t\tvm.loginData = {};\r\n\t\t\t\t    \t\t\tconsole.log('auth login success', data);\r\n\t\t\t\t    \t\t\tloginForm.$setPristine();\r\n\t\t\t\t    \t\t\tloginForm.$setUntouched();\r\n\t\t\t\t    \t\t},\r\n\t\t\t\t    \t\t//login error\r\n\t\t\t\t    \t\tfunction(data) { \r\n\t\t\t\t    \t\t\tconsole.log('auth login error'); \r\n\t\t\t\t    \t\t}\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subLoginConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginConfirmed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subLoginFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginFailed', data); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// logout request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogout() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService.logout(vm.logoutData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//logout success\r\n\t\t    \t\tfunction(data) { console.log('auth logout success'); },\r\n\t\t    \t\t//logout error\r\n\t\t    \t\tfunction(data) { console.log('auth logout error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subLogoutConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutConfirmed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subLogoutFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutFailed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\r\n\t\t// refresh request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRefreshConnection() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tAuthenticationService\r\n\t   \t\t\t.refreshConnection()\r\n\t   \t\t\t\t.then(\tfunction(data) { console.log('auth RefreshConnection success'); },\r\n\t   \t\t\t\t\t\tfunction(data) { console.log('auth RefreshConnection error'); }\r\n\t   \t\t\t\t);\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subRefreshConnectionConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRefreshConnectionConfirmedCallback'); \r\n\t\t\tvm.refreshConnectionRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t// failed callback\r\n\t\tfunction subRefreshConnectionFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRefreshConnectionFailedCallback'); \r\n\t\t\tvm.refreshConnectionRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get last ConnectionTime \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetLastConnectTime() {\r\n\t\t\tvm.lastConnectionTime = AuthenticationService.getLastConnectTime();\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get connectionState \r\n\t\t\r\n\t    //do request\r\n\t\tfunction doGetConnectionState() {\r\n\t\t\tconsole.log(AuthenticationService.getConnectionState()); \r\n\t\t\tvm.currentConnectionState = AuthenticationService.getConnectionState();\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subConnectionStateUpdatedCallback(data) { \r\n\t\t\tconsole.log('subConnectionStateUpdatedCallback'); \r\n\t\t\tvm.connectionStateChanges.push({timeOfChange: Date.now(), from: vm.currentConnectionState, to: data});    \r\n\t\t\tvm.currentConnectionState = data;\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// get authenticationHeaders \r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetAuthenticationHeaders() {\r\n\t\t\tvm.currentAuthenticationHeaders = AuthenticationService.getAuthenticationHeaders();    \r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t// currentUser request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetCurrentUser() {\r\n\t\t\tcurrentUser = AuthenticationService.getCurrentUser();\r\n\t\t};\r\n\t\t\r\n\t\t// confirm callback\r\n\t\tfunction subCurrentUserUpdatedCallback(data) { \r\n\t\t\tconsole.log('subCurrentUserUpdatedCallback'); \r\n\t\t\tvm.currentUserChanges.push({timeOfChange: Date.now(), from: vm.currentUser, to: data});\r\n\t\t\tvm.currentUser = data;\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.authentication.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.authentication.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.commons.authentication', {\r\n            url: \"/authentication\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'authentication' : {\r\n\t\t\t        templateUrl: './app/components/authentication/authentication.view.html',\r\n\t\t\t        controller\t: 'AuthenticationController',\r\n\t\t\t        controllerAs : 'authentication'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.isAuthorized', {\r\n            url: \"/is-authorized\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'isAuthorized' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/isAuthorized.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.login', {\r\n            url: \"/login\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'login' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/login.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.logout', {\r\n            url: \"/logout\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'logout' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/logout.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getAuthenticationHeaders', {\r\n            url: \"/get-authentication-headers\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getAuthenticationHeaders' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getAuthenticationHeaders.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getConnectionState', {\r\n            url: \"/get-connection-state\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getConnectionState' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getConnectionState.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getCurrentUser', {\r\n            url: \"/get-current-user\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getCurrentUser' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getCurrentUser.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.getLastConnectTime', {\r\n            url: \"/get-last-connect-time\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getLastConnectTime' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/getLastConnectTime.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.commons.authentication.refreshConnection', {\r\n            url: \"/refresh-connection\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'refreshConnection' : {\r\n\t\t\t        templateUrl: './app/components/authentication/templates/refreshConnection.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.comment.controller', ['d7-services.resources.comment.resource', 'd7-services.resources.comment.channel', 'd7-services.commons.helperService'])\r\n    .controller('CommentController', CommentController);\r\n\r\n\tCommentController.$inject = ['$scope', 'CommentResource', 'CommentChannel','DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction CommentController($scope, CommentResource, CommentChannel, DrupalHelperService) { \r\n\t\tconsole.log('CommentController'); \r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tCommentChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    CommentChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tCommentChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    CommentChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tCommentChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    CommentChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tCommentChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    CommentChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tCommentChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    CommentChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //countAll request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.countAllRequests = [];\r\n\t\tvm.countAllData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCountAll = doCountAll;\r\n\t\t//test the countAll on confirm event\r\n\t\tCommentChannel.subCountAllConfirmed($scope, subCountAllConfirmedCallback);\r\n\t\t//test the countAll on failed event\r\n\t    CommentChannel.subCountAllFailed($scope, subCountAllFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\r\n\t    //countNew request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.countNewRequests = [];\r\n\t\tvm.countNewData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCountNew = doCountNew;\r\n\t\t//test the countNew on confirm event\r\n\t\tCommentChannel.subCountNewConfirmed($scope, subCountNewConfirmedCallback);\r\n\t\t//test the countNew on failed event\r\n\t    CommentChannel.subCountNewFailed($scope, subCountNewFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('comment retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('comment retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\r\n\t\t\tif(createForm.$valid) {\t\r\n\t\t\t\t\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedCreateData = angular.extend({}, vm.createData);\r\n\t\t\t\tformatedCreateData.comment_body = DrupalHelperService.structureField({'value' : formatedCreateData.comment_body_value});\r\n\t\t\t\tdelete formatedCreateData.comment_body_value;\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tCommentResource.create(formatedCreateData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('comment create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('comment create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedUpdateData = angular.extend({}, vm.updateData);\r\n\t\t\t\tformatedUpdateData.comment_body = DrupalHelperService.structureField({'value' : formatedUpdateData.comment_body_value});\r\n\t\t\t\tdelete formatedUpdateData.comment_body_value;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.update(formatedUpdateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('comment update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('comment update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('comment delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('comment delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('comment index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('comment index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//countAll request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCountAll(countAllForm) {\r\n\t\t\tconsole.log(countAllForm, vm.countAllData);\r\n\t\t\tif(countAllForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.countAll(vm.countAllData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('comment countAll success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('comment countAll error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCountAllConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountAllConfirmed'); \r\n\t\t\tvm.countAllRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCountAllFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountAllFailed'); \r\n\t\t\tvm.countAllRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//countAll request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCountNew(countNewForm) {\r\n\t\t\tif(countNewForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tCommentResource.countNew(vm.countNewData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('comment countNew success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('comment countNew error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCountNewConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountNewConfirmed'); \r\n\t\t\tvm.countNewRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCountNewFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCountNewFailed'); \r\n\t\t\tvm.countNewRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.comment.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.comment.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\tconsole.log(\"Comment configFunction\"); \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.comment', {\r\n            url: \"/comment\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'comment' : {\r\n\t\t\t        templateUrl: './app/components/comment/comment.view.html',\r\n\t\t\t        controller: 'CommentController',\r\n\t\t\t        controllerAs : 'comment'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.countAll', {\r\n            url: \"/countAll\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'countAll' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/countAll.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.comment.countNew', {\r\n            url: \"/countNew\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'countNew' : {\r\n\t\t\t        templateUrl: './app/components/comment/templates/countNew.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.system.controller', ['d7-services.resources.system.resource', 'd7-services.resources.system.channel'])\r\n    .controller('SystemController', SystemController);\r\n\r\n\tSystemController.$inject = ['$scope', 'SystemResource', 'SystemChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction SystemController($scope, SystemResource, SystemChannel) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t\r\n\t\t//connect request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.connectRequests = [];\r\n\t\t//test request\r\n\t\tvm.doConncet = doConncet;\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subConnectConfirmed($scope, subConnectConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t    SystemChannel.subConnectFailed($scope, subConnectFailedCallback);\r\n\t    \r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //get_variable request\r\n\t\t\r\n\t    //store requests\r\n\t\tvm.getVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doGetVariable = doGetVariable;\r\n\t\tvm.getVariableData = {\r\n\t\t\t\t   name : '',\r\n\t\t\t\t   default : ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subGetVariableConfirmed($scope, subGetVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subGetVariableFailed($scope, subGetVariableFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t//set_variable request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.setVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doSetVariable = doSetVariable;\r\n\t\tvm.setVariableData = {\r\n\t\t\t\t   name \t: '',\r\n\t\t\t\t   value \t: ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subSetVariableConfirmed($scope, subSetVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subSetVariableFailed($scope, subSetVariableFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t\t\r\n\t\t//del_variable request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.delVariableRequests = [];\r\n\t\t//test request\r\n\t\tvm.doDelVariable = doDelVariable;\r\n\t\tvm.delVariableData = {\r\n\t\t\t\t   name \t: ''\r\n\t\t};\r\n\t\t//test the connect on confirm event\r\n\t\tSystemChannel.subDelVariableConfirmed($scope, subDelVariableConfirmedCallback);\r\n\t\t//test the connect on failed event\r\n\t\tSystemChannel.subDelVariableFailed($scope, subDelVariableFailedCallback);\r\n\t\t\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//connect request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doConncet(connectForm) {\r\n\t\t\t\r\n\t\t\tif(connectForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tSystemResource.connect()\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//connect success\r\n\t\t\t\t    \t\tfunction(data) { console.log('system connect success', data); },\r\n\t\t\t\t    \t\t//connect error\r\n\t\t\t\t    \t\tfunction(data) { console.log('system connect error'); }\r\n\t\t\t\t    );\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t//confirm callback\r\n\t\tfunction subConnectConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subConnectConfirmed'); \r\n\t\t\tvm.connectRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subConnectFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subConnectFailed'); \r\n\t\t\tvm.connectRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//get_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doGetVariable(getVariableForm) {\r\n\t\t\tif(getVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.get_variable(vm.getVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system get_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system get_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subGetVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subGetVariableConfirmed'); \r\n\t\t   vm.getVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subGetVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subGetVariableFailed');\r\n\t\t   vm.getVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t   };\r\n\t\t\r\n\t   //_____________________________________________________________________________________________________________________________________________\r\n\t   \r\n\t   //set_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doSetVariable(setVariableForm) {\r\n\t\t\tif(setVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.set_variable(vm.setVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system set_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system set_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subSetVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subSetVariableConfirmed'); \r\n\t\t   vm.setVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subSetVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subSetVariableFailed');\r\n\t\t   vm.setVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t   \r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t  \r\n\t\t//del_variable request\r\n\t\t\r\n\t\t//do request\r\n\t\tfunction doDelVariable(delVariableForm) {\r\n\t\t\tif(delVariableForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tSystemResource.del_variable(vm.delVariableData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t    \t//get_variable success\r\n\t\t\t\t    \tfunction(data) { console.log('system del_variable success'); },\r\n\t\t\t\t    \t//get_variable error\r\n\t\t\t\t    \tfunction(data) { console.log('system del_variable error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t//confirm callback\r\n\t\tfunction subDelVariableConfirmedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subDelVariableConfirmed'); \r\n\t\t   vm.delVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t//failed callback\r\n\t\tfunction subDelVariableFailedCallback(data) { \r\n\t\t   requestEnd = Date.now();\r\n\t\t   console.log('subDelVariableFailed');\r\n\t\t   vm.delVariableRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t};\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.system.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.system.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.system', {\r\n            url: \"/system\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'system' : {\r\n\t\t\t        templateUrl: './app/components/system/system.view.html',\r\n\t\t\t        controller: 'SystemController',\r\n\t\t\t        controllerAs : 'system'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.system.connect', {\r\n            url: \"/connect\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'connect' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/connect.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n       .state('app.services_3x.system.get_variable', {\r\n            url: \"/get_variable\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getVariable' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/getVariable.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.system.set_variable', {\r\n            url: \"/set_variables\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'setVariable' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/setVariable.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.system.del_variable', {\r\n            url: \"/del_variable\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delVariable' : {\r\n\t\t\t        templateUrl: './app/components/system/templates/delVariable.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.user.controller', ['d7-services.resources.user.resource', 'd7-services.resources.user.channel', 'd7-services.commons.helperService'])\r\n    .controller('UserController', UserController);\r\n\r\n\tUserController.$inject = ['$scope', 'UserResource', 'UserChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction UserController($scope, UserResource, UserChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tUserChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    UserChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //login request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.loginRequests = [];\r\n\t\tvm.loginData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doLogin = doLogin;\r\n\t\t//test the login on confirm event\r\n\t\tUserChannel.subLoginConfirmed($scope, subLoginConfirmedCallback);\r\n\t\t//test the login on failed event\r\n\t    UserChannel.subLoginFailed($scope, subLoginFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //logout request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.logoutRequests = [];\r\n\r\n\t\t//test request and event callbacks\r\n\t\tvm.doLogout = doLogout;\r\n\t\t//test the token on confirm event\r\n\t\tUserChannel.subLogoutConfirmed($scope, subLogoutConfirmedCallback);\r\n\t\t//test the token on failed event\r\n\t    UserChannel.subLogoutFailed($scope, subLogoutFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //token request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.tokenRequests = [];\r\n\r\n\t\t//test request and event callbacks\r\n\t\tvm.doToken = doToken;\r\n\t\t//test the token on confirm event\r\n\t\tUserChannel.subTokenConfirmed($scope, subTokenConfirmedCallback);\r\n\t\t//test the token on failed event\r\n\t    UserChannel.subTokenFailed($scope, subTokenFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tUserChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    UserChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tUserChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    UserChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tuid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tUserChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    UserChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tUserChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    UserChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //register request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.registerRequests = [];\r\n\t\tvm.registerData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRegister = doRegister;\r\n\t\t//test the register on confirm event\r\n\t\tUserChannel.subRegisterConfirmed($scope, subRegisterConfirmedCallback);\r\n\t\t//test the register on failed event\r\n\t    UserChannel.subRegisterFailed($scope, subRegisterFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //resendWelcomeEmail request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.resendWelcomeEmailRequests = [];\r\n\t\tvm.resendWelcomeEmailData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doResendWelcomeEmail = doResendWelcomeEmail;\r\n\t\t//test the register on confirm event\r\n\t\tUserChannel.subResendWelcomeEmailConfirmed($scope, subResendWelcomeEmailConfirmedCallback);\r\n\t\t//test the register on failed event\r\n\t    UserChannel.subResendWelcomeEmailFailed($scope, subResendWelcomeEmailFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //cancel request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.cancelRequests = [];\r\n\t\tvm.cancelData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCancel = doCancel;\r\n\t\t//test the cancel on confirm event\r\n\t\tUserChannel.subCancelConfirmed($scope, subCancelConfirmedCallback);\r\n\t\t//test the cancel on failed event\r\n\t    UserChannel.subCancelFailed($scope, subCancelFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //passwordReset request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.passwordResetRequests = [];\r\n\t\tvm.passwordResetData = {\r\n\t\t\t\tname : 's',\r\n\t\t\t\tpass: 's',\r\n\t\t\t\tmail : 's@s.at'\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doPasswordReset = doPasswordReset;\r\n\t\t//test the passwordReset on confirm event\r\n\t\tUserChannel.subPasswordResetConfirmed($scope, subPasswordResetConfirmedCallback);\r\n\t\t//test the passwordReset on failed event\r\n\t    UserChannel.subPasswordResetFailed($scope, subPasswordResetFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //requestNewPassword request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.requestNewPasswordRequests = [];\r\n\t\tvm.requestNewPasswordData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRequestNewPassword = doRequestNewPassword;\r\n\t\t//test the requestNewPassword on confirm event\r\n\t\tUserChannel.subRequestNewPasswordConfirmed($scope, subRequestNewPasswordConfirmedCallback);\r\n\t\t//test the requestNewPassword on failed event\r\n\t    UserChannel.subRequestNewPasswordFailed($scope, subRequestNewPasswordFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    \r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('user retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('user retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//login request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogin(loginForm) {\r\n\t\t\tif(loginForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.login(vm.loginData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//login success\r\n\t\t\t    \t\tfunction(data) { console.log('user login success'); },\r\n\t\t\t    \t\t//login error\r\n\t\t\t    \t\tfunction(data) { console.log('user login error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subLoginConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginConfirmed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subLoginFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLoginFailed'); \r\n\t\t\tvm.loginRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//logout request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doLogout(logoutForm) {\r\n\t\t\tif(logoutForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.logout(vm.logoutData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//logout success\r\n\t\t\t    \t\tfunction(data) { console.log('user logout success'); },\r\n\t\t\t    \t\t//logout error\r\n\t\t\t    \t\tfunction(data) { console.log('user logout error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subLogoutConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutConfirmed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subLogoutFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subLogoutFailed'); \r\n\t\t\tvm.logoutRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//token request\r\n\t    \r\n\t    //do token\r\n\t\tfunction doToken(tokenForm) {\r\n\t\t\tif(tokenForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.token(vm.tokenData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//token success\r\n\t\t\t    \t\tfunction(data) { console.log('user token success'); },\r\n\t\t\t    \t\t//token error\r\n\t\t\t    \t\tfunction(data) { console.log('user token error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subTokenConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subTokenConfirmed'); \r\n\t\t\tvm.tokenRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subTokenFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subTokenFailed'); \r\n\t\t\tvm.tokenRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\t\tconsole.log('SDF'); \r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\tconsole.log('SDF');\r\n\t\t\t\t//format fields\r\n\t\t\t\tvm.createData.field_nickname = DrupalHelperService.structureField(vm.createData.field_nickname);\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tUserResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('user create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('user create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t//format fields\r\n\t\t\t\tvm.updateData.field_nickname = DrupalHelperService.structureField(vm.createData.field_nickname);\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('user update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('user update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('user delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('user delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('user index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('user index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//register request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRegister(registerForm) {\r\n\t\t\tif(registerForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.register(vm.registerData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('user register success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('user register error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRegisterConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRegisterConfirmed'); \r\n\t\t\tvm.registerRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRegisterFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRegisterFailed'); \r\n\t\t\tvm.registerRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//resendWelcomeEmail request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doResendWelcomeEmail(resendWelcomeEmailForm) {\r\n\t\t\tif(resendWelcomeEmailForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tUserResource.resendWelcomeEmail(vm.resendWelcomeEmailData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//resendWelcomeEmail success\r\n\t\t\t    \t\tfunction(data) { console.log('user resendWelcomeEmail success'); },\r\n\t\t\t    \t\t//resendWelcomeEmail error\r\n\t\t\t    \t\tfunction(data) { console.log('user resendWelcomeEmail error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subResendWelcomeEmailConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subResendWelcomeEmailConfirmed'); \r\n\t\t\tvm.resendWelcomeEmailRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subResendWelcomeEmailFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subResendWelcomeEmailFailed'); \r\n\t\t\tvm.resendWelcomeEmailRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//cancel request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doCancel() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.cancel(vm.cancelData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//cancel success\r\n\t\t    \t\tfunction(data) { console.log('user cancel success'); },\r\n\t\t    \t\t//cancel error\r\n\t\t    \t\tfunction(data) { console.log('user cancel error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCancelConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCancelConfirmed'); \r\n\t\t\tvm.cancelRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCancelFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCancelFailed'); \r\n\t\t\tvm.cancelRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//passwordReset request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doPasswordReset() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.passwordReset(vm.passwordResetData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//passwordReset success\r\n\t\t    \t\tfunction(data) { console.log('user passwordReset success'); },\r\n\t\t    \t\t//passwordReset error\r\n\t\t    \t\tfunction(data) { console.log('user passwordReset error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subPasswordResetConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subPasswordResetConfirmed'); \r\n\t\t\tvm.passwordResetRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subPasswordResetFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subPasswordResetFailed'); \r\n\t\t\tvm.passwordResetRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//requestNewPassword request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRequestNewPassword() {\r\n\t\t\trequestStart = Date.now();\r\n\t   \t\tUserResource.requestNewPassword(vm.requestNewPasswordData)\r\n\t\t\t    .then(\r\n\t\t    \t\t//passwordReset success\r\n\t\t    \t\tfunction(data) { console.log('user requestNewPassword success'); },\r\n\t\t    \t\t//passwordReset error\r\n\t\t    \t\tfunction(data) { console.log('user requestNewPassword error'); }\r\n\t\t\t    );\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRequestNewPasswordConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRequestNewPasswordConfirmed'); \r\n\t\t\tvm.requestNewPasswordRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRequestNewPasswordFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRequestNewPasswordFailed'); \r\n\t\t\tvm.requestNewPasswordRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.user.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.user.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.user', {\r\n            url: \"/user\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'user' : {\r\n\t\t\t        templateUrl: './app/components/user/user.view.html',\r\n\t\t\t        controller: 'UserController',\r\n\t\t\t        controllerAs : 'user'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.register', {\r\n            url: \"/register\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'register' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/register.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.resend_welcome_email', {\r\n            url: \"/resend_welcome_email\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'resendWelcomeEmail' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/resendWelcomeEmail.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.cancel', {\r\n            url: \"/cancel\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'cancel' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/cancel.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.password_reset', {\r\n            url: \"/password_reset\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'passwordReset' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/passwordReset.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.request_new_password', {\r\n            url: \"/request_new_password\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'requestNewPassword' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/requestNewPassword.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.login', {\r\n            url: \"/login\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'login' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/login.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.logout', {\r\n            url: \"/logout\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'logout' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/logout.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.user.token', {\r\n            url: \"/token\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'token' : {\r\n\t\t\t        templateUrl: './app/components/user/templates/token.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.node.controller', ['d7-services.resources.node.resource', 'd7-services.resources.node.channel', 'd7-services.commons.helperService'])\r\n    .controller('NodeController', NodeController);\r\n\r\n\tNodeController.$inject = ['$scope', 'NodeResource', 'NodeChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction NodeController($scope, NodeResource, NodeChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\tvm.descriptionColapsed = true;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tNodeChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    NodeChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tNodeChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    NodeChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tNodeChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    NodeChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tNodeChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    NodeChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //files request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.filesRequests = [];\r\n\t\tvm.filesErrors = {}\r\n\t\tvm.filesData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doFiles = doFiles;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subFilesConfirmed($scope, subFilesConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subFilesFailed($scope, subFilesFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //comments request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.commentsRequests = [];\r\n\t\tvm.commentsErrors = {}\r\n\t\tvm.commentsData = {\r\n\t\t\t\tnid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doComments = doComments;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subCommentsConfirmed($scope, subCommentsConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subCommentsFailed($scope, subCommentsFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //attachFile request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.attachFileRequests = [];\r\n\t\tvm.attachFileErrors = {}\r\n\t\tvm.attachFileData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doAttachFile = doAttachFile;\r\n\t\t//test the delete on confirm event\r\n\t\tNodeChannel.subAttachFileConfirmed($scope, subAttachFileConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    NodeChannel.subAttachFileFailed($scope, subAttachFileFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('node retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('node retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\t\r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedCreateData = angular.extend({}, vm.createData);\r\n\t\t\t\tformatedCreateData.body = DrupalHelperService.structureField({'value' : formatedCreateData.body_value, 'summary' : formatedCreateData.body_summary});\r\n\t\t\t\tdelete formatedCreateData.body_value;\r\n\t\t\t\tdelete formatedCreateData.body_summary;\r\n\t\t\t\t\r\n\t\t\t\tformatedCreateData.field_custom_field = DrupalHelperService.structureField({'value' : formatedCreateData.field_custom_field});\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tNodeResource.create(formatedCreateData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('node create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('node create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\t//format fields\r\n\t\t\t\tvar formatedUpdateData = angular.extend({}, vm.updateData);\r\n\t\t\t\tformatedUpdateData.body = DrupalHelperService.structureField({'value' : formatedUpdateData.body_value, 'summary' : formatedUpdateData.body_summary});\r\n\t\t\t\tdelete formatedUpdateData.body_value;\r\n\t\t\t\tdelete formatedUpdateData.body_summary;\r\n\t\t\t\t\r\n\t\t\t\tformatedUpdateData.field_custom_field = DrupalHelperService.structureField({'value' : formatedUpdateData.field_custom_field});\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.update(formatedUpdateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('node update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('node update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('node delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('node delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('node index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('node index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//files request\r\n\t    \r\n\t    //do files\r\n\t\tfunction doFiles(filesForm) {\r\n\t\t\tif(filesForm.$valid) {\r\n\t\t\t\tconsole.log('SADF'); \r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.files(vm.filesData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//files success\r\n\t\t\t    \t\tfunction(data) { console.log('node files success'); },\r\n\t\t\t    \t\t//files error\r\n\t\t\t    \t\tfunction(data) { console.log('node files error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subFilesConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subFilesConfirmed'); \r\n\t\t\tvm.filesRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subFilesFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subFilesFailed'); \r\n\t\t\tvm.filesRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//comments request\r\n\r\n\t\t//do comments\r\n\t\tfunction doComments(commentsForm) {\r\n\t\t\tif(commentsForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tNodeResource.comments(vm.commentsData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//comments success\r\n\t\t\t    \t\tfunction(data) { console.log('node comments success'); },\r\n\t\t\t    \t\t//comments error\r\n\t\t\t    \t\tfunction(data) { console.log('node comments error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//confirm callback\r\n\t\tfunction subCommentsConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCommentsConfirmed'); \r\n\t\t\tvm.commentsRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCommentsFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCommentsFailed'); \r\n\t\t\tvm.commentsRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//attachFile request\r\n\r\n\t\t//do attachFile\r\n\t\tfunction doAttachFile(attachFileForm) {\r\n\t\t\tif(attachFileForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t \t\tNodeResource.attachFile(vm.attachFileData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//attachFile success\r\n\t\t\t    \t\tfunction(data) { console.log('node attachFile success'); },\r\n\t\t\t    \t\t//attachFile error\r\n\t\t\t    \t\tfunction(data) { console.log('node attachFile error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//confirm callback\r\n\t\tfunction subAttachFileConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAttachFileConfirmed'); \r\n\t\t\tvm.attachFileRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subAttachFileFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subAttachFileFailed'); \r\n\t\t\tvm.attachFileRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.node.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.node.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.node', {\r\n            url: \"/node\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'node' : {\r\n\t\t\t        templateUrl: './app/components/node/node.view.html',\r\n\t\t\t        controller: 'NodeController',\r\n\t\t\t        controllerAs : 'node'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.files', {\r\n            url: \"/files\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'files' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/files.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.comments', {\r\n            url: \"/comments\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'comments' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/comments.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.node.attach_file', {\r\n            url: \"/attachFile\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'attachFile' : {\r\n\t\t\t        templateUrl: './app/components/node/templates/attachFile.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.file.controller', ['d7-services.resources.file.resource', 'd7-services.resources.file.channel', 'd7-services.commons.helperService'])\r\n    .controller('FileController', FileController);\r\n\r\n\tFileController.$inject = ['$scope', 'FileResource', 'FileChannel', 'DrupalHelperService'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction FileController($scope, FileResource, FileChannel, DrupalHelperService) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\tvm.descriptionColapsed = true;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tfid : '',\r\n\t\t\t\tfile_contents : '',\r\n\t\t\t\timage_styles : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tFileChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    FileChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\t\r\n\t\tvm.createData = {};\r\n\t\tvm.createData.file = \"R0lGODlhEAAQAMQAAORHHOVSKudfOulrSOp3WOyDZu6QdvCchPGolfO0o/XBs/fNwfjZ0frl3/zy7////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAkAABAALAAAAAAQABAAAAVVICSOZGlCQAosJ6mu7fiyZeKqNKToQGDsM8hBADgUXoGAiqhSvp5QAnQKGIgUhwFUYLCVDFCrKUE1lBavAViFIDlTImbKC5Gm2hB0SlBCBMQiB0UjIQA7\";\r\n\t\tvm.createData.filename = 'drupal.jpg';\r\n\t\tvm.createData.filesize = vm.createData.file.length;\r\n\t\tvm.createData.filepath = 'content/node/20/';\r\n\t\tvm.createData.filemime = \"image/jpeg\",\r\n\t\tvm.createData.image_file_name = 'drupal image';\r\n\t\t\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tFileChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    FileChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tfid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tFileChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    FileChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tFileChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    FileChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //createRaw request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRawRequests = [];\r\n\t\tvm.createRawErrors = {}\r\n\t\t\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreateRaw = doCreateRaw;\r\n\t\t//test the delete on confirm event\r\n\t\tFileChannel.subCreateRawConfirmed($scope, subCreateRawConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    FileChannel.subCreateRawFailed($scope, subCreateRawFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('file retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('file retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\r\n\t\t\tif(createForm.$valid) {\r\n\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tFileResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('file create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('file create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('file delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('file delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('file index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('file index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//createRaw request\r\n\t    \r\n\t    //do createRaw\r\n\t\tfunction doCreateRaw(createRawForm) {\r\n\t\t\tif(createRawForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tFileResource.createRaw(vm.createRawData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//createRaw success\r\n\t\t\t    \t\tfunction(data) { console.log('file createRaw success'); },\r\n\t\t\t    \t\t//createRaw error\r\n\t\t\t    \t\tfunction(data) { console.log('file createRaw error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateRawConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.createRawRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateRawFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.createRawRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.file.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.file.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.file', {\r\n            url: \"/file\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'file' : {\r\n\t\t\t        templateUrl: './app/components/file/file.view.html',\r\n\t\t\t        controller: 'FileController',\r\n\t\t\t        controllerAs : 'file'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.file.createRaw', {\r\n            url: \"/create_raw\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'createRaw' : {\r\n\t\t\t        templateUrl: './app/components/file/templates/createRaw.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_term.controller', ['d7-services.resources.taxonomy_term.resource', 'd7-services.resources.taxonomy_term.channel'])\r\n    .controller('TaxonomyTermController', TaxonomyTermController);\r\n\r\n\tTaxonomyTermController.$inject = ['$scope', 'TaxonomyTermResource', 'TaxonomyTermChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction TaxonomyTermController($scope, TaxonomyTermResource, TaxonomyTermChannel) { \r\n\t\tconsole.log('TaxonomyTermController'); \r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {\r\n\t\t\t\tuid : ''\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tTaxonomyTermChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    TaxonomyTermChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tTaxonomyTermChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    TaxonomyTermChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tTaxonomyTermChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    TaxonomyTermChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {\r\n\t\t\t\tuid : '',\r\n\t\t};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tTaxonomyTermChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    TaxonomyTermChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tTaxonomyTermChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    TaxonomyTermChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //selectNodes request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.selectNodesRequests = [];\r\n\t\tvm.selectNodesData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doSelectNodes = doSelectNodes;\r\n\t\t//test the selectNodes on confirm event\r\n\t\tTaxonomyTermChannel.subSelectNodesConfirmed($scope, subSelectNodesConfirmedCallback);\r\n\t\t//test the selectNodes on failed event\r\n\t    TaxonomyTermChannel.subSelectNodesFailed($scope, subSelectNodesFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\r\n\t\t\tif(createForm.$valid) {\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tTaxonomyTermResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_term create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_term create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\t\r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//selectNodes request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doSelectNodes(selectNodesForm) {\r\n\t\t\t\r\n\t\t\tif(selectNodesForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyTermResource.selectNodes(vm.selectNodesData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term selectNodes success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_term selectNodes error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subSelectNodesConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subSelectNodesConfirmed'); \r\n\t\t\tvm.selectNodesRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subSelectNodesFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subSelectNodesFailed'); \r\n\t\t\tvm.selectNodesRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_term.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.taxonomy_term.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\tconsole.log(\"TaxonomyTerm configFunction\"); \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.taxonomy_term', {\r\n            url: \"/taxonomy_term\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'taxonomy_term' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/taxonomy_term.view.html',\r\n\t\t\t        controller: 'TaxonomyTermController',\r\n\t\t\t        controllerAs : 'taxonomy_term'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_term.selectNodes', {\r\n            url: \"/selectNodes\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'selectNodes' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_term/templates/selectNodes.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_vocabulary.controller', ['d7-services.resources.taxonomy_vocabulary.resource', 'd7-services.resources.taxonomy_vocabulary.channel'])\r\n    .controller('TaxonomyVocabularyController', TaxonomyVocabularyController);\r\n\r\n\tTaxonomyVocabularyController.$inject = ['$scope', 'TaxonomyVocabularyResource', 'TaxonomyVocabularyChannel'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction TaxonomyVocabularyController($scope, TaxonomyVocabularyResource, TaxonomyVocabularyChannel) { \r\n\t\tconsole.log('TaxonomyVocabularyController'); \r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.retrieveRequests = [];\r\n\t\tvm.retrieveData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tTaxonomyVocabularyChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    TaxonomyVocabularyChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //create request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.createRequests = [];\r\n\t\tvm.createData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doCreate = doCreate;\r\n\t\t//test the create on confirm event\r\n\t\tTaxonomyVocabularyChannel.subCreateConfirmed($scope, subCreateConfirmedCallback);\r\n\t\t//test the create on failed event\r\n\t    TaxonomyVocabularyChannel.subCreateFailed($scope, subCreateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //update request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.updateRequests = [];\r\n\t\tvm.updateData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doUpdate = doUpdate;\r\n\t\t//test the update on confirm event\r\n\t\tTaxonomyVocabularyChannel.subUpdateConfirmed($scope, subUpdateConfirmedCallback);\r\n\t\t//test the update on failed event\r\n\t    TaxonomyVocabularyChannel.subUpdateFailed($scope, subUpdateFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //delete request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.deleteRequests = [];\r\n\t\tvm.deleteErrors = {}\r\n\t\tvm.deleteData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doDelete = doDelete;\r\n\t\t//test the delete on confirm event\r\n\t\tTaxonomyVocabularyChannel.subDeleteConfirmed($scope, subDeleteConfirmedCallback);\r\n\t\t//test the delete on failed event\r\n\t    TaxonomyVocabularyChannel.subDeleteFailed($scope, subDeleteFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //index request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.indexRequests = [];\r\n\t\tvm.indexData = {};\r\n\t    vm.indexData.page = 0;\r\n\t    vm.indexData.fields = {};\r\n\t    vm.indexData.parameters = {};\r\n\t    vm.indexData.pagesize = 5;\r\n\t\t\r\n\t    vm.indexFieldsColapsed = true;\r\n\t    vm.indexParametersColapsed = true;\r\n\t\t//test request and event callbacks\r\n\t\tvm.doIndex = doIndex;\r\n\t\t//test the index on confirm event\r\n\t\tTaxonomyVocabularyChannel.subIndexConfirmed($scope, subIndexConfirmedCallback);\r\n\t\t//test the index on failed event\r\n\t    TaxonomyVocabularyChannel.subIndexFailed($scope, subIndexFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\t    \r\n\t    //getTree request\r\n\t\t\r\n\t\t//store requests\r\n\t\tvm.getTreeRequests = [];\r\n\t\tvm.getTreeData = {};\r\n\t\t//test request and event callbacks\r\n\t\tvm.doGetTree = doGetTree;\r\n\t\t//test the getTree on confirm event\r\n\t\tTaxonomyVocabularyChannel.subGetTreeConfirmed($scope, subGetTreeConfirmedCallback);\r\n\t\t//test the getTree on failed event\r\n\t    TaxonomyVocabularyChannel.subGetTreeFailed($scope, subGetTreeFailedCallback);\r\n\r\n\t    //__________________________________________________________________________________________________\r\n\r\n\t    \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\tconsole.log(vm.retrieveData); \r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//retrieve success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary retrieve success'); },\r\n\t\t\t    \t\t//retrieve error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary retrieve error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\r\n\t\t//create request\r\n\t    \r\n\t    //do create\r\n\t\tfunction doCreate(createForm) {\r\n\t\r\n\t\t\tif(createForm.$valid) {\t\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tTaxonomyVocabularyResource.create(vm.createData)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t//create success\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_vocabulary create success'); },\r\n\t\t\t\t\t\t//create error\r\n\t\t\t\t\t\tfunction(data) { console.log('taxonomy_vocabulary create error'); }\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subCreateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateConfirmed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subCreateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subCreateFailed'); \r\n\t\t\tvm.createRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//update request\r\n\t    \r\n\t    //do update\r\n\t\tfunction doUpdate(updateForm) {\t\t\r\n\t\t\tconsole.log(updateForm); \r\n\t\t\tif(updateForm.$valid) {\r\n\t\t\t\tconsole.log(updateForm); \r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.update(vm.updateData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//update success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary update success'); },\r\n\t\t\t    \t\t//update error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary update error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subUpdateConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateConfirmed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subUpdateFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subUpdateFailed'); \r\n\t\t\tvm.updateRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//delete request\r\n\t    \r\n\t    //do delete\r\n\t\tfunction doDelete(deleteForm) {\r\n\t\t\tif(deleteForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.delete(vm.deleteData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//delete success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary delete success'); },\r\n\t\t\t    \t\t//delete error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary delete error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subDeleteConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subDeleteConfirmed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subDeleteFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tvm.deleteErrors = data;\r\n\t\t\tconsole.log('subDeleteFailed'); \r\n\t\t\tvm.deleteRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//index request\r\n\t    \r\n\t    //do index\r\n\t\tfunction doIndex(indexForm) {\r\n\t\t\tif(indexForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.index(vm.indexData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//index success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary index success'); },\r\n\t\t\t    \t\t//index error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary index error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subIndexConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexConfirmed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subIndexFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subIndexFailed'); \r\n\t\t\tvm.indexRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\t\t\r\n\t\t//getTree request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doGetTree(getTreeForm) {\r\n\t\t\t\r\n\t\t\tif(getTreeForm.$valid) {\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t   \t\tTaxonomyVocabularyResource.getTree(vm.getTreeData)\r\n\t\t\t\t    .then(\r\n\t\t\t    \t\t//register success\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary getTree success'); },\r\n\t\t\t    \t\t//register error\r\n\t\t\t    \t\tfunction(data) { console.log('taxonomy_vocabulary getTree error'); }\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//confirm callback\r\n\t\tfunction subGetTreeConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subGetTreeConfirmed'); \r\n\t\t\tvm.getTreeRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subGetTreeFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subGetTreeFailed'); \r\n\t\t\tvm.getTreeRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n})();",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.taxonomy_vocabulary.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.taxonomy_vocabulary.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\tconsole.log(\"TaxonomyVocabulary configFunction\"); \r\n\r\n\t    $stateProvider\r\n        .state('app.services_3x.taxonomy_vocabulary', {\r\n            url: \"/taxonomy_vocabulary\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'taxonomy_vocabulary' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/taxonomy_vocabulary.view.html',\r\n\t\t\t        controller: 'TaxonomyVocabularyController',\r\n\t\t\t        controllerAs : 'taxonomy_vocabulary'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.create', {\r\n            url: \"/create\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'create' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/create.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.update', {\r\n            url: \"/update\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'update' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/update.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.delete', {\r\n            url: \"/delete\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'delete' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/delete.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.index', {\r\n            url: \"/index\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'index' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/index.html'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        .state('app.services_3x.taxonomy_vocabulary.getTree', {\r\n            url: \"/getTree\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'getTree' : {\r\n\t\t\t        templateUrl: './app/components/taxonomy_vocabulary/templates/getTree.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.views.controller', ['d7-services.resources.views.resource', 'd7-services.resources.views.channel', 'd7-services.resources.views.operatorsConstant'])\r\n    .controller('ViewsController', ViewsController);\r\n\r\n\tViewsController.$inject = ['$scope','ViewsResource', 'ViewsChannel', 'ViewsOperatorsConstant'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction ViewsController($scope, ViewsResource, ViewsChannel, ViewsOperatorsConstant) { \r\n\t\t\r\n\t\tvar requestEnd = 0;\r\n\t\tvar requestStart = 0;\r\n\t\t\r\n\t\t// jshint validthis: true \r\n\t\tvar vm = this;\r\n\t\t\r\n\t\t//operator constants\r\n\t\tvm.filters = ViewsOperatorsConstant.filter_operators;\r\n\t\tvm.sorts = ViewsOperatorsConstant.sort_operators;\r\n\t\t\r\n\t\t//retrieve request\r\n\t\tvm.retrieveRequests = [];\r\n\t\t\r\n\t\tvm.retrieveData = {};\r\n\t\tvm.retrieveData.view_name = 'testview';\r\n\t\t\r\n\t\t//vm.retrieveData.display_id = 'page';\r\n\t\t//vm.retrieveData.args = \"args\";\r\n\t\t//vm.retrieveData.offset = 1;\r\n\t\t//vm.retrieveData.limit = 1;\r\n\t\t//vm.retrieveData.format_output = false;\r\n\t\t\r\n\t\tvm.retrieveData.exposed_sorts = {};\r\n\t\t//vm.retrieveData.exposed_sorts.sort_order = vm.sorts.asc;\r\n\t\t//vm.retrieveData.exposed_sorts.sort_by = \"created\";\r\n\t\t\r\n\t\tvm.retrieveData.exposed_filters = {};\r\n\t\t//vm.retrieveData.exposed_filters.nid = 20;\r\n\t\t\r\n\t\t//vm.retrieveData.exposed_filters.comment_count_op = vm.filters.is_less_than;\r\n\t\t\r\n\t\t//vm.retrieveData.exposed_filters.comment_count = {};\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.value = 1;\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.min = 1;\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.max = 1;\r\n\t\t//vm.retrieveData.exposed_filters.comment_count.regular_expression = 'a regex here';\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvm.exposed_filtersCollapsed = true;\r\n\t\tvm.exposed_sortsCollapsed = true;\r\n\t\t\r\n\t\t\r\n\t\t//test request\r\n\t\tvm.doRetrieve = doRetrieve;\r\n\t\t//test the retrieve on confirm event\r\n\t\tViewsChannel.subRetrieveConfirmed($scope, subRetrieveConfirmedCallback);\r\n\t\t//test the retrieve on failed event\r\n\t    ViewsChannel.subRetrieveFailed($scope, subRetrieveFailedCallback);\r\n\t    \r\n\t    //__________________________________________________________________________________________________\r\n  \r\n\t\t///////////////////////\r\n\t\t\r\n\t\t//retrieve request\r\n\t    \r\n\t    //do request\r\n\t\tfunction doRetrieve(retrieveForm) {\r\n\t\t\t\r\n\t\t\tif(retrieveForm.$valid) {\r\n\t\t\t\t\r\n\t\t\t\t//prepare exposed_filters data for request\r\n\t\t\t\t//normally you use just the fields you need in vm.retrieveData\r\n\t\t\t\tif( vm.retrieveData.exposed_filters.comment_count_op === vm.filters.regular_expression || \r\n\t\t\t\t\tvm.retrieveData.exposed_filters.comment_count_op === vm.filters.is_between ||\r\n\t\t\t\t\tvm.retrieveData.exposed_filters.comment_count_op === vm.filters.is_not_between ) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.value;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( vm.retrieveData.exposed_filters.comment_count_op === vm.filters.regular_expression ) {\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.min;\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( vm.retrieveData.exposed_filters.comment_count_op === vm.filters.is_between || \r\n\t\t\t\t\t\tvm.retrieveData.exposed_filters.comment_count_op    === vm.filters.is_not_between) {\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.regular_expression;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} \r\n\t\t\t\telse if(vm.retrieveData.exposed_filters.comment_count) {\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.min;\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.max;\r\n\t\t\t\t\t\tdelete vm.retrieveData.exposed_filters.comment_count.regular_expression;\r\n\t\t\t\t};\r\n\r\n\t\t\t\trequestStart = Date.now();\r\n\t\t\t\tViewsResource.retrieve(vm.retrieveData)\r\n\t\t\t\t    .then(\r\n\t\t\t\t    \t\t//retrieve success\r\n\t\t\t\t    \t\tfunction(data) { console.log('views retrieve success', data); },\r\n\t\t\t\t    \t\t//retrieve error\r\n\t\t\t\t    \t\tfunction(error) { console.log('views retrieve error', error); }\r\n\t\t\t\t    );\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t//confirm callback\r\n\t\tfunction subRetrieveConfirmedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveConfirmed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd, requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t//failed callback\r\n\t\tfunction subRetrieveFailedCallback(data) { \r\n\t\t\trequestEnd = Date.now();\r\n\t\t\tconsole.log('subRetrieveFailed'); \r\n\t\t\tvm.retrieveRequests.push({requestStart:requestStart, requestEnd:requestEnd,  requestDuration:requestEnd-requestStart, data:data});\r\n\t\t}\r\n\t\t\r\n\t\t//_____________________________________________________________________________________________________________________________________________\r\n\r\n\t};\r\n\t\r\n\t\r\n\r\n})();\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.views.states', ['ui.router','ct.ui.router.extras','ngDrupalServicesTests.views.controller'])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider) \r\n\t{ \r\n\r\n\t    $stateProvider\r\n        .state('app.services_views.views', {\r\n            url: \"/views\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'views' : {\r\n\t\t\t        templateUrl: './app/components/views/views.view.html',\r\n\t\t\t        controller: 'ViewsController',\r\n\t\t\t        controllerAs : 'views'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n        \r\n        .state('app.services_views.views.retrieve', {\r\n            url: \"/retrieve\",\r\n            deepStateRedirect: true,\r\n\t        sticky: true,\r\n            views : {\r\n\t        \t'retrieve' : {\r\n\t\t\t        templateUrl: './app/components/views/templates/retrieve.html'\r\n\t        \t}\r\n\t    \t}\r\n        });\r\n      \r\n\t\t\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.config', [])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['DrupalApiConstant'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction(DrupalApiConstant) \r\n\t{ \r\n\t\t//drupal services configurations\r\n\t\tDrupalApiConstant.drupal_instance = 'http://dev-drulap-headless.pantheon.io/';\r\n\t\tDrupalApiConstant.api_endpoint += 'v1/';\r\n\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\nangular\r\n    .module('ngDrupalServicesTests.states', ['ui.router','ct.ui.router.extras',\r\n                                             \r\n                                             'ngDrupalServicesTests.app.controller',\r\n                                             \r\n                                             'ngDrupalServicesTests.home.controller',\r\n                                             'ngDrupalServicesTests.commons.controller',\r\n                                             'ngDrupalServicesTests.services_3x.controller',\r\n                                             'ngDrupalServicesTests.services_views.controller',\r\n                                              \r\n                                             //commons\r\n                                             'ngDrupalServicesTests.authentication.states',\r\n                                             \r\n                                             //services_3x\r\n                                             'ngDrupalServicesTests.comment.states',\r\n                                             'ngDrupalServicesTests.system.states',\r\n                                             'ngDrupalServicesTests.user.states',\r\n                                             'ngDrupalServicesTests.node.states',\r\n                                             'ngDrupalServicesTests.file.states',\r\n                                             'ngDrupalServicesTests.taxonomy_term.states',\r\n                                             'ngDrupalServicesTests.taxonomy_vocabulary.states',\r\n                                             \r\n                                             //services_views\r\n                                             'ngDrupalServicesTests.views.states'\r\n                                             ])\r\n    .config(configFunction);\r\n\r\n\tconfigFunction.$inject = ['$stateProvider', '$urlRouterProvider'];\r\n\r\n\t/** @ngInject */ \r\n\tfunction configFunction($stateProvider, $urlRouterProvider) \r\n\t{ \r\n\t\t\r\n\t\t//routing configurations\r\n\t\t$urlRouterProvider.otherwise('/app/home');\r\n\t    \r\n\t    $stateProvider\r\n\t\r\n\t    //holds the navigation and toggled state of menu\r\n\t    .state('app', {\r\n            url: \"/app\",\r\n            abstract: true,\r\n            templateUrl: \"app/app.view.html\",\r\n            controller: 'AppController',\r\n            controllerAs : 'app'\r\n        })\r\n        .state('app.home', {\r\n\t        url: '/home',\r\n\t        deepStateRedirect: true,\r\n\t        sticky: true,\r\n\t        views : {\r\n\t        \t'mainNavContent' : {\r\n\t        \t\ttemplateUrl: './app/components/home/home.view.html',\r\n\t    \t        controller: 'HomeController',\r\n\t                controllerAs : 'home'\r\n\t        \t}\r\n\t        }\r\n\t        \r\n\t    })\r\n\t    \r\n\t    .state('app.commons', {\r\n            url: \"/commons\",\r\n            abstract: true,\r\n\t        views : {\r\n\t        \t'mainNavContent' : {\r\n\t\t\t        templateUrl: './app/components/commons/commons.view.html',\r\n\t\t\t        controller: 'CommonsController',\r\n\t\t\t        controllerAs : 'authentication'\r\n\t        \t}\r\n\t    \t}\r\n        })\r\n\t    \r\n        .state('app.services_3x', {\r\n            url: \"/services_3x\",\r\n            abstract: true,\r\n            views: {\r\n\t\t\t      'mainNavContent': {\r\n\t\t\t    \t  templateUrl\t\t: \"app/components/services_3x/services_3x.view.html\",\r\n\t\t\t    \t  controller\t\t: 'Services_3xController',\r\n\t\t\t          controllerAs \t\t: 'services_3x',\r\n\t\t\t      }\r\n\t\t\t    }\r\n        })\r\n        \r\n        .state('app.services_views', {\r\n            url: \"/services_views\",\r\n            abstract: true,\r\n            views: {\r\n\t\t\t      'mainNavContent': {\r\n\t\t\t    \t  templateUrl\t\t: \"app/components/services_views/services_views.view.html\",\r\n\t\t\t    \t  controller\t\t: 'Services_ViewsController',\r\n\t\t\t          controllerAs \t\t: 'services_views',\r\n\t\t\t      }\r\n\t\t\t    }\r\n        });\r\n       \r\n\t};\r\n\t\r\n\r\n\r\n})();\r\n\r\n\r\n\r\n",";(function() {\r\n    'use strict';\r\n\r\n\tangular\r\n\t.module('ngDrupalServicesTests', ['d7-services', 'ngDrupalServicesTests.config', 'ngDrupalServicesTests.states', \r\n\t                                  'ui.bootstrap', 'ngMessages', 'commons.directives.formControlFeedback']);\r\n\r\n})();"],"sourceRoot":"/source/"}